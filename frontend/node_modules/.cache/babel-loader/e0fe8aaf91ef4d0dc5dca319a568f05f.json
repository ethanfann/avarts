{"ast":null,"code":"var _jsxFileName = \"/home/ethan/avarts/frontend/src/App.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Main from \"./components/Main\";\nimport { CurrentUserComponent } from \"./generated/graphql\";\nimport UserContext from \"./userContext\";\n\nrequire(\"halfmoon/css/halfmoon.min.css\");\n\nconst halfmoon = require(\"halfmoon\");\n\nconst App = () => {\n  const [user, setUser] = useState(); // const { data, error, loading } = useCurrentUserQuery();\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  }; // useEffect(() => {\n  //   if (data) {\n  //     if (data && data.currentUser) {\n  //       console.log(data);\n  //       setUser(data.currentUser);\n  //     }\n  //   }\n  //   if (error) {\n  //     // localStorage.removeItem(\"token\");\n  //     // window.location.reload();\n  //     console.log(error);\n  //   }\n  //   if (loading) {\n  //     console.log(loading);\n  //   }\n  // }, [data, error, loading]);\n\n\n  useEffect(() => {\n    document.body.classList.add(\"with-custom-webkit-scrollbars\");\n    document.body.classList.add(\"with-custom-css-scrollbars\");\n    const darkModePref = localStorage.getItem(\"prefer-dark-mode\");\n\n    if (darkModePref === \"true\") {\n      halfmoon.toggleDarkMode();\n    }\n\n    halfmoon.onDOMContentLoaded();\n  }, []);\n\n  const doThething = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(CurrentUserComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    var _data$currentUser, _data$currentUser2;\n\n    if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mt-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, doThething(data), \"Loading\");\n    if (error) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 27\n      }\n    }, \"Error\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: {\n        user: {\n          id: data === null || data === void 0 ? void 0 : (_data$currentUser = data.currentUser) === null || _data$currentUser === void 0 ? void 0 : _data$currentUser.id,\n          name: data === null || data === void 0 ? void 0 : (_data$currentUser2 = data.currentUser) === null || _data$currentUser2 === void 0 ? void 0 : _data$currentUser2.name\n        },\n        logout: logout\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    })));\n  }) // <div>\n  //   <UserContext.Provider\n  //     value={{\n  //       user: {\n  //         id: user?.id,\n  //         name: user?.name,\n  //       },\n  //       logout: logout,\n  //     }}\n  //   >\n  //     {user && user.id === \"\" ? <SignUp /> : <Main />}\n  //   </UserContext.Provider>\n  // </div>\n  ;\n};\n\nexport default App;","map":{"version":3,"sources":["/home/ethan/avarts/frontend/src/App.tsx"],"names":["React","useEffect","useState","Main","CurrentUserComponent","UserContext","require","halfmoon","App","user","setUser","logout","localStorage","removeItem","window","location","reload","document","body","classList","add","darkModePref","getItem","toggleDarkMode","onDOMContentLoaded","doThething","data","console","log","loading","error","id","currentUser","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,oBAAT,QAA2C,qBAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEAC,OAAO,CAAC,+BAAD,CAAP;;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AAIA,MAAME,GAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,EAAhC,CAD0B,CAE1B;;AAEA,QAAMS,MAAM,GAAG,MAAM;AACnBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAHD,CAJ0B,CAS1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,+BAA5B;AACAH,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,4BAA5B;AAEA,UAAMC,YAAY,GAAGT,YAAY,CAACU,OAAb,CAAqB,kBAArB,CAArB;;AAEA,QAAID,YAAY,KAAK,MAArB,EAA6B;AAC3Bd,MAAAA,QAAQ,CAACgB,cAAT;AACD;;AAEDhB,IAAAA,QAAQ,CAACiB,kBAAT;AACD,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMC,UAAU,GAAIC,IAAD,IAAe;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFD;;AAIA,sBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBJ,IAAAA;AAAlB,GAAD,KAA8B;AAAA;;AAC7B,QAAIG,OAAJ,EACE,oBACE;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,UAAU,CAACC,IAAD,CADb,YADF;AAMF,QAAII,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAEX,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLrB,QAAAA,IAAI,EAAE;AACJsB,UAAAA,EAAE,EAAEL,IAAF,aAAEA,IAAF,4CAAEA,IAAI,CAAEM,WAAR,sDAAE,kBAAmBD,EADnB;AAEJE,UAAAA,IAAI,EAAEP,IAAF,aAAEA,IAAF,6CAAEA,IAAI,CAAEM,WAAR,uDAAE,mBAAmBC;AAFrB,SADD;AAKLtB,QAAAA,MAAM,EAAEA;AALH,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF,CADF;AAgBD,GA3BH,CADF,CA+BE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CF;AA6CD,CAxFD;;AA0FA,eAAeH,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Main from \"./components/Main\";\nimport { CurrentUserComponent, User } from \"./generated/graphql\";\nimport UserContext from \"./userContext\";\n\nrequire(\"halfmoon/css/halfmoon.min.css\");\n\nconst halfmoon = require(\"halfmoon\");\n\ntype UserType = Pick<User, \"id\" | \"name\">;\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState<UserType>();\n  // const { data, error, loading } = useCurrentUserQuery();\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  // useEffect(() => {\n  //   if (data) {\n  //     if (data && data.currentUser) {\n  //       console.log(data);\n  //       setUser(data.currentUser);\n  //     }\n  //   }\n  //   if (error) {\n  //     // localStorage.removeItem(\"token\");\n  //     // window.location.reload();\n  //     console.log(error);\n  //   }\n  //   if (loading) {\n  //     console.log(loading);\n  //   }\n  // }, [data, error, loading]);\n\n  useEffect(() => {\n    document.body.classList.add(\"with-custom-webkit-scrollbars\");\n    document.body.classList.add(\"with-custom-css-scrollbars\");\n\n    const darkModePref = localStorage.getItem(\"prefer-dark-mode\");\n\n    if (darkModePref === \"true\") {\n      halfmoon.toggleDarkMode();\n    }\n\n    halfmoon.onDOMContentLoaded();\n  }, []);\n\n  const doThething = (data: any) => {\n    console.log(data);\n  };\n\n  return (\n    <CurrentUserComponent>\n      {({ loading, error, data }) => {\n        if (loading)\n          return (\n            <div className=\"d-flex justify-content-center mt-20\">\n              {doThething(data)}Loading\n            </div>\n          );\n\n        if (error) return <div>Error</div>;\n\n        return (\n          <div>\n            <UserContext.Provider\n              value={{\n                user: {\n                  id: data?.currentUser?.id,\n                  name: data?.currentUser?.name,\n                },\n                logout: logout,\n              }}\n            >\n              {/* {data?.currentUser?.id === \"0\" ? <SignUp /> : <Main />} */}\n              <Main />\n            </UserContext.Provider>\n          </div>\n        );\n      }}\n    </CurrentUserComponent>\n\n    // <div>\n    //   <UserContext.Provider\n    //     value={{\n    //       user: {\n    //         id: user?.id,\n    //         name: user?.name,\n    //       },\n    //       logout: logout,\n    //     }}\n    //   >\n    //     {user && user.id === \"\" ? <SignUp /> : <Main />}\n    //   </UserContext.Provider>\n    // </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
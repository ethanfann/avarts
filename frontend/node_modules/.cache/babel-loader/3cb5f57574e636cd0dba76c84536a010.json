{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { invariant } from 'ts-invariant';\nimport { ApolloConsumer } from \"../context/index.js\";\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n\nexport function withApollo(WrappedComponent, operationOptions) {\n  if (operationOptions === void 0) {\n    operationOptions = {};\n  }\n\n  var withDisplayName = \"withApollo(\" + getDisplayName(WrappedComponent) + \")\";\n\n  var WithApollo = function (_super) {\n    __extends(WithApollo, _super);\n\n    function WithApollo(props) {\n      var _this = _super.call(this, props) || this;\n\n      _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n      return _this;\n    }\n\n    WithApollo.prototype.getWrappedInstance = function () {\n      process.env.NODE_ENV === \"production\" ? invariant(operationOptions.withRef, 31) : invariant(operationOptions.withRef, \"To access the wrapped instance, you need to specify \" + \"{ withRef: true } in the options\");\n      return this.wrappedInstance;\n    };\n\n    WithApollo.prototype.setWrappedInstance = function (ref) {\n      this.wrappedInstance = ref;\n    };\n\n    WithApollo.prototype.render = function () {\n      var _this = this;\n\n      return React.createElement(ApolloConsumer, null, function (client) {\n        var props = Object.assign({}, _this.props, {\n          client: client,\n          ref: operationOptions.withRef ? _this.setWrappedInstance : undefined\n        });\n        return React.createElement(WrappedComponent, __assign({}, props));\n      });\n    };\n\n    WithApollo.displayName = withDisplayName;\n    WithApollo.WrappedComponent = WrappedComponent;\n    return WithApollo;\n  }(React.Component);\n\n  return hoistNonReactStatics(WithApollo, WrappedComponent, {});\n}","map":{"version":3,"sources":["../../../src/react/hoc/withApollo.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP,MAAiC,yBAAjC;AACA,SAAS,SAAT,QAA0B,cAA1B;AAEA,SAAS,cAAT,QAA+B,qBAA/B;;AAGA,SAAS,cAAT,CAA2B,gBAA3B,EAAmE;AACjE,SAAO,gBAAgB,CAAC,WAAjB,IAAgC,gBAAgB,CAAC,IAAjD,IAAyD,WAAhE;AACD;;AAED,OAAM,SAAU,UAAV,CACJ,gBADI,EAIJ,gBAJI,EAImD;AAAvD,MAAA,gBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,GAAA,EAAA;AAAuD;;AAEvD,MAAM,eAAe,GAAG,gBAAc,cAAc,CAAC,gBAAD,CAA5B,GAA8C,GAAtE;;AAEA,MAAA,UAAA,GAAA,UAAA,MAAA,EAAA;AAAyB,IAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;;AAOvB,aAAA,UAAA,CAAY,KAAZ,EAAyC;AAAzC,UAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADd;;AAEE,MAAA,KAAI,CAAC,kBAAL,GAA0B,KAAI,CAAC,kBAAL,CAAwB,IAAxB,CAA6B,KAA7B,CAA1B;;AACD;;AAED,IAAA,UAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,YAAA;AACE,MAAA,OAAA,CAAA,GAAA,CACE,QADF,KACE,YADF,GAEE,SAAA,CAAA,gBAAA,CAAA,OAAA,EAAA,EAAA,CAFF,GAEE,SAAsD,CAAA,gBAAA,CAAA,OAAA,EAAA,yDACpD,kCADoD,CAFxD;AAMA,aAAO,KAAK,eAAZ;AACD,KARD;;AAUA,IAAA,UAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,UAAmB,GAAnB,EAAqE;AACnE,WAAK,eAAL,GAAuB,GAAvB;AACD,KAFD;;AAIA,IAAA,UAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AAAA,UAAA,KAAA,GAAA,IAAA;;AACE,aACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe,IAAf,EACG,UAAA,MAAA,EAAM;AACL,YAAM,KAAK,GAAG,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAI,CAAC,KAAvB,EAA8B;AAC1C,UAAA,MAAM,EAAA,MADoC;AAE1C,UAAA,GAAG,EAAE,gBAAgB,CAAC,OAAjB,GACD,KAAI,CAAC,kBADJ,GAED;AAJsC,SAA9B,CAAd;AAMA,eAAO,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB,QAAA,CAAA,EAAA,EAAK,KAAL,CAAjB,CAAP;AACD,OATH,CADF;AAaD,KAdD;;AAzBO,IAAA,UAAA,CAAA,WAAA,GAAc,eAAd;AACA,IAAA,UAAA,CAAA,gBAAA,GAAmB,gBAAnB;AAuCT,WAAA,UAAA;AAAC,GAzCD,CAAyB,KAAK,CAAC,SAA/B,CAAA;;AA4CA,SAAO,oBAAoB,CAAC,UAAD,EAAa,gBAAb,EAA+B,EAA/B,CAA3B;AACD","sourceRoot":"","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { invariant } from 'ts-invariant';\nimport { ApolloConsumer } from \"../context/index.js\";\nfunction getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nexport function withApollo(WrappedComponent, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var withDisplayName = \"withApollo(\" + getDisplayName(WrappedComponent) + \")\";\n    var WithApollo = (function (_super) {\n        __extends(WithApollo, _super);\n        function WithApollo(props) {\n            var _this = _super.call(this, props) || this;\n            _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n            return _this;\n        }\n        WithApollo.prototype.getWrappedInstance = function () {\n            process.env.NODE_ENV === \"production\" ? invariant(operationOptions.withRef, 31) : invariant(operationOptions.withRef, \"To access the wrapped instance, you need to specify \" +\n                \"{ withRef: true } in the options\");\n            return this.wrappedInstance;\n        };\n        WithApollo.prototype.setWrappedInstance = function (ref) {\n            this.wrappedInstance = ref;\n        };\n        WithApollo.prototype.render = function () {\n            var _this = this;\n            return (React.createElement(ApolloConsumer, null, function (client) {\n                var props = Object.assign({}, _this.props, {\n                    client: client,\n                    ref: operationOptions.withRef\n                        ? _this.setWrappedInstance\n                        : undefined\n                });\n                return React.createElement(WrappedComponent, __assign({}, props));\n            }));\n        };\n        WithApollo.displayName = withDisplayName;\n        WithApollo.WrappedComponent = WrappedComponent;\n        return WithApollo;\n    }(React.Component));\n    return hoistNonReactStatics(WithApollo, WrappedComponent, {});\n}\n//# sourceMappingURL=withApollo.js.map"]},"metadata":{},"sourceType":"module"}
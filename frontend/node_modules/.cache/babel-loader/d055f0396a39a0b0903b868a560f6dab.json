{"ast":null,"code":"import { __rest } from \"tslib\";\nimport PropTypes from 'prop-types';\nimport { useQuery } from \"../hooks/index.js\";\nexport function Query(props) {\n  var children = props.children,\n      query = props.query,\n      options = __rest(props, [\"children\", \"query\"]);\n\n  var result = useQuery(query, options);\n  return children && result ? children(result) : null;\n}\n\n(function (Query) {\n  Query.propTypes = {\n    client: PropTypes.object,\n    children: PropTypes.func.isRequired,\n    fetchPolicy: PropTypes.string,\n    notifyOnNetworkStatusChange: PropTypes.bool,\n    onCompleted: PropTypes.func,\n    onError: PropTypes.func,\n    pollInterval: PropTypes.number,\n    query: PropTypes.object.isRequired,\n    variables: PropTypes.object,\n    ssr: PropTypes.bool,\n    partialRefetch: PropTypes.bool,\n    returnPartialData: PropTypes.bool\n  };\n})(Query || (Query = {}));","map":{"version":3,"sources":["../../../src/react/components/Query.tsx"],"names":[],"mappings":";AAAA,OAAO,SAAP,MAAsB,YAAtB;AAIA,SAAS,QAAT,QAAyB,mBAAzB;AAEA,OAAM,SAAU,KAAV,CACJ,KADI,EAC2C;AAEvC,MAAA,QAAQ,GAAwB,KAAK,CAA7B,QAAR;AAAA,MAAU,KAAK,GAAiB,KAAK,CAAtB,KAAf;AAAA,MAAoB,OAAO,GAAA,MAAA,CAAK,KAAL,EAA7B,CAAA,UAAA,EAAA,OAAA,CAA6B,CAA3B;;AACR,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAD,EAAQ,OAAR,CAAvB;AACA,SAAO,QAAQ,IAAI,MAAZ,GAAqB,QAAQ,CAAC,MAAD,CAA7B,GAAwC,IAA/C;AACD;;AAED,CAAA,UAAiB,KAAjB,EAAsB;AACP,EAAA,KAAA,CAAA,SAAA,GAAY;AACvB,IAAA,MAAM,EAAE,SAAS,CAAC,MADK;AAEvB,IAAA,QAAQ,EAAE,SAAS,CAAC,IAAV,CAAe,UAFF;AAGvB,IAAA,WAAW,EAAE,SAAS,CAAC,MAHA;AAIvB,IAAA,2BAA2B,EAAE,SAAS,CAAC,IAJhB;AAKvB,IAAA,WAAW,EAAE,SAAS,CAAC,IALA;AAMvB,IAAA,OAAO,EAAE,SAAS,CAAC,IANI;AAOvB,IAAA,YAAY,EAAE,SAAS,CAAC,MAPD;AAQvB,IAAA,KAAK,EAAE,SAAS,CAAC,MAAV,CAAiB,UARD;AASvB,IAAA,SAAS,EAAE,SAAS,CAAC,MATE;AAUvB,IAAA,GAAG,EAAE,SAAS,CAAC,IAVQ;AAWvB,IAAA,cAAc,EAAE,SAAS,CAAC,IAXH;AAYvB,IAAA,iBAAiB,EAAE,SAAS,CAAC;AAZN,GAAZ;AAcd,CAfD,EAAiB,KAAK,KAAL,KAAK,GAAA,EAAA,CAAtB","sourceRoot":"","sourcesContent":["import { __rest } from \"tslib\";\nimport PropTypes from 'prop-types';\nimport { useQuery } from \"../hooks/index.js\";\nexport function Query(props) {\n    var children = props.children, query = props.query, options = __rest(props, [\"children\", \"query\"]);\n    var result = useQuery(query, options);\n    return children && result ? children(result) : null;\n}\n(function (Query) {\n    Query.propTypes = {\n        client: PropTypes.object,\n        children: PropTypes.func.isRequired,\n        fetchPolicy: PropTypes.string,\n        notifyOnNetworkStatusChange: PropTypes.bool,\n        onCompleted: PropTypes.func,\n        onError: PropTypes.func,\n        pollInterval: PropTypes.number,\n        query: PropTypes.object.isRequired,\n        variables: PropTypes.object,\n        ssr: PropTypes.bool,\n        partialRefetch: PropTypes.bool,\n        returnPartialData: PropTypes.bool\n    };\n})(Query || (Query = {}));\n//# sourceMappingURL=Query.js.map"]},"metadata":{},"sourceType":"module"}
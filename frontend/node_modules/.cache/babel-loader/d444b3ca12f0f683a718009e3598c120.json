{"ast":null,"code":"var _jsxFileName = \"/home/ethan/avarts/frontend/src/App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport Helmet from 'react-helmet';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport UserCard from './components/UserCard';\nimport { useMeQuery } from './generated/graphql';\nimport UserContext from './userContext';\nimport { toggleSidebar } from './utils/sideBar';\n\nrequire('halfmoon/css/halfmoon.min.css');\n\nconst halfmoon = require('halfmoon');\n\nconst App = () => {\n  const [user, setUser] = useState();\n  const {\n    data,\n    error,\n    loading\n  } = useMeQuery();\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    if (data) {\n      if (data && data.me) {\n        console.log(data.me);\n        setUser(data.me);\n      }\n    }\n\n    if (error) {\n      console.log(error);\n    }\n\n    if (loading) {\n      console.log(loading);\n    }\n  }, [data, error, loading]);\n  useEffect(() => {\n    document.body.classList.add('with-custom-webkit-scrollbars');\n    document.body.classList.add('with-custom-css-scrollbars');\n    const darkModePref = localStorage.getItem('prefer-dark-mode');\n\n    if (darkModePref === 'true') {\n      halfmoon.toggleDarkMode();\n    }\n\n    halfmoon.onDOMContentLoaded();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div\n    //   id=\"pageWrapper\"\n    //   className=\"page-wrapper with-navbar with-sidebar\" //with-sidebar\n    //   data-sidebar-type=\"overlayed-all\"\n    // >\n    //   <div className=\"sidebar-overlay\" onClick={toggleSidebar}></div>\n    //   <div className=\"sidebar border-0\">\n    //     <UserCard />\n    //   </div>\n    //   <Helmet>\n    //     <meta charSet=\"utf-8\" />\n    //     <title>Avarts</title>\n    //   </Helmet>\n    //   <Header />\n    //   {user ? (\n    //     <UserContext.Provider\n    //       value={{\n    //         user: {\n    //           id: user.id,\n    //           name: user.name,\n    //           img: user.img,\n    //           // TODO: This is ugly. Find a better way to handle when a User has no activities\n    //           latestActivity:\n    //             user.latestActivity && user.latestActivity.title\n    //               ? user.latestActivity\n    //               : { title: '', createdAt: '' },\n    //           activityCount: user.activityCount,\n    //         },\n    //         logout: logout,\n    //       }}\n    //     >\n    //       <Main />\n    //     </UserContext.Provider>\n    //   ) : (\n    //     <SignUp />\n    //   )}\n    // </div>\n    React.createElement(UserContext.Provider, {\n      value: {\n        user: {\n          id: user ? user.id : '0',\n          name: user ? user.name : '',\n          img: user ? user.img : '',\n          // TODO: This is ugly. Find a better way to handle when a User has no activities\n          latestActivity: user && user.latestActivity && user.latestActivity.title ? user.latestActivity : {\n            title: '',\n            createdAt: ''\n          },\n          activityCount: user ? user.activityCount : 0\n        },\n        logout: logout\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"pageWrapper\",\n      className: \"page-wrapper with-navbar with-sidebar\" //with-sidebar\n      ,\n      \"data-sidebar-type\": \"overlayed-all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-overlay\",\n      onClick: toggleSidebar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UserCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"meta\", {\n      charSet: \"utf-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"Avarts\")), /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    })))\n  );\n};\n\nexport default App;","map":{"version":3,"sources":["/home/ethan/avarts/frontend/src/App.tsx"],"names":["React","useEffect","useState","Helmet","Header","Main","UserCard","useMeQuery","UserContext","toggleSidebar","require","halfmoon","App","user","setUser","data","error","loading","logout","localStorage","removeItem","window","location","reload","me","console","log","document","body","classList","add","darkModePref","getItem","toggleDarkMode","onDOMContentLoaded","id","name","img","latestActivity","title","createdAt","activityCount"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Helmet from 'react-helmet'\nimport Header from './components/Header'\nimport Main from './components/Main'\nimport UserCard from './components/UserCard'\nimport { useMeQuery } from './generated/graphql'\nimport UserContext from './userContext'\nimport { toggleSidebar } from './utils/sideBar'\n\nrequire('halfmoon/css/halfmoon.min.css')\n\nconst halfmoon = require('halfmoon')\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState<any>()\n  const { data, error, loading } = useMeQuery()\n\n  const logout = () => {\n    localStorage.removeItem('token')\n    window.location.reload()\n  }\n\n  useEffect(() => {\n    if (data) {\n      if (data && data.me) {\n        console.log(data.me)\n        setUser(data.me)\n      }\n    }\n    if (error) {\n      console.log(error)\n    }\n    if (loading) {\n      console.log(loading)\n    }\n  }, [data, error, loading])\n\n  useEffect(() => {\n    document.body.classList.add('with-custom-webkit-scrollbars')\n    document.body.classList.add('with-custom-css-scrollbars')\n\n    const darkModePref = localStorage.getItem('prefer-dark-mode')\n\n    if (darkModePref === 'true') {\n      halfmoon.toggleDarkMode()\n    }\n\n    halfmoon.onDOMContentLoaded()\n  }, [])\n\n  return (\n    // <div\n    //   id=\"pageWrapper\"\n    //   className=\"page-wrapper with-navbar with-sidebar\" //with-sidebar\n    //   data-sidebar-type=\"overlayed-all\"\n    // >\n    //   <div className=\"sidebar-overlay\" onClick={toggleSidebar}></div>\n    //   <div className=\"sidebar border-0\">\n    //     <UserCard />\n    //   </div>\n\n    //   <Helmet>\n    //     <meta charSet=\"utf-8\" />\n    //     <title>Avarts</title>\n    //   </Helmet>\n\n    //   <Header />\n\n    //   {user ? (\n    //     <UserContext.Provider\n    //       value={{\n    //         user: {\n    //           id: user.id,\n    //           name: user.name,\n    //           img: user.img,\n    //           // TODO: This is ugly. Find a better way to handle when a User has no activities\n    //           latestActivity:\n    //             user.latestActivity && user.latestActivity.title\n    //               ? user.latestActivity\n    //               : { title: '', createdAt: '' },\n    //           activityCount: user.activityCount,\n    //         },\n    //         logout: logout,\n    //       }}\n    //     >\n    //       <Main />\n    //     </UserContext.Provider>\n    //   ) : (\n    //     <SignUp />\n    //   )}\n    // </div>\n    <UserContext.Provider\n      value={{\n        user: {\n          id: user ? user.id : '0',\n          name: user ? user.name : '',\n          img: user ? user.img : '',\n          // TODO: This is ugly. Find a better way to handle when a User has no activities\n          latestActivity:\n            user && user.latestActivity && user.latestActivity.title\n              ? user.latestActivity\n              : { title: '', createdAt: '' },\n          activityCount: user ? user.activityCount : 0,\n        },\n        logout: logout,\n      }}\n    >\n      <div\n        id=\"pageWrapper\"\n        className=\"page-wrapper with-navbar with-sidebar\" //with-sidebar\n        data-sidebar-type=\"overlayed-all\"\n      >\n        <div className=\"sidebar-overlay\" onClick={toggleSidebar}></div>\n        <div className=\"sidebar border-0\">\n          <UserCard />\n        </div>\n\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Avarts</title>\n        </Helmet>\n\n        <Header />\n\n        <Main />\n      </div>\n    </UserContext.Provider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}
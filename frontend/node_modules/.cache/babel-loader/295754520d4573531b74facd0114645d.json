{"ast":null,"code":"function DOMParser(options) {\n  this.options = options || {\n    locator: {}\n  };\n}\n\nDOMParser.prototype.parseFromString = function (source, mimeType) {\n  var options = this.options;\n  var sax = new XMLReader();\n  var domBuilder = options.domBuilder || new DOMHandler(); //contentHandler and LexicalHandler\n\n  var errorHandler = options.errorHandler;\n  var locator = options.locator;\n  var defaultNSMap = options.xmlns || {};\n  var isHTML = /\\/x?html?$/.test(mimeType); //mimeType.toLowerCase().indexOf('html') > -1;\n\n  var entityMap = isHTML ? htmlEntity.entityMap : {\n    'lt': '<',\n    'gt': '>',\n    'amp': '&',\n    'quot': '\"',\n    'apos': \"'\"\n  };\n\n  if (locator) {\n    domBuilder.setDocumentLocator(locator);\n  }\n\n  sax.errorHandler = buildErrorHandler(errorHandler, domBuilder, locator);\n  sax.domBuilder = options.domBuilder || domBuilder;\n\n  if (isHTML) {\n    defaultNSMap[''] = 'http://www.w3.org/1999/xhtml';\n  }\n\n  defaultNSMap.xml = defaultNSMap.xml || 'http://www.w3.org/XML/1998/namespace';\n\n  if (source) {\n    sax.parse(source, defaultNSMap, entityMap);\n  } else {\n    sax.errorHandler.error(\"invalid doc source\");\n  }\n\n  return domBuilder.doc;\n};\n\nfunction buildErrorHandler(errorImpl, domBuilder, locator) {\n  if (!errorImpl) {\n    if (domBuilder instanceof DOMHandler) {\n      return domBuilder;\n    }\n\n    errorImpl = domBuilder;\n  }\n\n  var errorHandler = {};\n  var isCallback = errorImpl instanceof Function;\n  locator = locator || {};\n\n  function build(key) {\n    var fn = errorImpl[key];\n\n    if (!fn && isCallback) {\n      fn = errorImpl.length == 2 ? function (msg) {\n        errorImpl(key, msg);\n      } : errorImpl;\n    }\n\n    errorHandler[key] = fn && function (msg) {\n      fn('[xmldom ' + key + ']\\t' + msg + _locator(locator));\n    } || function () {};\n  }\n\n  build('warning');\n  build('error');\n  build('fatalError');\n  return errorHandler;\n} //console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\n\n\nfunction DOMHandler() {\n  this.cdata = false;\n}\n\nfunction position(locator, node) {\n  node.lineNumber = locator.lineNumber;\n  node.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\n\n\nDOMHandler.prototype = {\n  startDocument: function () {\n    this.doc = new DOMImplementation().createDocument(null, null, null);\n\n    if (this.locator) {\n      this.doc.documentURI = this.locator.systemId;\n    }\n  },\n  startElement: function (namespaceURI, localName, qName, attrs) {\n    var doc = this.doc;\n    var el = doc.createElementNS(namespaceURI, qName || localName);\n    var len = attrs.length;\n    appendElement(this, el);\n    this.currentElement = el;\n    this.locator && position(this.locator, el);\n\n    for (var i = 0; i < len; i++) {\n      var namespaceURI = attrs.getURI(i);\n      var value = attrs.getValue(i);\n      var qName = attrs.getQName(i);\n      var attr = doc.createAttributeNS(namespaceURI, qName);\n      this.locator && position(attrs.getLocator(i), attr);\n      attr.value = attr.nodeValue = value;\n      el.setAttributeNode(attr);\n    }\n  },\n  endElement: function (namespaceURI, localName, qName) {\n    var current = this.currentElement;\n    var tagName = current.tagName;\n    this.currentElement = current.parentNode;\n  },\n  startPrefixMapping: function (prefix, uri) {},\n  endPrefixMapping: function (prefix) {},\n  processingInstruction: function (target, data) {\n    var ins = this.doc.createProcessingInstruction(target, data);\n    this.locator && position(this.locator, ins);\n    appendElement(this, ins);\n  },\n  ignorableWhitespace: function (ch, start, length) {},\n  characters: function (chars, start, length) {\n    chars = _toString.apply(this, arguments); //console.log(chars)\n\n    if (chars) {\n      if (this.cdata) {\n        var charNode = this.doc.createCDATASection(chars);\n      } else {\n        var charNode = this.doc.createTextNode(chars);\n      }\n\n      if (this.currentElement) {\n        this.currentElement.appendChild(charNode);\n      } else if (/^\\s*$/.test(chars)) {\n        this.doc.appendChild(charNode); //process xml\n      }\n\n      this.locator && position(this.locator, charNode);\n    }\n  },\n  skippedEntity: function (name) {},\n  endDocument: function () {\n    this.doc.normalize();\n  },\n  setDocumentLocator: function (locator) {\n    if (this.locator = locator) {\n      // && !('lineNumber' in locator)){\n      locator.lineNumber = 0;\n    }\n  },\n  //LexicalHandler\n  comment: function (chars, start, length) {\n    chars = _toString.apply(this, arguments);\n    var comm = this.doc.createComment(chars);\n    this.locator && position(this.locator, comm);\n    appendElement(this, comm);\n  },\n  startCDATA: function () {\n    //used in characters() methods\n    this.cdata = true;\n  },\n  endCDATA: function () {\n    this.cdata = false;\n  },\n  startDTD: function (name, publicId, systemId) {\n    var impl = this.doc.implementation;\n\n    if (impl && impl.createDocumentType) {\n      var dt = impl.createDocumentType(name, publicId, systemId);\n      this.locator && position(this.locator, dt);\n      appendElement(this, dt);\n    }\n  },\n\n  /**\n   * @see org.xml.sax.ErrorHandler\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n   */\n  warning: function (error) {\n    console.warn('[xmldom warning]\\t' + error, _locator(this.locator));\n  },\n  error: function (error) {\n    console.error('[xmldom error]\\t' + error, _locator(this.locator));\n  },\n  fatalError: function (error) {\n    console.error('[xmldom fatalError]\\t' + error, _locator(this.locator));\n    throw error;\n  }\n};\n\nfunction _locator(l) {\n  if (l) {\n    return '\\n@' + (l.systemId || '') + '#[line:' + l.lineNumber + ',col:' + l.columnNumber + ']';\n  }\n}\n\nfunction _toString(chars, start, length) {\n  if (typeof chars == 'string') {\n    return chars.substr(start, length);\n  } else {\n    //java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n    if (chars.length >= start + length || start) {\n      return new java.lang.String(chars, start, length) + '';\n    }\n\n    return chars;\n  }\n}\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\n\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g, function (key) {\n  DOMHandler.prototype[key] = function () {\n    return null;\n  };\n});\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\n\nfunction appendElement(hander, node) {\n  if (!hander.currentElement) {\n    hander.doc.appendChild(node);\n  } else {\n    hander.currentElement.appendChild(node);\n  }\n} //appendChild and setAttributeNS are preformance key\n//if(typeof require == 'function'){\n\n\nvar htmlEntity = require('./entities');\n\nvar XMLReader = require('./sax').XMLReader;\n\nvar DOMImplementation = exports.DOMImplementation = require('./dom').DOMImplementation;\n\nexports.XMLSerializer = require('./dom').XMLSerializer;\nexports.DOMParser = DOMParser; //}","map":{"version":3,"sources":["/home/ethan/avarts/frontend/node_modules/xmldom/lib/dom-parser.js"],"names":["DOMParser","options","locator","prototype","parseFromString","source","mimeType","sax","XMLReader","domBuilder","DOMHandler","errorHandler","defaultNSMap","xmlns","isHTML","test","entityMap","htmlEntity","setDocumentLocator","buildErrorHandler","xml","parse","error","doc","errorImpl","isCallback","Function","build","key","fn","length","msg","_locator","cdata","position","node","lineNumber","columnNumber","startDocument","DOMImplementation","createDocument","documentURI","systemId","startElement","namespaceURI","localName","qName","attrs","el","createElementNS","len","appendElement","currentElement","i","getURI","value","getValue","getQName","attr","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","tagName","parentNode","startPrefixMapping","prefix","uri","endPrefixMapping","processingInstruction","target","data","ins","createProcessingInstruction","ignorableWhitespace","ch","start","characters","chars","_toString","apply","arguments","charNode","createCDATASection","createTextNode","appendChild","skippedEntity","name","endDocument","normalize","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","warning","console","warn","fatalError","l","substr","java","lang","String","replace","hander","require","exports","XMLSerializer"],"mappings":"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","sourcesContent":["function DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML?htmlEntity.entityMap:{'lt':'<','gt':'>','amp':'&','quot':'\"','apos':\"'\"};\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap['']= 'http://www.w3.org/1999/xhtml';\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || 'http://www.w3.org/XML/1998/namespace';\n\tif(source){\n\t\tsax.parse(source,defaultNSMap,entityMap);\n\t}else{\n\t\tsax.errorHandler.error(\"invalid doc source\");\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tconsole.error('[xmldom fatalError]\\t'+error,_locator(this.locator));\n\t    throw error;\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\n//if(typeof require == 'function'){\nvar htmlEntity = require('./entities');\nvar XMLReader = require('./sax').XMLReader;\nvar DOMImplementation = exports.DOMImplementation = require('./dom').DOMImplementation;\nexports.XMLSerializer = require('./dom').XMLSerializer ;\nexports.DOMParser = DOMParser;\n//}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */","map":{"version":3,"sources":["/home/ethan/avarts/frontend/node_modules/graphql/language/tokenKind.mjs"],"names":["TokenKind","Object","freeze","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","NAME","INT","FLOAT","STRING","BLOCK_STRING","COMMENT"],"mappings":"AAAA;;;;AAIA,OAAO,IAAIA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc;AACnCC,EAAAA,GAAG,EAAE,OAD8B;AAEnCC,EAAAA,GAAG,EAAE,OAF8B;AAGnCC,EAAAA,IAAI,EAAE,GAH6B;AAInCC,EAAAA,MAAM,EAAE,GAJ2B;AAKnCC,EAAAA,GAAG,EAAE,GAL8B;AAMnCC,EAAAA,OAAO,EAAE,GAN0B;AAOnCC,EAAAA,OAAO,EAAE,GAP0B;AAQnCC,EAAAA,MAAM,EAAE,KAR2B;AASnCC,EAAAA,KAAK,EAAE,GAT4B;AAUnCC,EAAAA,MAAM,EAAE,GAV2B;AAWnCC,EAAAA,EAAE,EAAE,GAX+B;AAYnCC,EAAAA,SAAS,EAAE,GAZwB;AAanCC,EAAAA,SAAS,EAAE,GAbwB;AAcnCC,EAAAA,OAAO,EAAE,GAd0B;AAenCC,EAAAA,IAAI,EAAE,GAf6B;AAgBnCC,EAAAA,OAAO,EAAE,GAhB0B;AAiBnCC,EAAAA,IAAI,EAAE,MAjB6B;AAkBnCC,EAAAA,GAAG,EAAE,KAlB8B;AAmBnCC,EAAAA,KAAK,EAAE,OAnB4B;AAoBnCC,EAAAA,MAAM,EAAE,QApB2B;AAqBnCC,EAAAA,YAAY,EAAE,aArBqB;AAsBnCC,EAAAA,OAAO,EAAE;AAtB0B,CAAd,CAAhB;AAwBP","sourcesContent":["/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n"]},"metadata":{},"sourceType":"module"}
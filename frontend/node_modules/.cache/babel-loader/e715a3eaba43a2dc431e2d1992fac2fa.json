{"ast":null,"code":"var _jsxFileName = \"/home/ethan/avarts/frontend/src/components/TimeLine/index.tsx\";\nimport { faBicycle, faComment } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DayJs from 'dayjs';\nimport React, { useState } from 'react';\nimport ClimbingBoxLoader from 'react-spinners/ClimbingBoxLoader';\nimport { ActivitiesByUserIdComponent } from '../../generated/graphql';\nimport { staticRideImg } from '../../utils/mapbox';\nimport ActivityCommentBox from './ActivityCommentBox';\nimport ActivityComments from './ActivityComments';\nimport MetricRow from './MetricRow';\n\nconst halfmoon = require('halfmoon');\n\nconst simplify = require('simplify-geojson'); // TODO: Don't parse JSON so much\n// TODO: Break out into more components\n\n\nconst TimeLine = props => {\n  const {\n    userId\n  } = props;\n  const [commentEnabled, enableComment] = useState();\n\n  const activityTime = geoJsonStr => {\n    const geoJson = JSON.parse(geoJsonStr);\n    const timeStr = DayJs(geoJson['features'][0].properties.time).format('MMMM D, YYYY--h:mm A');\n    const timeStrSplit = timeStr.split('--');\n    return DayJs(timeStrSplit[0]).isSame(DayJs(), 'day') ? `Today at ${timeStrSplit[1]}` : timeStrSplit[0] + ` at ${timeStrSplit[1]}`;\n  };\n\n  const activityImg = geoJsonStr => {\n    const json = JSON.parse(geoJsonStr);\n    const simplified = simplify(json, 0.002);\n    return staticRideImg(simplified['features'][0].geometry.coordinates);\n  };\n\n  const toggleComment = comment => {\n    let enabled = comment.enabled;\n\n    if ((commentEnabled === null || commentEnabled === void 0 ? void 0 : commentEnabled.enabled) && comment.activityId !== commentEnabled.activityId) {\n      enabled = true;\n    }\n\n    enableComment({\n      activityId: comment.activityId,\n      enabled: enabled\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ActivitiesByUserIdComponent, {\n    variables: {\n      userId: userId\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    var _data$activitiesByUse;\n\n    if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mt-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ClimbingBoxLoader, {\n      color: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }));\n    if (error) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 27\n      }\n    }, \"Error\");\n    if (data && ((_data$activitiesByUse = data.activitiesByUserId) === null || _data$activitiesByUse === void 0 ? void 0 : _data$activitiesByUse.length) === 0) return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mt-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-primary text-align-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, \"No Activities\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, data && data.activitiesByUserId && data.activitiesByUserId.length > 0 && data.activitiesByUserId.map((activity, index) => {\n      var _activity$userByUserI, _activity$userByUserI2, _activity$userByUserI3;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"card mb-0 pb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-column mr-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-fluid rounded-circle w-auto h-auto w-half\",\n        src: (activity === null || activity === void 0 ? void 0 : (_activity$userByUserI = activity.userByUserId) === null || _activity$userByUserI === void 0 ? void 0 : _activity$userByUserI.img) ? activity === null || activity === void 0 ? void 0 : (_activity$userByUserI2 = activity.userByUserId) === null || _activity$userByUserI2 === void 0 ? void 0 : _activity$userByUserI2.img : 'default-user-avatar.png',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"m-auto pt-5\",\n        size: \"2x\",\n        icon: faBicycle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 27\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"font-weight-bold m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, activity === null || activity === void 0 ? void 0 : (_activity$userByUserI3 = activity.userByUserId) === null || _activity$userByUserI3 === void 0 ? void 0 : _activity$userByUserI3.name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, activityTime(activity === null || activity === void 0 ? void 0 : activity.geoJson)), /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"card-title font-weight-bolder font-size-20 mt-5 text-primary mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }\n      }, activity === null || activity === void 0 ? void 0 : activity.title), /*#__PURE__*/React.createElement(MetricRow, {\n        geoJson: activity === null || activity === void 0 ? void 0 : activity.geoJson,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"align-center mt-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: activityImg(activity === null || activity === void 0 ? void 0 : activity.geoJson),\n        className: \"img-fluid rounded w-full h-full\",\n        alt: \"responsive image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"clearfix pt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"float-right d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn ml-5\",\n        onClick: () => (activity === null || activity === void 0 ? void 0 : activity.id) && toggleComment({\n          activityId: activity === null || activity === void 0 ? void 0 : activity.id,\n          enabled: !(commentEnabled === null || commentEnabled === void 0 ? void 0 : commentEnabled.enabled)\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"m-auto\",\n        icon: faComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }\n      })))), /*#__PURE__*/React.createElement(ActivityComments, {\n        comments: activity.comments.map(comment => {\n          var _comment$node, _comment$node2;\n\n          return {\n            id: (_comment$node = comment.node) === null || _comment$node === void 0 ? void 0 : _comment$node.id,\n            comment: (_comment$node2 = comment.node) === null || _comment$node2 === void 0 ? void 0 : _comment$node2.comment // userName: comment.node?.userByUserId?.name,\n            // userImg: comment.node?.userByUserId?.img,\n\n          };\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(ActivityCommentBox, {\n        hidden: !((commentEnabled === null || commentEnabled === void 0 ? void 0 : commentEnabled.enabled) && activity && activity.id === commentEnabled.activityId),\n        activityId: activity === null || activity === void 0 ? void 0 : activity.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }\n      }));\n    }));\n  });\n};\n\nexport default TimeLine;","map":{"version":3,"sources":["/home/ethan/avarts/frontend/src/components/TimeLine/index.tsx"],"names":["faBicycle","faComment","FontAwesomeIcon","DayJs","React","useState","ClimbingBoxLoader","ActivitiesByUserIdComponent","staticRideImg","ActivityCommentBox","ActivityComments","MetricRow","halfmoon","require","simplify","TimeLine","props","userId","commentEnabled","enableComment","activityTime","geoJsonStr","geoJson","JSON","parse","timeStr","properties","time","format","timeStrSplit","split","isSame","activityImg","json","simplified","geometry","coordinates","toggleComment","comment","enabled","activityId","loading","error","data","activitiesByUserId","length","map","activity","index","userByUserId","img","name","title","id","comments","node"],"mappings":"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","sourcesContent":["import { faBicycle, faComment } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport DayJs from 'dayjs'\nimport React, { useState } from 'react'\nimport ClimbingBoxLoader from 'react-spinners/ClimbingBoxLoader'\nimport { ActivitiesByUserIdComponent } from '../../generated/graphql'\nimport { staticRideImg } from '../../utils/mapbox'\nimport ActivityCommentBox from './ActivityCommentBox'\nimport ActivityComments from './ActivityComments'\nimport MetricRow from './MetricRow'\nconst halfmoon = require('halfmoon')\nconst simplify = require('simplify-geojson')\n\n// TODO: Don't parse JSON so much\n// TODO: Break out into more components\n\ntype CommentEnabledType = {\n  activityId: number\n  enabled: boolean\n}\n\ntype PropsType = {\n  userId: string\n}\n\nconst TimeLine: React.FC<PropsType> = (props: PropsType) => {\n  const { userId } = props\n  const [commentEnabled, enableComment] = useState<CommentEnabledType>()\n\n  const activityTime = (geoJsonStr: any) => {\n    const geoJson = JSON.parse(geoJsonStr)\n    const timeStr = DayJs(geoJson['features'][0].properties.time).format(\n      'MMMM D, YYYY--h:mm A'\n    )\n    const timeStrSplit = timeStr.split('--')\n\n    return DayJs(timeStrSplit[0]).isSame(DayJs(), 'day')\n      ? `Today at ${timeStrSplit[1]}`\n      : timeStrSplit[0] + ` at ${timeStrSplit[1]}`\n  }\n\n  const activityImg = (geoJsonStr: string) => {\n    const json = JSON.parse(geoJsonStr)\n    const simplified = simplify(json, 0.002)\n    return staticRideImg(simplified['features'][0].geometry.coordinates)\n  }\n\n  const toggleComment = (comment: CommentEnabledType) => {\n    let enabled = comment.enabled\n\n    if (\n      commentEnabled?.enabled &&\n      comment.activityId !== commentEnabled.activityId\n    ) {\n      enabled = true\n    }\n\n    enableComment({\n      activityId: comment.activityId,\n      enabled: enabled,\n    })\n  }\n\n  return (\n    <ActivitiesByUserIdComponent variables={{ userId: userId }}>\n      {({ loading, error, data }) => {\n        if (loading)\n          return (\n            <div className=\"d-flex justify-content-center mt-20\">\n              <ClimbingBoxLoader color=\"grey\" />\n            </div>\n          )\n\n        if (error) return <div>Error</div>\n\n        if (data && data.activitiesByUserId?.length === 0)\n          return (\n            <div className=\"d-flex justify-content-center mt-20\">\n              <h4 className=\"text-primary text-align-center\">No Activities</h4>\n            </div>\n          )\n\n        return (\n          <div>\n            {data &&\n              data.activitiesByUserId &&\n              data.activitiesByUserId.length > 0 &&\n              data.activitiesByUserId.map((activity: any, index: number) => (\n                <div key={index} className=\"card mb-0 pb-0\">\n                  <div className=\"container-fluid\">\n                    <div className=\"row\">\n                      <div className=\"col-2\">\n                        <div className=\"d-flex flex-column mr-10\">\n                          <div className=\"text-center\">\n                            <img\n                              className=\"img-fluid rounded-circle w-auto h-auto w-half\"\n                              src={\n                                activity?.userByUserId?.img\n                                  ? activity?.userByUserId?.img\n                                  : 'default-user-avatar.png'\n                              }\n                            ></img>\n                          </div>\n                          <FontAwesomeIcon\n                            className=\"m-auto pt-5\"\n                            size=\"2x\"\n                            icon={faBicycle}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"col-10\">\n                        <p className=\"font-weight-bold m-0\">\n                          {activity?.userByUserId?.name}\n                        </p>\n                        <p className=\"m-0\">{activityTime(activity?.geoJson)}</p>\n                        <h1 className=\"card-title font-weight-bolder font-size-20 mt-5 text-primary mb-5\">\n                          {activity?.title}\n                        </h1>\n                        <MetricRow geoJson={activity?.geoJson} />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"align-center mt-10\">\n                    <img\n                      src={activityImg(activity?.geoJson)}\n                      className=\"img-fluid rounded w-full h-full\"\n                      alt=\"responsive image\"\n                    />\n                  </div>\n                  <div className=\"clearfix pt-5\">\n                    <div className=\"float-right d-inline-block\">\n                      {/* <button className=\"btn\">\n                          <FontAwesomeIcon className=\"m-auto\" icon={faThumbsUp} />\n                        </button> */}\n                      <button\n                        className=\"btn ml-5\"\n                        onClick={() =>\n                          activity?.id &&\n                          toggleComment({\n                            activityId: activity?.id,\n                            enabled: !commentEnabled?.enabled,\n                          })\n                        }\n                      >\n                        <FontAwesomeIcon className=\"m-auto\" icon={faComment} />\n                      </button>\n                    </div>\n                  </div>\n\n                  <ActivityComments\n                    comments={activity.comments.map((comment: any) => ({\n                      id: comment.node?.id,\n                      comment: comment.node?.comment,\n                      // userName: comment.node?.userByUserId?.name,\n                      // userImg: comment.node?.userByUserId?.img,\n                    }))}\n                  />\n\n                  <ActivityCommentBox\n                    hidden={\n                      !(\n                        commentEnabled?.enabled &&\n                        activity &&\n                        activity.id === commentEnabled.activityId\n                      )\n                    }\n                    activityId={activity?.id}\n                  />\n                </div>\n              ))}\n          </div>\n        )\n      }}\n    </ActivitiesByUserIdComponent>\n  )\n}\n\nexport default TimeLine\n"]},"metadata":{},"sourceType":"module"}
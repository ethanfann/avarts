{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { isNonEmptyArray } from \"../utilities/index.js\";\nexport function isApolloError(err) {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\nvar generateErrorMessage = function (err) {\n  var message = '';\n\n  if (isNonEmptyArray(err.graphQLErrors)) {\n    err.graphQLErrors.forEach(function (graphQLError) {\n      var errorMessage = graphQLError ? graphQLError.message : 'Error message not found.';\n      message += errorMessage + \"\\n\";\n    });\n  }\n\n  if (err.networkError) {\n    message += err.networkError.message + \"\\n\";\n  }\n\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nvar ApolloError = function (_super) {\n  __extends(ApolloError, _super);\n\n  function ApolloError(_a) {\n    var graphQLErrors = _a.graphQLErrors,\n        networkError = _a.networkError,\n        errorMessage = _a.errorMessage,\n        extraInfo = _a.extraInfo;\n\n    var _this = _super.call(this, errorMessage) || this;\n\n    _this.graphQLErrors = graphQLErrors || [];\n    _this.networkError = networkError || null;\n    _this.message = errorMessage || generateErrorMessage(_this);\n    _this.extraInfo = extraInfo;\n    _this.__proto__ = ApolloError.prototype;\n    return _this;\n  }\n\n  return ApolloError;\n}(Error);\n\nexport { ApolloError };","map":{"version":3,"sources":["../../src/errors/index.ts"],"names":[],"mappings":";AAEA,SAAS,eAAT,QAAgC,uBAAhC;AAIA,OAAM,SAAU,aAAV,CAAwB,GAAxB,EAAkC;AACtC,SAAO,GAAG,CAAC,cAAJ,CAAmB,eAAnB,CAAP;AACD;;AAMD,IAAM,oBAAoB,GAAG,UAAC,GAAD,EAAiB;AAC5C,MAAI,OAAO,GAAG,EAAd;;AAEA,MAAI,eAAe,CAAC,GAAG,CAAC,aAAL,CAAnB,EAAwC;AACtC,IAAA,GAAG,CAAC,aAAJ,CAAkB,OAAlB,CAA0B,UAAC,YAAD,EAA2B;AACnD,UAAM,YAAY,GAAG,YAAY,GAC7B,YAAY,CAAC,OADgB,GAE7B,0BAFJ;AAGA,MAAA,OAAO,IAAO,YAAY,GAAA,IAA1B;AACD,KALD;AAMD;;AAED,MAAI,GAAG,CAAC,YAAR,EAAsB;AACpB,IAAA,OAAO,IAAO,GAAG,CAAC,YAAJ,CAAiB,OAAjB,GAAwB,IAAtC;AACD;;AAGD,EAAA,OAAO,GAAG,OAAO,CAAC,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAV;AACA,SAAO,OAAP;AACD,CAnBD;;AAqBA,IAAA,WAAA,GAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAa/B,WAAA,WAAA,CAAY,EAAZ,EAUC;QATC,aAAa,GAAA,EAAA,CAAA,a;QACb,YAAY,GAAA,EAAA,CAAA,Y;QACZ,YAAY,GAAA,EAAA,CAAA,Y;QACZ,SAAS,GAAA,EAAA,CAAA,S;;AAJX,QAAA,KAAA,GAWE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,YAAN,KAAmB,IAXrB;;AAYE,IAAA,KAAI,CAAC,aAAL,GAAqB,aAAa,IAAI,EAAtC;AACA,IAAA,KAAI,CAAC,YAAL,GAAoB,YAAY,IAAI,IAApC;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,YAAY,IAAI,oBAAoB,CAAC,KAAD,CAAnD;AACA,IAAA,KAAI,CAAC,SAAL,GAAiB,SAAjB;AAIC,IAAA,KAAY,CAAC,SAAb,GAAyB,WAAW,CAAC,SAArC;;AACF;;AACH,SAAA,WAAA;AAAC,CAlCD,CAAiC,KAAjC,CAAA","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { isNonEmptyArray } from \"../utilities/index.js\";\nexport function isApolloError(err) {\n    return err.hasOwnProperty('graphQLErrors');\n}\nvar generateErrorMessage = function (err) {\n    var message = '';\n    if (isNonEmptyArray(err.graphQLErrors)) {\n        err.graphQLErrors.forEach(function (graphQLError) {\n            var errorMessage = graphQLError\n                ? graphQLError.message\n                : 'Error message not found.';\n            message += errorMessage + \"\\n\";\n        });\n    }\n    if (err.networkError) {\n        message += err.networkError.message + \"\\n\";\n    }\n    message = message.replace(/\\n$/, '');\n    return message;\n};\nvar ApolloError = (function (_super) {\n    __extends(ApolloError, _super);\n    function ApolloError(_a) {\n        var graphQLErrors = _a.graphQLErrors, networkError = _a.networkError, errorMessage = _a.errorMessage, extraInfo = _a.extraInfo;\n        var _this = _super.call(this, errorMessage) || this;\n        _this.graphQLErrors = graphQLErrors || [];\n        _this.networkError = networkError || null;\n        _this.message = errorMessage || generateErrorMessage(_this);\n        _this.extraInfo = extraInfo;\n        _this.__proto__ = ApolloError.prototype;\n        return _this;\n    }\n    return ApolloError;\n}(Error));\nexport { ApolloError };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}
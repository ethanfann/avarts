{"ast":null,"code":"var _jsxFileName = \"/home/ethan/avarts/frontend/src/components/TimeLine/index.tsx\";\nimport { faBicycle, faComment } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DayJs from 'dayjs';\nimport React, { useState } from 'react';\nimport ClimbingBoxLoader from 'react-spinners/ClimbingBoxLoader';\nimport { ActivitiesByUserIdComponent } from '../../generated/graphql';\nimport UserContext from '../../userContext';\nimport { staticRideImg } from '../../utils/mapbox';\nimport ActivityCommentBox from './ActivityCommentBox';\nimport ActivityComments from './ActivityComments';\nimport MetricRow from './MetricRow';\n\nconst simplify = require('simplify-geojson'); // TODO: Don't parse JSON so much\n// TODO: Break out into more components\n\n\nconst TimeLine = () => {\n  const [commentEnabled, enableComment] = useState();\n\n  const activityTime = geoJsonStr => {\n    const geoJson = JSON.parse(geoJsonStr);\n    const timeStr = DayJs(geoJson['features'][0].properties.time).format('MMMM D, YYYY--h:mm A');\n    const timeStrSplit = timeStr.split('--');\n    return DayJs(timeStrSplit[0]).isSame(DayJs(), 'day') ? `Today at ${timeStrSplit[1]}` : timeStrSplit[0] + ` at ${timeStrSplit[1]}`;\n  };\n\n  const activityImg = geoJsonStr => {\n    const json = JSON.parse(geoJsonStr);\n    const simplified = simplify(json, 0.002);\n    return staticRideImg(simplified['features'][0].geometry.coordinates);\n  };\n\n  const toggleComment = comment => {\n    let enabled = comment.enabled;\n\n    if ((commentEnabled === null || commentEnabled === void 0 ? void 0 : commentEnabled.enabled) && comment.activityId !== commentEnabled.activityId) {\n      enabled = true;\n    }\n\n    enableComment({\n      activityId: comment.activityId,\n      enabled: enabled\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(UserContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, ctx => /*#__PURE__*/React.createElement(ActivitiesByUserIdComponent, {\n    variables: {\n      userId: ctx.user.id\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    var _data$activitiesByUse;\n\n    if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mt-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ClimbingBoxLoader, {\n      color: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }));\n    if (error) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 31\n      }\n    }, \"Error\");\n    if (data && ((_data$activitiesByUse = data.activitiesByUserId) === null || _data$activitiesByUse === void 0 ? void 0 : _data$activitiesByUse.length) === 0) return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center mt-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"text-primary text-align-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, \"No Activities\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, data && data.activitiesByUserId && data.activitiesByUserId.length > 0 && data.activitiesByUserId.map((activity, index) => {\n      var _activity$userByUserI, _activity$userByUserI2, _activity$userByUserI3;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        style: {\n          maxWidth: '550px'\n        },\n        className: \"card mb-0 pb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-column mr-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img-fluid rounded-circle w-auto h-auto w-half\",\n        src: (activity === null || activity === void 0 ? void 0 : (_activity$userByUserI = activity.userByUserId) === null || _activity$userByUserI === void 0 ? void 0 : _activity$userByUserI.img) ? activity === null || activity === void 0 ? void 0 : (_activity$userByUserI2 = activity.userByUserId) === null || _activity$userByUserI2 === void 0 ? void 0 : _activity$userByUserI2.img : 'default-user-avatar.png',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 35\n        }\n      })), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"m-auto pt-5\",\n        size: \"2x\",\n        icon: faBicycle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"font-weight-bold m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 31\n        }\n      }, activity === null || activity === void 0 ? void 0 : (_activity$userByUserI3 = activity.userByUserId) === null || _activity$userByUserI3 === void 0 ? void 0 : _activity$userByUserI3.name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 31\n        }\n      }, activityTime(activity === null || activity === void 0 ? void 0 : activity.geoJson)), /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"card-title font-weight-bolder font-size-20 mt-5 text-primary mb-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 31\n        }\n      }, activity === null || activity === void 0 ? void 0 : activity.title), /*#__PURE__*/React.createElement(MetricRow, {\n        geoJson: activity === null || activity === void 0 ? void 0 : activity.geoJson,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 31\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"align-center mt-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: activityImg(activity === null || activity === void 0 ? void 0 : activity.geoJson),\n        className: \"img-fluid rounded w-full h-full\",\n        alt: \"responsive image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"clearfix pt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"float-right d-inline-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn ml-5\",\n        onMouseDown: e => e.preventDefault(),\n        onClick: () => (activity === null || activity === void 0 ? void 0 : activity.id) && toggleComment({\n          activityId: activity === null || activity === void 0 ? void 0 : activity.id,\n          enabled: !(commentEnabled === null || commentEnabled === void 0 ? void 0 : commentEnabled.enabled)\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"m-auto\",\n        icon: faComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 31\n        }\n      })))), /*#__PURE__*/React.createElement(ActivityComments, {\n        comments: activity.comments.map(comment => ({\n          id: comment.id,\n          comment: comment.comment,\n          userName: comment.user.name,\n          userImg: comment.user.img\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(ActivityCommentBox, {\n        hidden: !((commentEnabled === null || commentEnabled === void 0 ? void 0 : commentEnabled.enabled) && activity.id === commentEnabled.activityId),\n        activityId: activity === null || activity === void 0 ? void 0 : activity.id,\n        toggleComment: toggleComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }));\n    }));\n  }));\n};\n\nexport default TimeLine;","map":{"version":3,"sources":["/home/ethan/avarts/frontend/src/components/TimeLine/index.tsx"],"names":["faBicycle","faComment","FontAwesomeIcon","DayJs","React","useState","ClimbingBoxLoader","ActivitiesByUserIdComponent","UserContext","staticRideImg","ActivityCommentBox","ActivityComments","MetricRow","simplify","require","TimeLine","commentEnabled","enableComment","activityTime","geoJsonStr","geoJson","JSON","parse","timeStr","properties","time","format","timeStrSplit","split","isSame","activityImg","json","simplified","geometry","coordinates","toggleComment","comment","enabled","activityId","ctx","userId","user","id","loading","error","data","activitiesByUserId","length","map","activity","index","maxWidth","userByUserId","img","name","title","e","preventDefault","comments","userName","userImg"],"mappings":"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","sourcesContent":["import { faBicycle, faComment } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport DayJs from 'dayjs'\nimport React, { useState } from 'react'\nimport ClimbingBoxLoader from 'react-spinners/ClimbingBoxLoader'\nimport { ActivitiesByUserIdComponent } from '../../generated/graphql'\nimport UserContext from '../../userContext'\nimport { staticRideImg } from '../../utils/mapbox'\nimport ActivityCommentBox from './ActivityCommentBox'\nimport ActivityComments from './ActivityComments'\nimport MetricRow from './MetricRow'\n\nconst simplify = require('simplify-geojson')\n\n// TODO: Don't parse JSON so much\n// TODO: Break out into more components\n\ntype CommentEnabledType = {\n  activityId: number\n  enabled: boolean\n}\n\nconst TimeLine: React.FC = () => {\n  const [commentEnabled, enableComment] = useState<CommentEnabledType>()\n\n  const activityTime = (geoJsonStr: any) => {\n    const geoJson = JSON.parse(geoJsonStr)\n    const timeStr = DayJs(geoJson['features'][0].properties.time).format(\n      'MMMM D, YYYY--h:mm A'\n    )\n    const timeStrSplit = timeStr.split('--')\n\n    return DayJs(timeStrSplit[0]).isSame(DayJs(), 'day')\n      ? `Today at ${timeStrSplit[1]}`\n      : timeStrSplit[0] + ` at ${timeStrSplit[1]}`\n  }\n\n  const activityImg = (geoJsonStr: string) => {\n    const json = JSON.parse(geoJsonStr)\n    const simplified = simplify(json, 0.002)\n    return staticRideImg(simplified['features'][0].geometry.coordinates)\n  }\n\n  const toggleComment = (comment: CommentEnabledType) => {\n    let enabled = comment.enabled\n\n    if (\n      commentEnabled?.enabled &&\n      comment.activityId !== commentEnabled.activityId\n    ) {\n      enabled = true\n    }\n\n    enableComment({\n      activityId: comment.activityId,\n      enabled: enabled,\n    })\n  }\n\n  return (\n    <UserContext.Consumer>\n      {(ctx) => (\n        <ActivitiesByUserIdComponent variables={{ userId: ctx.user.id }}>\n          {({ loading, error, data }) => {\n            if (loading)\n              return (\n                <div className=\"d-flex justify-content-center mt-20\">\n                  <ClimbingBoxLoader color=\"grey\" />\n                </div>\n              )\n\n            if (error) return <div>Error</div>\n\n            if (data && data.activitiesByUserId?.length === 0)\n              return (\n                <div className=\"d-flex justify-content-center mt-20\">\n                  <h4 className=\"text-primary text-align-center\">\n                    No Activities\n                  </h4>\n                </div>\n              )\n\n            return (\n              <div>\n                {data &&\n                  data.activitiesByUserId &&\n                  data.activitiesByUserId.length > 0 &&\n                  data.activitiesByUserId.map(\n                    (activity: any, index: number) => (\n                      <div\n                        key={index}\n                        style={{ maxWidth: '550px' }}\n                        className=\"card mb-0 pb-0\"\n                      >\n                        <div className=\"container-fluid\">\n                          <div className=\"row\">\n                            <div className=\"col-2\">\n                              <div className=\"d-flex flex-column mr-10\">\n                                <div className=\"text-center\">\n                                  <img\n                                    className=\"img-fluid rounded-circle w-auto h-auto w-half\"\n                                    src={\n                                      activity?.userByUserId?.img\n                                        ? activity?.userByUserId?.img\n                                        : 'default-user-avatar.png'\n                                    }\n                                  ></img>\n                                </div>\n                                <FontAwesomeIcon\n                                  className=\"m-auto pt-5\"\n                                  size=\"2x\"\n                                  icon={faBicycle}\n                                />\n                              </div>\n                            </div>\n\n                            <div className=\"col-10\">\n                              <p className=\"font-weight-bold m-0\">\n                                {activity?.userByUserId?.name}\n                              </p>\n                              <p className=\"m-0\">\n                                {activityTime(activity?.geoJson)}\n                              </p>\n                              <h1 className=\"card-title font-weight-bolder font-size-20 mt-5 text-primary mb-5\">\n                                {activity?.title}\n                              </h1>\n                              <MetricRow geoJson={activity?.geoJson} />\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"align-center mt-10\">\n                          <img\n                            src={activityImg(activity?.geoJson)}\n                            className=\"img-fluid rounded w-full h-full\"\n                            alt=\"responsive image\"\n                          />\n                        </div>\n                        <div className=\"clearfix pt-5\">\n                          <div className=\"float-right d-inline-block\">\n                            {/* <button className=\"btn\">\n                          <FontAwesomeIcon className=\"m-auto\" icon={faThumbsUp} />\n                        </button> */}\n                            <button\n                              className=\"btn ml-5\"\n                              onMouseDown={(e) => e.preventDefault()}\n                              onClick={() =>\n                                activity?.id &&\n                                toggleComment({\n                                  activityId: activity?.id,\n                                  enabled: !commentEnabled?.enabled,\n                                })\n                              }\n                            >\n                              <FontAwesomeIcon\n                                className=\"m-auto\"\n                                icon={faComment}\n                              />\n                            </button>\n                          </div>\n                        </div>\n\n                        <ActivityComments\n                          comments={activity.comments.map((comment: any) => ({\n                            id: comment.id,\n                            comment: comment.comment,\n                            userName: comment.user.name,\n                            userImg: comment.user.img,\n                          }))}\n                        />\n\n                        <ActivityCommentBox\n                          hidden={\n                            !(\n                              commentEnabled?.enabled &&\n                              activity.id === commentEnabled.activityId\n                            )\n                          }\n                          activityId={activity?.id}\n                          toggleComment={toggleComment}\n                        />\n                      </div>\n                    )\n                  )}\n              </div>\n            )\n          }}\n        </ActivitiesByUserIdComponent>\n      )}\n    </UserContext.Consumer>\n  )\n}\n\nexport default TimeLine\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var Line = function (p1, p2) {\n  this.p1 = p1;\n  this.p2 = p2;\n};\n\nLine.prototype.rise = function () {\n  return this.p2[1] - this.p1[1];\n};\n\nLine.prototype.run = function () {\n  return this.p2[0] - this.p1[0];\n};\n\nLine.prototype.slope = function () {\n  return this.rise() / this.run();\n};\n\nLine.prototype.yIntercept = function () {\n  return this.p1[1] - this.p1[0] * this.slope(this.p1, this.p2);\n};\n\nLine.prototype.isVertical = function () {\n  return !isFinite(this.slope());\n};\n\nLine.prototype.isHorizontal = function () {\n  return this.p1[1] == this.p2[1];\n};\n\nLine.prototype._perpendicularDistanceHorizontal = function (point) {\n  return Math.abs(this.p1[1] - point[1]);\n};\n\nLine.prototype._perpendicularDistanceVertical = function (point) {\n  return Math.abs(this.p1[0] - point[0]);\n};\n\nLine.prototype._perpendicularDistanceHasSlope = function (point) {\n  var slope = this.slope();\n  var y_intercept = this.yIntercept();\n  return Math.abs(slope * point[0] - point[1] + y_intercept) / Math.sqrt(Math.pow(slope, 2) + 1);\n};\n\nLine.prototype.perpendicularDistance = function (point) {\n  if (this.isVertical()) {\n    return this._perpendicularDistanceVertical(point);\n  } else if (this.isHorizontal()) {\n    return this._perpendicularDistanceHorizontal(point);\n  } else {\n    return this._perpendicularDistanceHasSlope(point);\n  }\n};\n\nmodule.exports = Line;","map":{"version":3,"sources":["/home/ethan/avarts/frontend/node_modules/simplify-geometry/lib/line.js"],"names":["Line","p1","p2","prototype","rise","run","slope","yIntercept","isVertical","isFinite","isHorizontal","_perpendicularDistanceHorizontal","point","Math","abs","_perpendicularDistanceVertical","_perpendicularDistanceHasSlope","y_intercept","sqrt","pow","perpendicularDistance","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAG,UAASC,EAAT,EAAaC,EAAb,EAAgB;AAEzB,OAAKD,EAAL,GAAUA,EAAV;AACA,OAAKC,EAAL,GAAUA,EAAV;AAED,CALD;;AAOAF,IAAI,CAACG,SAAL,CAAeC,IAAf,GAAsB,YAAW;AAE/B,SAAO,KAAKF,EAAL,CAAQ,CAAR,IAAa,KAAKD,EAAL,CAAQ,CAAR,CAApB;AAED,CAJD;;AAMAD,IAAI,CAACG,SAAL,CAAeE,GAAf,GAAqB,YAAW;AAE9B,SAAO,KAAKH,EAAL,CAAQ,CAAR,IAAa,KAAKD,EAAL,CAAQ,CAAR,CAApB;AAED,CAJD;;AAMAD,IAAI,CAACG,SAAL,CAAeG,KAAf,GAAuB,YAAU;AAE/B,SAAQ,KAAKF,IAAL,KAAc,KAAKC,GAAL,EAAtB;AAED,CAJD;;AAMAL,IAAI,CAACG,SAAL,CAAeI,UAAf,GAA4B,YAAU;AAEpC,SAAO,KAAKN,EAAL,CAAQ,CAAR,IAAc,KAAKA,EAAL,CAAQ,CAAR,IAAa,KAAKK,KAAL,CAAW,KAAKL,EAAhB,EAAoB,KAAKC,EAAzB,CAAlC;AAED,CAJD;;AAMAF,IAAI,CAACG,SAAL,CAAeK,UAAf,GAA4B,YAAW;AAErC,SAAO,CAACC,QAAQ,CAAC,KAAKH,KAAL,EAAD,CAAhB;AAED,CAJD;;AAMAN,IAAI,CAACG,SAAL,CAAeO,YAAf,GAA8B,YAAW;AAEvC,SAAO,KAAKT,EAAL,CAAQ,CAAR,KAAc,KAAKC,EAAL,CAAQ,CAAR,CAArB;AAED,CAJD;;AAMAF,IAAI,CAACG,SAAL,CAAeQ,gCAAf,GAAkD,UAASC,KAAT,EAAe;AAE/D,SAAOC,IAAI,CAACC,GAAL,CAAS,KAAKb,EAAL,CAAQ,CAAR,IAAaW,KAAK,CAAC,CAAD,CAA3B,CAAP;AAED,CAJD;;AAMAZ,IAAI,CAACG,SAAL,CAAeY,8BAAf,GAAgD,UAASH,KAAT,EAAe;AAE7D,SAAOC,IAAI,CAACC,GAAL,CAAS,KAAKb,EAAL,CAAQ,CAAR,IAAaW,KAAK,CAAC,CAAD,CAA3B,CAAP;AAED,CAJD;;AAMAZ,IAAI,CAACG,SAAL,CAAea,8BAAf,GAAgD,UAASJ,KAAT,EAAe;AAC7D,MAAIN,KAAK,GAAG,KAAKA,KAAL,EAAZ;AACA,MAAIW,WAAW,GAAG,KAAKV,UAAL,EAAlB;AAEA,SAAOM,IAAI,CAACC,GAAL,CAAUR,KAAK,GAAGM,KAAK,CAAC,CAAD,CAAd,GAAqBA,KAAK,CAAC,CAAD,CAA1B,GAAgCK,WAAzC,IAAwDJ,IAAI,CAACK,IAAL,CAAWL,IAAI,CAACM,GAAL,CAASb,KAAT,EAAgB,CAAhB,CAAD,GAAuB,CAAjC,CAA/D;AAED,CAND;;AAQAN,IAAI,CAACG,SAAL,CAAeiB,qBAAf,GAAuC,UAASR,KAAT,EAAe;AACpD,MAAI,KAAKJ,UAAL,EAAJ,EAAuB;AAErB,WAAO,KAAKO,8BAAL,CAAoCH,KAApC,CAAP;AAED,GAJD,MAMK,IAAI,KAAKF,YAAL,EAAJ,EAAwB;AAE3B,WAAO,KAAKC,gCAAL,CAAsCC,KAAtC,CAAP;AAED,GAJI,MAMA;AAEH,WAAO,KAAKI,8BAAL,CAAoCJ,KAApC,CAAP;AAED;AAEF,CAnBD;;AAqBAS,MAAM,CAACC,OAAP,GAAiBtB,IAAjB","sourcesContent":["var Line = function(p1, p2){\n\n  this.p1 = p1;\n  this.p2 = p2;\n\n};\n\nLine.prototype.rise = function() {\n\n  return this.p2[1] - this.p1[1];\n\n};\n\nLine.prototype.run = function() {\n\n  return this.p2[0] - this.p1[0];\n\n};\n\nLine.prototype.slope = function(){\n\n  return  this.rise() / this.run();\n\n};\n\nLine.prototype.yIntercept = function(){\n\n  return this.p1[1] - (this.p1[0] * this.slope(this.p1, this.p2));\n\n};\n\nLine.prototype.isVertical = function() {\n\n  return !isFinite(this.slope());\n\n};\n\nLine.prototype.isHorizontal = function() {\n\n  return this.p1[1] == this.p2[1];\n\n};\n\nLine.prototype._perpendicularDistanceHorizontal = function(point){\n\n  return Math.abs(this.p1[1] - point[1]);\n\n};\n\nLine.prototype._perpendicularDistanceVertical = function(point){\n\n  return Math.abs(this.p1[0] - point[0]);\n\n};\n\nLine.prototype._perpendicularDistanceHasSlope = function(point){\n  var slope = this.slope();\n  var y_intercept = this.yIntercept();\n\n  return Math.abs((slope * point[0]) - point[1] + y_intercept) / Math.sqrt((Math.pow(slope, 2)) + 1);\n\n};\n\nLine.prototype.perpendicularDistance = function(point){\n  if (this.isVertical()) {\n\n    return this._perpendicularDistanceVertical(point);\n\n  }\n\n  else if (this.isHorizontal()){\n\n    return this._perpendicularDistanceHorizontal(point);\n\n  }\n\n  else {\n\n    return this._perpendicularDistanceHasSlope(point);\n\n  }\n\n};\n\nmodule.exports = Line;\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _jsxFileName = \"/home/ethan/avarts/frontend/src/components/TimeLine/ActivityCommentBox.tsx\";\nimport React, { useEffect, useState } from 'react'; // import { useAddActivityCommentMutation } from '../../generated/graphql'\n\nimport UserContext from '../../userContext';\n// TODO: Query for activity comments\n// TODO: only show comment box on selected activity\nexport const ActivityCommentBox = props => {\n  const {\n    activityId,\n    hidden\n  } = props;\n  const [comment, setComment] = useState(''); // const [addActivityCommentMutation] = useAddActivityCommentMutation()\n\n  useEffect(() => {\n    const commentButton = document.getElementById('commentButton');\n\n    if (comment.length === 0) {\n      commentButton === null || commentButton === void 0 ? void 0 : commentButton.classList.add('disabled');\n    } else {\n      commentButton === null || commentButton === void 0 ? void 0 : commentButton.classList.remove('disabled');\n    }\n  });\n\n  const disableInput = () => {\n    return comment.length === 0;\n  };\n\n  const addComment = async (e, currentUser) => {\n    e.preventDefault(); // if (currentUser && currentUser.id && currentUser.name && activityId) {\n    //   await addActivityCommentMutation({\n    //     variables: {\n    //       comment: comment,\n    //       userId: currentUser.id,\n    //       activityId: activityId,\n    //     },\n    //     refetchQueries: ['allActivities'],\n    //   })\n    // }\n\n    setComment('');\n  };\n\n  return /*#__PURE__*/React.createElement(UserContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, ctx => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      visibility: hidden ? 'hidden' : 'visible'\n    },\n    className: \"mt-5 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => addComment(e, ctx.user),\n    className: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    autoFocus: true,\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Enter comment\",\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-sm\",\n    value: \"Submit\",\n    disabled: disableInput(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default ActivityCommentBox;","map":{"version":3,"sources":["/home/ethan/avarts/frontend/src/components/TimeLine/ActivityCommentBox.tsx"],"names":["React","useEffect","useState","UserContext","ActivityCommentBox","props","activityId","hidden","comment","setComment","commentButton","document","getElementById","length","classList","add","remove","disableInput","addComment","e","currentUser","preventDefault","ctx","visibility","user","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,WAAP,MAAsC,mBAAtC;AAOA;AACA;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAkB;AAClD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAyBF,KAA/B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC,CAFkD,CAGlD;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAtB;;AAEA,QAAIJ,OAAO,CAACK,MAAR,KAAmB,CAAvB,EAA0B;AACxBH,MAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEI,SAAf,CAAyBC,GAAzB,CAA6B,UAA7B;AACD,KAFD,MAEO;AACLL,MAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEI,SAAf,CAAyBE,MAAzB,CAAgC,UAAhC;AACD;AACF,GARQ,CAAT;;AAUA,QAAMC,YAAY,GAAG,MAAM;AACzB,WAAOT,OAAO,CAACK,MAAR,KAAmB,CAA1B;AACD,GAFD;;AAIA,QAAMK,UAAU,GAAG,OAAOC,CAAP,EAA2BC,WAA3B,KAAqD;AACtED,IAAAA,CAAC,CAACE,cAAF,GADsE,CAEtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAZ,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAdD;;AAgBA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIa,GAAD,iBACC;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAEhB,MAAM,GAAG,QAAH,GAAc;AAAlC,KADT;AAEE,IAAA,SAAS,EAAC,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,IAAA,QAAQ,EAAGY,CAAD,IAAOD,UAAU,CAACC,CAAD,EAAIG,GAAG,CAACE,IAAR,CAD7B;AAEE,IAAA,SAAS,EAAC,aAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,IAAA,SAAS,MADX;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,WAAW,EAAC,eAJd;AAKE,IAAA,KAAK,EAAEhB,OALT;AAME,IAAA,QAAQ,EAAGW,CAAD,IAAOV,UAAU,CAACU,CAAC,CAACM,MAAF,CAASC,KAAV,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,wBAFZ;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,QAAQ,EAAET,YAAY,EAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CAJF,CAFJ,CADF;AA8BD,CAjEM;AAmEP,eAAeb,kBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\n// import { useAddActivityCommentMutation } from '../../generated/graphql'\nimport UserContext, { UserType } from '../../userContext'\n\ntype Props = {\n  activityId: number | undefined\n  hidden: boolean | undefined | null\n}\n\n// TODO: Query for activity comments\n// TODO: only show comment box on selected activity\n\nexport const ActivityCommentBox = (props: Props) => {\n  const { activityId, hidden } = props\n  const [comment, setComment] = useState('')\n  // const [addActivityCommentMutation] = useAddActivityCommentMutation()\n\n  useEffect(() => {\n    const commentButton = document.getElementById('commentButton')\n\n    if (comment.length === 0) {\n      commentButton?.classList.add('disabled')\n    } else {\n      commentButton?.classList.remove('disabled')\n    }\n  })\n\n  const disableInput = () => {\n    return comment.length === 0\n  }\n\n  const addComment = async (e: React.FormEvent, currentUser: UserType) => {\n    e.preventDefault()\n    // if (currentUser && currentUser.id && currentUser.name && activityId) {\n    //   await addActivityCommentMutation({\n    //     variables: {\n    //       comment: comment,\n    //       userId: currentUser.id,\n    //       activityId: activityId,\n    //     },\n    //     refetchQueries: ['allActivities'],\n    //   })\n    // }\n\n    setComment('')\n  }\n\n  return (\n    <UserContext.Consumer>\n      {(ctx) => (\n        <div\n          style={{ visibility: hidden ? 'hidden' : 'visible' }}\n          className=\"mt-5 mb-5\"\n        >\n          <form\n            onSubmit={(e) => addComment(e, ctx.user)}\n            className=\"form-inline\"\n          >\n            <input\n              autoFocus\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter comment\"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n            />\n            <input\n              type=\"submit\"\n              className=\"btn btn-primary btn-sm\"\n              value=\"Submit\"\n              disabled={disableInput()}\n            />\n          </form>\n        </div>\n      )}\n    </UserContext.Consumer>\n  )\n}\n\nexport default ActivityCommentBox\n"]},"metadata":{},"sourceType":"module"}
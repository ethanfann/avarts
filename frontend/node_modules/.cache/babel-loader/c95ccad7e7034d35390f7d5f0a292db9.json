{"ast":null,"code":"!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? t(exports) : \"function\" == typeof define && define.amd ? define([\"exports\"], t) : t((e = e || self).toGeoJSON = {});\n}(this, function (e) {\n  \"use strict\";\n\n  function t(e) {\n    return e && e.normalize && e.normalize(), e && e.textContent || \"\";\n  }\n\n  const n = [[\"speed\", \"speeds\"], [\"course\", \"courses\"], [\"hAcc\", \"hAccs\"], [\"vAcc\", \"vAccs\"], [\"heartRate\", \"heartRates\"]];\n\n  function o(e) {\n    const n = {};\n\n    if (e) {\n      const o = l(e, \"line\");\n\n      if (o) {\n        const e = t(l(o, \"color\")),\n              r = parseFloat(t(l(o, \"opacity\"))),\n              s = parseFloat(t(l(o, \"width\")));\n        e && (n.stroke = e), isNaN(r) || (n[\"stroke-opacity\"] = r), isNaN(s) || (n[\"stroke-width\"] = 96 * s / 25.4);\n      }\n    }\n\n    return n;\n  }\n\n  function r(e, n) {\n    const o = {};\n    let r, s;\n\n    for (s = 0; s < n.length; s++) r = l(e, n[s]), r && (o[n[s]] = t(r));\n\n    return o;\n  }\n\n  function s(e) {\n    const n = r(e, [\"name\", \"cmt\", \"desc\", \"type\", \"time\", \"keywords\"]),\n          o = e.getElementsByTagNameNS(\"http://www.garmin.com/xmlschemas/GpxExtensions/v3\", \"*\");\n\n    for (let r = 0; r < o.length; r++) {\n      const s = o[r];\n      s.parentNode.parentNode === e && (n[s.tagName.replace(\":\", \"_\")] = t(s));\n    }\n\n    const s = e.getElementsByTagName(\"link\");\n    s.length && (n.links = []);\n\n    for (let e = 0; e < s.length; e++) n.links.push(Object.assign({\n      href: s[e].getAttribute(\"href\")\n    }, r(s[e], [\"text\", \"type\"])));\n\n    return n;\n  }\n\n  function l(e, t) {\n    const n = e.getElementsByTagName(t);\n    return n.length ? n[0] : null;\n  }\n\n  function i(e) {\n    const o = [parseFloat(e.getAttribute(\"lon\")), parseFloat(e.getAttribute(\"lat\"))],\n          r = l(e, \"ele\"),\n          s = l(e, \"gpxtpx:hr\") || l(e, \"hr\"),\n          i = l(e, \"time\");\n    let a;\n    r && (a = parseFloat(t(r)), isNaN(a) || o.push(a));\n    const c = {\n      coordinates: o,\n      time: i ? t(i) : null,\n      heartRate: s ? parseFloat(t(s)) : null\n    },\n          g = l(e, \"extensions\");\n    return null !== g && n.map(e => e[0]).filter(e => \"heartrate\" !== e).forEach(e => {\n      const n = l(g, e);\n\n      if (null !== n) {\n        const o = parseFloat(t(n));\n        isNaN(o) || (c[e] = o);\n      }\n    }), c;\n  }\n\n  function a(e) {\n    const t = c(e, \"rtept\");\n    if (t.line) return {\n      type: \"Feature\",\n      properties: Object.assign(s(e), o(l(e, \"extensions\"))),\n      geometry: {\n        type: \"LineString\",\n        coordinates: t.line\n      }\n    };\n  }\n\n  function c(e, t) {\n    const o = e.getElementsByTagName(t),\n          r = [],\n          s = [],\n          l = o.length,\n          a = {};\n    if (l < 2) return {};\n\n    for (let e = 0; e < l; e++) {\n      const t = i(o[e]);\n      r.push(t.coordinates), t.time && s.push(t.time), n.map(e => e[0]).forEach(n => {\n        (t[n] || a[n]) && (a[n] || (a[n] = Array(e).fill(null)), a[n].push(t[n] || null));\n      });\n    }\n\n    const c = {\n      line: r,\n      times: s\n    };\n    return n.forEach(e => {\n      a[e[0]] && (c[e[1]] = a[e[0]] || []);\n    }), c;\n  }\n\n  function g(e) {\n    const t = e.getElementsByTagName(\"trkseg\"),\n          r = [],\n          i = [],\n          a = {};\n    let g;\n\n    for (let e = 0; e < t.length; e++) g = c(t[e], \"trkpt\"), g && (g.line && r.push(g.line), g.times && g.times.length && i.push(g.times), n.map(e => e[1]).forEach(t => {\n      if (a[t] && a[t].length || g[t] && g[t].length) {\n        if (a[t] || (a[t] = []), !a[t].length) for (let n = 0; n < e; n++) a[t].push(Array(r[n].length).fill(null));\n        g[t] && g[t].length ? a[t].push(g[t]) : a[t].push(Array(g.line.length || 0).fill(null));\n      }\n    }));\n\n    if (0 === r.length) return;\n    const u = Object.assign(s(e), o(l(e, \"extensions\")));\n    return i.length && (u.coordTimes = 1 === r.length ? i[0] : i), n.forEach(e => {\n      a[e[1]] && a[e[1]].length && (u[e[1]] = 1 === r.length ? a[e[1]][0] : a[e[1]]);\n    }), {\n      type: \"Feature\",\n      properties: u,\n      geometry: {\n        type: 1 === r.length ? \"LineString\" : \"MultiLineString\",\n        coordinates: 1 === r.length ? r[0] : r\n      }\n    };\n  }\n\n  function* u(e) {\n    const t = e.getElementsByTagName(\"trk\"),\n          n = e.getElementsByTagName(\"rte\"),\n          o = e.getElementsByTagName(\"wpt\");\n\n    for (let e = 0; e < t.length; e++) {\n      const n = g(t[e]);\n      n && (yield n);\n    }\n\n    for (let e = 0; e < n.length; e++) {\n      const t = a(n[e]);\n      t && (yield t);\n    }\n\n    for (let e = 0; e < o.length; e++) yield (l = o[e], {\n      type: \"Feature\",\n      properties: Object.assign(s(l), r(l, [\"sym\"])),\n      geometry: {\n        type: \"Point\",\n        coordinates: i(l).coordinates\n      }\n    });\n\n    var l;\n  }\n\n  const m = /\\s*/g,\n        f = /^\\s*|\\s*$/g,\n        p = /\\s+/;\n\n  function h(e) {\n    if (!e || !e.length) return 0;\n    let t = 0;\n\n    for (let n = 0; n < e.length; n++) t = (t << 5) - t + e.charCodeAt(n) | 0;\n\n    return t;\n  }\n\n  function y(e, t) {\n    const n = e.getElementsByTagName(t);\n    return n.length ? n[0] : null;\n  }\n\n  function d(e) {\n    return e.replace(m, \"\").split(\",\").map(parseFloat);\n  }\n\n  function N(e) {\n    return e.replace(f, \"\").split(p).map(d);\n  }\n\n  function T(e) {\n    if (void 0 !== e.xml) return e.xml;\n\n    if (e.tagName) {\n      let t = e.tagName;\n\n      for (let n = 0; n < e.attributes.length; n++) t += e.attributes[n].name + e.attributes[n].value;\n\n      for (let n = 0; n < e.childNodes.length; n++) t += T(e.childNodes[n]);\n\n      return t;\n    }\n\n    return \"#text\" === e.nodeName ? (e.nodeValue || e.value || \"\").trim() : \"#cdata-section\" === e.nodeName ? e.nodeValue : \"\";\n  }\n\n  const b = [\"Polygon\", \"LineString\", \"Point\", \"Track\", \"gx:Track\"];\n\n  function k(e, n, o) {\n    let r = t(y(n, \"color\")) || \"\";\n    const s = \"stroke\" == o || \"fill\" === o ? o : o + \"-color\";\n    \"#\" === r.substr(0, 1) && (r = r.substr(1)), 6 === r.length || 3 === r.length ? e[s] = r : 8 === r.length && (e[o + \"-opacity\"] = parseInt(r.substr(0, 2), 16) / 255, e[s] = \"#\" + r.substr(6, 2) + r.substr(4, 2) + r.substr(2, 2));\n  }\n\n  function E(e, n, o, r) {\n    const s = parseFloat(t(y(n, o)));\n    isNaN(s) || (e[r] = s);\n  }\n\n  function x(e) {\n    let n = e.getElementsByTagName(\"coord\");\n    const o = [],\n          r = [];\n    0 === n.length && (n = e.getElementsByTagName(\"gx:coord\"));\n\n    for (let e = 0; e < n.length; e++) o.push(t(n[e]).split(\" \").map(parseFloat));\n\n    const s = e.getElementsByTagName(\"when\");\n\n    for (let e = 0; e < s.length; e++) r.push(t(s[e]));\n\n    return {\n      coords: o,\n      times: r\n    };\n  }\n\n  function S(e, n, o, r) {\n    const s = function e(n) {\n      let o, r, s, l, i;\n      const a = [],\n            c = [];\n      if (y(n, \"MultiGeometry\")) return e(y(n, \"MultiGeometry\"));\n      if (y(n, \"MultiTrack\")) return e(y(n, \"MultiTrack\"));\n      if (y(n, \"gx:MultiTrack\")) return e(y(n, \"gx:MultiTrack\"));\n\n      for (s = 0; s < b.length; s++) if (r = n.getElementsByTagName(b[s]), r) for (l = 0; l < r.length; l++) if (o = r[l], \"Point\" === b[s]) a.push({\n        type: \"Point\",\n        coordinates: d(t(y(o, \"coordinates\")))\n      });else if (\"LineString\" === b[s]) a.push({\n        type: \"LineString\",\n        coordinates: N(t(y(o, \"coordinates\")))\n      });else if (\"Polygon\" === b[s]) {\n        const e = o.getElementsByTagName(\"LinearRing\"),\n              n = [];\n\n        for (i = 0; i < e.length; i++) n.push(N(t(y(e[i], \"coordinates\"))));\n\n        a.push({\n          type: \"Polygon\",\n          coordinates: n\n        });\n      } else if (\"Track\" === b[s] || \"gx:Track\" === b[s]) {\n        const e = x(o);\n        a.push({\n          type: \"LineString\",\n          coordinates: e.coords\n        }), e.times.length && c.push(e.times);\n      }\n\n      return {\n        geoms: a,\n        coordTimes: c\n      };\n    }(e);\n\n    let l;\n    const i = {},\n          a = t(y(e, \"name\")),\n          c = t(y(e, \"address\"));\n    let g = t(y(e, \"styleUrl\"));\n    const u = t(y(e, \"description\")),\n          m = y(e, \"TimeSpan\"),\n          f = y(e, \"TimeStamp\"),\n          p = y(e, \"ExtendedData\");\n    let h = y(e, \"IconStyle\"),\n        T = y(e, \"LabelStyle\"),\n        S = y(e, \"LineStyle\"),\n        A = y(e, \"PolyStyle\");\n    const B = y(e, \"visibility\");\n\n    if (a && (i.name = a), c && (i.address = c), g) {\n      \"#\" !== g[0] && (g = \"#\" + g), i.styleUrl = g, n[g] && (i.styleHash = n[g]), o[g] && (i.styleMapHash = o[g], i.styleHash = n[o[g].normal]);\n      const e = r[i.styleHash];\n      e && (h || (h = y(e, \"IconStyle\")), T || (T = y(e, \"LabelStyle\")), S || (S = y(e, \"LineStyle\")), A || (A = y(e, \"PolyStyle\")));\n    }\n\n    if (u && (i.description = u), m) {\n      const e = t(y(m, \"begin\")),\n            n = t(y(m, \"end\"));\n      i.timespan = {\n        begin: e,\n        end: n\n      };\n    }\n\n    if (f && (i.timestamp = t(y(f, \"when\"))), h) {\n      k(i, h, \"icon\"), E(i, h, \"scale\", \"icon-scale\"), E(i, h, \"heading\", \"icon-heading\");\n      const e = y(h, \"hotSpot\");\n\n      if (e) {\n        const t = parseFloat(e.getAttribute(\"x\")),\n              n = parseFloat(e.getAttribute(\"y\"));\n        isNaN(t) || isNaN(n) || (i[\"icon-offset\"] = [t, n]);\n      }\n\n      const n = y(h, \"Icon\");\n\n      if (n) {\n        const e = t(y(n, \"href\"));\n        e && (i.icon = e);\n      }\n    }\n\n    if (T && (k(i, T, \"label\"), E(i, T, \"scale\", \"label-scale\")), S && (k(i, S, \"stroke\"), E(i, S, \"width\", \"stroke-width\")), A) {\n      k(i, A, \"fill\");\n      const e = t(y(A, \"fill\")),\n            n = t(y(A, \"outline\"));\n      e && (i[\"fill-opacity\"] = \"1\" === e ? i[\"fill-opacity\"] || 1 : 0), n && (i[\"stroke-opacity\"] = \"1\" === n ? i[\"stroke-opacity\"] || 1 : 0);\n    }\n\n    if (p) {\n      const e = p.getElementsByTagName(\"Data\"),\n            n = p.getElementsByTagName(\"SimpleData\");\n\n      for (l = 0; l < e.length; l++) i[e[l].getAttribute(\"name\")] = t(y(e[l], \"value\"));\n\n      for (l = 0; l < n.length; l++) i[n[l].getAttribute(\"name\")] = t(n[l]);\n    }\n\n    B && (i.visibility = t(B)), s.coordTimes.length && (i.coordTimes = 1 === s.coordTimes.length ? s.coordTimes[0] : s.coordTimes);\n    const F = {\n      type: \"Feature\",\n      geometry: 0 === s.geoms.length ? null : 1 === s.geoms.length ? s.geoms[0] : {\n        type: \"GeometryCollection\",\n        geometries: s.geoms\n      },\n      properties: i\n    };\n    return e.getAttribute(\"id\") && (F.id = e.getAttribute(\"id\")), F;\n  }\n\n  function* A(e) {\n    const n = {},\n          o = {},\n          r = {},\n          s = e.getElementsByTagName(\"Placemark\"),\n          l = e.getElementsByTagName(\"Style\"),\n          i = e.getElementsByTagName(\"StyleMap\");\n\n    for (let e = 0; e < l.length; e++) {\n      const t = h(T(l[e])).toString(16);\n      n[\"#\" + l[e].getAttribute(\"id\")] = t, o[t] = l[e];\n    }\n\n    for (let e = 0; e < i.length; e++) {\n      n[\"#\" + i[e].getAttribute(\"id\")] = h(T(i[e])).toString(16);\n      const o = i[e].getElementsByTagName(\"Pair\"),\n            s = {};\n\n      for (let e = 0; e < o.length; e++) s[t(y(o[e], \"key\"))] = t(y(o[e], \"styleUrl\"));\n\n      r[\"#\" + i[e].getAttribute(\"id\")] = s;\n    }\n\n    for (let e = 0; e < s.length; e++) {\n      const t = S(s[e], n, r, o);\n      t && (yield t);\n    }\n  }\n\n  e.gpx = function (e) {\n    return {\n      type: \"FeatureCollection\",\n      features: Array.from(u(e))\n    };\n  }, e.gpxGen = u, e.kml = function (e) {\n    return {\n      type: \"FeatureCollection\",\n      features: Array.from(A(e))\n    };\n  }, e.kmlGen = A, Object.defineProperty(e, \"__esModule\", {\n    value: !0\n  });\n});","map":{"version":3,"sources":["../lib/shared.js","../lib/gpx.js","../lib/kml.js"],"names":["nodeVal","x","normalize","textContent","attributeNames","getLineStyle","extensions","style","lineStyle","get1","color","opacity","parseFloat","width","stroke","isNaN","getMulti","ys","o","n","k","length","getProperties","node","prop","getElementsByTagNameNS","i","extension","parentNode","tagName","replace","links","getElementsByTagName","push","Object","assign","href","getAttribute","y","coordPair","ll","ele","heartRate","time","e","result","coordinates","map","r","filter","forEach","name","raw","v","getRoute","line","getPoints","type","properties","geometry","pointname","pts","times","l","extendedValues","c","Array","fill","getTrack","segments","track","s","coordTimes","gpxGen","doc","tracks","routes","waypoints","feature","features","from","removeSpace","trimSpace","splitSpace","okhash","h","charCodeAt","coord1","split","coord","xml2str","xml","undefined","output","attributes","value","childNodes","nodeName","nodeValue","trim","geotypes","kmlColor","elem","prefix","colorProp","substr","parseInt","numericProperty","source","target","val","gxCoords","root","elems","coords","timeElems","j","getGeometry","geomNode","geomNodes","geoms","rings","getPlacemark","styleIndex","styleMapIndex","styleByHash","geomsAndTimes","address","styleUrl","description","timeSpan","timeStamp","extendedData","iconStyle","labelStyle","polyStyle","visibility","styleHash","styleMapHash","normal","begin","end","timespan","timestamp","hotspot","left","top","icon","outline","datas","simpleDatas","geometries","id","kmlGen","placemarks","styles","styleMaps","hash","toString","pairs","pairsMap","m"],"mappings":"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","sourcesContent":["// cast array x into numbers\n// get the content of a text node, if any\nexport function nodeVal(x) {\n  if (x && x.normalize) {\n    x.normalize();\n  }\n  return (x && x.textContent) || \"\";\n}\n","import { nodeVal } from \"./shared\";\n\nconst attributeNames = [\n  [\"speed\", \"speeds\"],\n  [\"course\", \"courses\"],\n  [\"hAcc\", \"hAccs\"],\n  [\"vAcc\", \"vAccs\"],\n  [\"heartRate\", \"heartRates\"],\n];\n\nfunction getLineStyle(extensions) {\n  const style = {};\n  if (extensions) {\n    const lineStyle = get1(extensions, \"line\");\n    if (lineStyle) {\n      const color = nodeVal(get1(lineStyle, \"color\")),\n        opacity = parseFloat(nodeVal(get1(lineStyle, \"opacity\"))),\n        width = parseFloat(nodeVal(get1(lineStyle, \"width\")));\n      if (color) style.stroke = color;\n      if (!isNaN(opacity)) style[\"stroke-opacity\"] = opacity;\n      // GPX width is in mm, convert to px with 96 px per inch\n      if (!isNaN(width)) style[\"stroke-width\"] = (width * 96) / 25.4;\n    }\n  }\n  return style;\n}\n\n// get the contents of multiple text nodes, if present\nfunction getMulti(x, ys) {\n  const o = {};\n  let n;\n  let k;\n  for (k = 0; k < ys.length; k++) {\n    n = get1(x, ys[k]);\n    if (n) o[ys[k]] = nodeVal(n);\n  }\n  return o;\n}\nfunction getProperties(node) {\n  const prop = getMulti(node, [\n    \"name\",\n    \"cmt\",\n    \"desc\",\n    \"type\",\n    \"time\",\n    \"keywords\",\n  ]);\n  // Parse additional data from our Garmin extension(s)\n  const extensions = node.getElementsByTagNameNS(\n    \"http://www.garmin.com/xmlschemas/GpxExtensions/v3\",\n    \"*\"\n  );\n  for (let i = 0; i < extensions.length; i++) {\n    const extension = extensions[i];\n    // Ignore nested extensions, like those on routepoints or trackpoints\n    if (extension.parentNode.parentNode === node) {\n      prop[extension.tagName.replace(\":\", \"_\")] = nodeVal(extension);\n    }\n  }\n  const links = node.getElementsByTagName(\"link\");\n  if (links.length) prop.links = [];\n  for (let i = 0; i < links.length; i++) {\n    prop.links.push(\n      Object.assign(\n        { href: links[i].getAttribute(\"href\") },\n        getMulti(links[i], [\"text\", \"type\"])\n      )\n    );\n  }\n  return prop;\n}\n\n// one Y child of X, if any, otherwise null\nfunction get1(x, y) {\n  const n = x.getElementsByTagName(y);\n  return n.length ? n[0] : null;\n}\n\nfunction coordPair(x) {\n  const ll = [\n    parseFloat(x.getAttribute(\"lon\")),\n    parseFloat(x.getAttribute(\"lat\")),\n  ];\n  const ele = get1(x, \"ele\");\n  // handle namespaced attribute in browser\n  const heartRate = get1(x, \"gpxtpx:hr\") || get1(x, \"hr\");\n  const time = get1(x, \"time\");\n  let e;\n  if (ele) {\n    e = parseFloat(nodeVal(ele));\n    if (!isNaN(e)) {\n      ll.push(e);\n    }\n  }\n  const result = {\n    coordinates: ll,\n    time: time ? nodeVal(time) : null,\n    heartRate: heartRate ? parseFloat(nodeVal(heartRate)) : null,\n  };\n\n  const extensions = get1(x, \"extensions\");\n  if (extensions !== null) {\n    attributeNames\n      .map((r) => r[0])\n      .filter((n) => n !== \"heartrate\")\n      .forEach((name) => {\n        const raw = get1(extensions, name);\n        if (raw !== null) {\n          const v = parseFloat(nodeVal(raw));\n          if (!isNaN(v)) {\n            result[name] = v;\n          }\n        }\n      });\n  }\n  return result;\n}\nfunction getRoute(node) {\n  const line = getPoints(node, \"rtept\");\n  if (!line.line) return;\n  return {\n    type: \"Feature\",\n    properties: Object.assign(\n      getProperties(node),\n      getLineStyle(get1(node, \"extensions\"))\n    ),\n    geometry: {\n      type: \"LineString\",\n      coordinates: line.line,\n    },\n  };\n}\nfunction getPoints(node, pointname) {\n  const pts = node.getElementsByTagName(pointname);\n  const line = [];\n  const times = [];\n  const l = pts.length;\n  const extendedValues = {};\n  if (l < 2) return {}; // Invalid line in GeoJSON\n  for (let i = 0; i < l; i++) {\n    const c = coordPair(pts[i]);\n    line.push(c.coordinates);\n    if (c.time) times.push(c.time);\n    attributeNames\n      .map((r) => r[0])\n      .forEach((name) => {\n        if (c[name] || extendedValues[name]) {\n          if (!extendedValues[name]) {\n            extendedValues[name] = Array(i).fill(null);\n          }\n          extendedValues[name].push(c[name] || null);\n        }\n      });\n  }\n  const result = {\n    line: line,\n    times: times,\n  };\n  attributeNames.forEach((n) => {\n    if (extendedValues[n[0]]) {\n      result[n[1]] = extendedValues[n[0]] || [];\n    }\n  });\n  return result;\n}\nfunction getTrack(node) {\n  const segments = node.getElementsByTagName(\"trkseg\");\n  const track = [];\n  const times = [];\n  const extendedValues = {};\n  let line;\n  for (let i = 0; i < segments.length; i++) {\n    line = getPoints(segments[i], \"trkpt\");\n    if (line) {\n      if (line.line) track.push(line.line);\n      if (line.times && line.times.length) times.push(line.times);\n\n      attributeNames\n        .map((r) => r[1])\n        .forEach((name) => {\n          if (\n            (extendedValues[name] && extendedValues[name].length) ||\n            (line[name] && line[name].length)\n          ) {\n            if (!extendedValues[name]) {\n              extendedValues[name] = [];\n            }\n            if (!extendedValues[name].length) {\n              for (let s = 0; s < i; s++) {\n                extendedValues[name].push(Array(track[s].length).fill(null));\n              }\n            }\n            if (line[name] && line[name].length) {\n              extendedValues[name].push(line[name]);\n            } else {\n              extendedValues[name].push(\n                Array(line.line.length || 0).fill(null)\n              );\n            }\n          }\n        });\n    }\n  }\n  if (track.length === 0) return;\n  const properties = Object.assign(\n    getProperties(node),\n    getLineStyle(get1(node, \"extensions\"))\n  );\n  if (times.length)\n    properties.coordTimes = track.length === 1 ? times[0] : times;\n  attributeNames.forEach((n) => {\n    if (extendedValues[n[1]] && extendedValues[n[1]].length) {\n      properties[n[1]] =\n        track.length === 1 ? extendedValues[n[1]][0] : extendedValues[n[1]];\n    }\n  });\n\n  return {\n    type: \"Feature\",\n    properties: properties,\n    geometry: {\n      type: track.length === 1 ? \"LineString\" : \"MultiLineString\",\n      coordinates: track.length === 1 ? track[0] : track,\n    },\n  };\n}\n\nfunction getPoint(node) {\n  return {\n    type: \"Feature\",\n    properties: Object.assign(getProperties(node), getMulti(node, [\"sym\"])),\n    geometry: {\n      type: \"Point\",\n      coordinates: coordPair(node).coordinates,\n    },\n  };\n}\n\nexport function* gpxGen(doc) {\n  const tracks = doc.getElementsByTagName(\"trk\");\n  const routes = doc.getElementsByTagName(\"rte\");\n  const waypoints = doc.getElementsByTagName(\"wpt\");\n\n  for (let i = 0; i < tracks.length; i++) {\n    const feature = getTrack(tracks[i]);\n    if (feature) yield feature;\n  }\n  for (let i = 0; i < routes.length; i++) {\n    const feature = getRoute(routes[i]);\n    if (feature) yield feature;\n  }\n  for (let i = 0; i < waypoints.length; i++) {\n    yield getPoint(waypoints[i]);\n  }\n}\n\nexport function gpx(doc) {\n  return {\n    type: \"FeatureCollection\",\n    features: Array.from(gpxGen(doc)),\n  };\n}\n","import { nodeVal } from \"./shared\";\n\nconst removeSpace = /\\s*/g;\nconst trimSpace = /^\\s*|\\s*$/g;\nconst splitSpace = /\\s+/;\n\n// generate a short, numeric hash of a string\nfunction okhash(x) {\n  if (!x || !x.length) return 0;\n  let h = 0;\n  for (let i = 0; i < x.length; i++) {\n    h = ((h << 5) - h + x.charCodeAt(i)) | 0;\n  }\n  return h;\n}\n\n// one Y child of X, if any, otherwise null\nfunction get1(x, y) {\n  const n = x.getElementsByTagName(y);\n  return n.length ? n[0] : null;\n}\n\n// get one coordinate from a coordinate array, if any\nfunction coord1(v) {\n  return v.replace(removeSpace, \"\").split(\",\").map(parseFloat);\n}\n\n// get all coordinates from a coordinate array as [[],[]]\nfunction coord(v) {\n  return v.replace(trimSpace, \"\").split(splitSpace).map(coord1);\n}\n\nfunction xml2str(node) {\n  if (node.xml !== undefined) return node.xml;\n  if (node.tagName) {\n    let output = node.tagName;\n    for (let i = 0; i < node.attributes.length; i++) {\n      output += node.attributes[i].name + node.attributes[i].value;\n    }\n    for (let i = 0; i < node.childNodes.length; i++) {\n      output += xml2str(node.childNodes[i]);\n    }\n    return output;\n  }\n  if (node.nodeName === \"#text\") {\n    return (node.nodeValue || node.value || \"\").trim();\n  }\n  if (node.nodeName === \"#cdata-section\") {\n    return node.nodeValue;\n  }\n  return \"\";\n}\n\nconst geotypes = [\"Polygon\", \"LineString\", \"Point\", \"Track\", \"gx:Track\"];\n\nfunction kmlColor(properties, elem, prefix) {\n  let v = nodeVal(get1(elem, \"color\")) || \"\";\n  const colorProp =\n    prefix == \"stroke\" || prefix === \"fill\" ? prefix : prefix + \"-color\";\n  if (v.substr(0, 1) === \"#\") {\n    v = v.substr(1);\n  }\n  if (v.length === 6 || v.length === 3) {\n    properties[colorProp] = v;\n  } else if (v.length === 8) {\n    properties[prefix + \"-opacity\"] = parseInt(v.substr(0, 2), 16) / 255;\n    properties[colorProp] =\n      \"#\" + v.substr(6, 2) + v.substr(4, 2) + v.substr(2, 2);\n  }\n}\n\nfunction numericProperty(properties, elem, source, target) {\n  const val = parseFloat(nodeVal(get1(elem, source)));\n  if (!isNaN(val)) properties[target] = val;\n}\n\nfunction gxCoords(root) {\n  let elems = root.getElementsByTagName(\"coord\");\n  const coords = [];\n  const times = [];\n  if (elems.length === 0) elems = root.getElementsByTagName(\"gx:coord\");\n  for (let i = 0; i < elems.length; i++) {\n    coords.push(nodeVal(elems[i]).split(\" \").map(parseFloat));\n  }\n  const timeElems = root.getElementsByTagName(\"when\");\n  for (let j = 0; j < timeElems.length; j++) times.push(nodeVal(timeElems[j]));\n  return {\n    coords: coords,\n    times: times,\n  };\n}\n\nfunction getGeometry(root) {\n  let geomNode;\n  let geomNodes;\n  let i;\n  let j;\n  let k;\n  const geoms = [];\n  const coordTimes = [];\n  if (get1(root, \"MultiGeometry\")) {\n    return getGeometry(get1(root, \"MultiGeometry\"));\n  }\n  if (get1(root, \"MultiTrack\")) {\n    return getGeometry(get1(root, \"MultiTrack\"));\n  }\n  if (get1(root, \"gx:MultiTrack\")) {\n    return getGeometry(get1(root, \"gx:MultiTrack\"));\n  }\n  for (i = 0; i < geotypes.length; i++) {\n    geomNodes = root.getElementsByTagName(geotypes[i]);\n    if (geomNodes) {\n      for (j = 0; j < geomNodes.length; j++) {\n        geomNode = geomNodes[j];\n        if (geotypes[i] === \"Point\") {\n          geoms.push({\n            type: \"Point\",\n            coordinates: coord1(nodeVal(get1(geomNode, \"coordinates\"))),\n          });\n        } else if (geotypes[i] === \"LineString\") {\n          geoms.push({\n            type: \"LineString\",\n            coordinates: coord(nodeVal(get1(geomNode, \"coordinates\"))),\n          });\n        } else if (geotypes[i] === \"Polygon\") {\n          const rings = geomNode.getElementsByTagName(\"LinearRing\"),\n            coords = [];\n          for (k = 0; k < rings.length; k++) {\n            coords.push(coord(nodeVal(get1(rings[k], \"coordinates\"))));\n          }\n          geoms.push({\n            type: \"Polygon\",\n            coordinates: coords,\n          });\n        } else if (geotypes[i] === \"Track\" || geotypes[i] === \"gx:Track\") {\n          const track = gxCoords(geomNode);\n          geoms.push({\n            type: \"LineString\",\n            coordinates: track.coords,\n          });\n          if (track.times.length) coordTimes.push(track.times);\n        }\n      }\n    }\n  }\n  return {\n    geoms: geoms,\n    coordTimes: coordTimes,\n  };\n}\n\nfunction getPlacemark(root, styleIndex, styleMapIndex, styleByHash) {\n  const geomsAndTimes = getGeometry(root);\n  let i;\n  const properties = {};\n  const name = nodeVal(get1(root, \"name\"));\n  const address = nodeVal(get1(root, \"address\"));\n  let styleUrl = nodeVal(get1(root, \"styleUrl\"));\n  const description = nodeVal(get1(root, \"description\"));\n  const timeSpan = get1(root, \"TimeSpan\");\n  const timeStamp = get1(root, \"TimeStamp\");\n  const extendedData = get1(root, \"ExtendedData\");\n  let iconStyle = get1(root, \"IconStyle\");\n  let labelStyle = get1(root, \"LabelStyle\");\n  let lineStyle = get1(root, \"LineStyle\");\n  let polyStyle = get1(root, \"PolyStyle\");\n  const visibility = get1(root, \"visibility\");\n\n  if (name) properties.name = name;\n  if (address) properties.address = address;\n  if (styleUrl) {\n    if (styleUrl[0] !== \"#\") {\n      styleUrl = \"#\" + styleUrl;\n    }\n\n    properties.styleUrl = styleUrl;\n    if (styleIndex[styleUrl]) {\n      properties.styleHash = styleIndex[styleUrl];\n    }\n    if (styleMapIndex[styleUrl]) {\n      properties.styleMapHash = styleMapIndex[styleUrl];\n      properties.styleHash = styleIndex[styleMapIndex[styleUrl].normal];\n    }\n    // Try to populate the lineStyle or polyStyle since we got the style hash\n    const style = styleByHash[properties.styleHash];\n    if (style) {\n      if (!iconStyle) iconStyle = get1(style, \"IconStyle\");\n      if (!labelStyle) labelStyle = get1(style, \"LabelStyle\");\n      if (!lineStyle) lineStyle = get1(style, \"LineStyle\");\n      if (!polyStyle) polyStyle = get1(style, \"PolyStyle\");\n    }\n  }\n  if (description) properties.description = description;\n  if (timeSpan) {\n    const begin = nodeVal(get1(timeSpan, \"begin\"));\n    const end = nodeVal(get1(timeSpan, \"end\"));\n    properties.timespan = { begin: begin, end: end };\n  }\n  if (timeStamp) {\n    properties.timestamp = nodeVal(get1(timeStamp, \"when\"));\n  }\n  if (iconStyle) {\n    kmlColor(properties, iconStyle, \"icon\");\n    numericProperty(properties, iconStyle, \"scale\", \"icon-scale\");\n    numericProperty(properties, iconStyle, \"heading\", \"icon-heading\");\n\n    const hotspot = get1(iconStyle, \"hotSpot\");\n    if (hotspot) {\n      const left = parseFloat(hotspot.getAttribute(\"x\"));\n      const top = parseFloat(hotspot.getAttribute(\"y\"));\n      if (!isNaN(left) && !isNaN(top)) properties[\"icon-offset\"] = [left, top];\n    }\n    const icon = get1(iconStyle, \"Icon\");\n    if (icon) {\n      const href = nodeVal(get1(icon, \"href\"));\n      if (href) properties.icon = href;\n    }\n  }\n  if (labelStyle) {\n    kmlColor(properties, labelStyle, \"label\");\n    numericProperty(properties, labelStyle, \"scale\", \"label-scale\");\n  }\n  if (lineStyle) {\n    kmlColor(properties, lineStyle, \"stroke\");\n    numericProperty(properties, lineStyle, \"width\", \"stroke-width\");\n  }\n  if (polyStyle) {\n    kmlColor(properties, polyStyle, \"fill\");\n    const fill = nodeVal(get1(polyStyle, \"fill\"));\n    const outline = nodeVal(get1(polyStyle, \"outline\"));\n    if (fill)\n      properties[\"fill-opacity\"] =\n        fill === \"1\" ? properties[\"fill-opacity\"] || 1 : 0;\n    if (outline)\n      properties[\"stroke-opacity\"] =\n        outline === \"1\" ? properties[\"stroke-opacity\"] || 1 : 0;\n  }\n  if (extendedData) {\n    const datas = extendedData.getElementsByTagName(\"Data\"),\n      simpleDatas = extendedData.getElementsByTagName(\"SimpleData\");\n\n    for (i = 0; i < datas.length; i++) {\n      properties[datas[i].getAttribute(\"name\")] = nodeVal(\n        get1(datas[i], \"value\")\n      );\n    }\n    for (i = 0; i < simpleDatas.length; i++) {\n      properties[simpleDatas[i].getAttribute(\"name\")] = nodeVal(simpleDatas[i]);\n    }\n  }\n  if (visibility) {\n    properties.visibility = nodeVal(visibility);\n  }\n  if (geomsAndTimes.coordTimes.length) {\n    properties.coordTimes =\n      geomsAndTimes.coordTimes.length === 1\n        ? geomsAndTimes.coordTimes[0]\n        : geomsAndTimes.coordTimes;\n  }\n  const feature = {\n    type: \"Feature\",\n    geometry:\n      geomsAndTimes.geoms.length === 0\n        ? null\n        : geomsAndTimes.geoms.length === 1\n        ? geomsAndTimes.geoms[0]\n        : {\n            type: \"GeometryCollection\",\n            geometries: geomsAndTimes.geoms,\n          },\n    properties: properties,\n  };\n  if (root.getAttribute(\"id\")) feature.id = root.getAttribute(\"id\");\n  return feature;\n}\n\nexport function* kmlGen(doc) {\n  // styleindex keeps track of hashed styles in order to match feature\n  const styleIndex = {};\n  const styleByHash = {};\n  // stylemapindex keeps track of style maps to expose in properties\n  const styleMapIndex = {};\n  // atomic geospatial types supported by KML - MultiGeometry is\n  // handled separately\n  // all root placemarks in the file\n  const placemarks = doc.getElementsByTagName(\"Placemark\");\n  const styles = doc.getElementsByTagName(\"Style\");\n  const styleMaps = doc.getElementsByTagName(\"StyleMap\");\n\n  for (let k = 0; k < styles.length; k++) {\n    const hash = okhash(xml2str(styles[k])).toString(16);\n    styleIndex[\"#\" + styles[k].getAttribute(\"id\")] = hash;\n    styleByHash[hash] = styles[k];\n  }\n  for (let l = 0; l < styleMaps.length; l++) {\n    styleIndex[\"#\" + styleMaps[l].getAttribute(\"id\")] = okhash(\n      xml2str(styleMaps[l])\n    ).toString(16);\n    const pairs = styleMaps[l].getElementsByTagName(\"Pair\");\n    const pairsMap = {};\n    for (let m = 0; m < pairs.length; m++) {\n      pairsMap[nodeVal(get1(pairs[m], \"key\"))] = nodeVal(\n        get1(pairs[m], \"styleUrl\")\n      );\n    }\n    styleMapIndex[\"#\" + styleMaps[l].getAttribute(\"id\")] = pairsMap;\n  }\n  for (let j = 0; j < placemarks.length; j++) {\n    const feature = getPlacemark(\n      placemarks[j],\n      styleIndex,\n      styleMapIndex,\n      styleByHash\n    );\n    if (feature) yield feature;\n  }\n}\n\nexport function kml(doc) {\n  return {\n    type: \"FeatureCollection\",\n    features: Array.from(kmlGen(doc)),\n  };\n}\n"]},"metadata":{},"sourceType":"script"}
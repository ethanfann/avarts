{"ast":null,"code":"var _jsxFileName = \"/home/ethan/avarts/frontend/src/components/SignUp.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSignUpMutation } from '../generated/graphql';\nimport { emailValidation } from '../utils/validation';\n\nconst halfmoon = require('halfmoon');\n\nexport const SignUp = () => {\n  let fileReader;\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [img, setImg] = useState();\n  const {\n    register,\n    setValue,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    signup(data);\n  };\n\n  const [signupMutation] = useSignUpMutation();\n  useEffect(() => {\n    halfmoon.onDOMContentLoaded();\n  }, []);\n\n  const handleImgRead = async () => {\n    const content = fileReader.result;\n    console.log(content);\n  };\n\n  const handleImgChosen = img => {\n    fileReader = new FileReader();\n    fileReader.onloadend = handleImgRead;\n    setImg(img);\n  };\n\n  const selectedImg = () => {\n    const text = img && img.name ? img.name : 'No picture selected';\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: text === 'No picture selected' ? 'text-muted' : 'text-success',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, text);\n  };\n\n  const passwordMatch = () => {\n    // Match if both are blank\n    if (password === '' && passwordConfirm === '') return true; // Match if first password typed, but second is blank\n    else if (password !== '' && passwordConfirm === '') return true;else if (password !== '' && passwordConfirm !== '') {\n        return password === passwordConfirm;\n      }\n  };\n\n  const signup = async data => {\n    const {\n      firstName,\n      lastName,\n      email,\n      password,\n      passwordConfirm\n    } = data;\n\n    try {\n      const result = await signupMutation({\n        variables: {\n          firstName: firstName,\n          lastName: lastName,\n          email: email,\n          password: password,\n          passwordConfirmation: passwordConfirm\n        }\n      });\n\n      if (result && result.data && result.data.signUp) {\n        localStorage.setItem('token', result.data.signUp.token);\n        window.location.reload();\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    style: {\n      background: 'url(\"background.JPG\")',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      backgroundSize: 'cover'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10vh'\n    },\n    className: \"card w-400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Join Strava Clone today, it's Free\"), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      height: '50%'\n    },\n    onSubmit: handleSubmit(onSubmit),\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row row-eq-spacing-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"firstName\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    required: true,\n    onChange: e => setFirstName(e.target.value.trim()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row row-eq-spacing-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"lastName\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    required: true,\n    onChange: e => setLastName(e.target.value.trim()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row row-eq-spacing-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: true,\n      pattern: emailValidation\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-group ${!passwordMatch() ? 'is-invalid' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row row-eq-spacing-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    type: \"password\",\n    className: \"form-control\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"passwordConfirm\",\n    ref: register({\n      required: true\n    }),\n    type: \"password\",\n    className: \"form-control\",\n    onChange: e => setPasswordConfirm(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    value: \"Sign Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }))))));\n};\nexport default SignUp;","map":{"version":3,"sources":["/home/ethan/avarts/frontend/src/components/SignUp.tsx"],"names":["React","useEffect","useState","useForm","useSignUpMutation","emailValidation","halfmoon","require","SignUp","fileReader","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","img","setImg","register","setValue","handleSubmit","onSubmit","data","console","log","signup","signupMutation","onDOMContentLoaded","handleImgRead","content","result","handleImgChosen","FileReader","onloadend","selectedImg","text","name","passwordMatch","variables","passwordConfirmation","signUp","localStorage","setItem","token","window","location","reload","error","background","backgroundRepeat","backgroundPosition","backgroundSize","marginTop","height","required","e","target","value","trim","pattern"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SAASC,eAAT,QAAgC,qBAAhC;;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAUA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1B,MAAIC,UAAJ;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACkB,GAAD,EAAMC,MAAN,IAAgBnB,QAAQ,EAA9B;AAEA,QAAM;AAAEoB,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAuCrB,OAAO,EAApD;;AACA,QAAMsB,QAAQ,GAAIC,IAAD,IAAe;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,IAAAA,MAAM,CAACH,IAAD,CAAN;AACD,GAHD;;AAKA,QAAM,CAACI,cAAD,IAAmB1B,iBAAiB,EAA1C;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,QAAQ,CAACyB,kBAAT;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,aAAa,GAAG,YAAY;AAChC,UAAMC,OAAO,GAAGxB,UAAU,CAACyB,MAA3B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACD,GAHD;;AAKA,QAAME,eAAe,GAAIf,GAAD,IAAe;AACrCX,IAAAA,UAAU,GAAG,IAAI2B,UAAJ,EAAb;AACA3B,IAAAA,UAAU,CAAC4B,SAAX,GAAuBL,aAAvB;AACAX,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAJD;;AAMA,QAAMkB,WAAW,GAAG,MAAM;AACxB,UAAMC,IAAI,GAAGnB,GAAG,IAAIA,GAAG,CAACoB,IAAX,GAAkBpB,GAAG,CAACoB,IAAtB,GAA6B,qBAA1C;AACA,wBACE;AACE,MAAA,SAAS,EACPD,IAAI,KAAK,qBAAT,GAAiC,YAAjC,GAAgD,cAFpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGA,IALH,CADF;AASD,GAXD;;AAaA,QAAME,aAAa,GAAG,MAAM;AAC1B;AACA,QAAIzB,QAAQ,KAAK,EAAb,IAAmBE,eAAe,KAAK,EAA3C,EAA+C,OAAO,IAAP,CAA/C,CACA;AADA,SAEK,IAAIF,QAAQ,KAAK,EAAb,IAAmBE,eAAe,KAAK,EAA3C,EAA+C,OAAO,IAAP,CAA/C,KACA,IAAIF,QAAQ,KAAK,EAAb,IAAmBE,eAAe,KAAK,EAA3C,EAA+C;AAClD,eAAOF,QAAQ,KAAKE,eAApB;AACD;AACF,GARD;;AAUA,QAAMW,MAAM,GAAG,MAAOH,IAAP,IAA0B;AACvC,UAAM;AAAEhB,MAAAA,SAAF;AAAaE,MAAAA,QAAb;AAAuBE,MAAAA,KAAvB;AAA8BE,MAAAA,QAA9B;AAAwCE,MAAAA;AAAxC,QAA4DQ,IAAlE;;AAEA,QAAI;AACF,YAAMQ,MAAM,GAAG,MAAMJ,cAAc,CAAC;AAClCY,QAAAA,SAAS,EAAE;AACThC,UAAAA,SAAS,EAAEA,SADF;AAETE,UAAAA,QAAQ,EAAEA,QAFD;AAGTE,UAAAA,KAAK,EAAEA,KAHE;AAITE,UAAAA,QAAQ,EAAEA,QAJD;AAKT2B,UAAAA,oBAAoB,EAAEzB;AALb;AADuB,OAAD,CAAnC;;AASA,UAAIgB,MAAM,IAAIA,MAAM,CAACR,IAAjB,IAAyBQ,MAAM,CAACR,IAAP,CAAYkB,MAAzC,EAAiD;AAC/CC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BZ,MAAM,CAACR,IAAP,CAAYkB,MAAZ,CAAmBG,KAAjD;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,KAdD,CAcE,OAAOC,KAAP,EAAc;AACdxB,MAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAZ;AACD;AACF,GApBD;;AAsBA,sBACE;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE,uBADP;AAELC,MAAAA,gBAAgB,EAAE,WAFb;AAGLC,MAAAA,kBAAkB,EAAE,QAHf;AAILC,MAAAA,cAAc,EAAE;AAJX,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAmC,IAAA,SAAS,EAAC,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,eAIE;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADT;AAEE,IAAA,QAAQ,EAAEjC,YAAY,CAACC,QAAD,CAFxB;AAGE,IAAA,SAAS,EAAC,EAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,GAAG,EAAEH,QAAQ,CAAC;AAAEoC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAFf;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,SAAS,EAAC,cAJZ;AAKE,IAAA,QAAQ,EAAE,IALZ;AAME,IAAA,QAAQ,EAAGC,CAAD,IAAOhD,YAAY,CAACgD,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,IAAf,EAAD,CAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,eAiBE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAExC,QAAQ,CAAC;AAAEoC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAFf;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,SAAS,EAAC,cAJZ;AAKE,IAAA,QAAQ,EAAE,IALZ;AAME,IAAA,QAAQ,EAAGC,CAAD,IAAO9C,WAAW,CAAC8C,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,IAAf,EAAD,CAN9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjBF,eA6BE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,GAAG,EAAExC,QAAQ,CAAC;AACZoC,MAAAA,QAAQ,EAAE,IADE;AAEZK,MAAAA,OAAO,EAAE1D;AAFG,KAAD,CAFf;AAME,IAAA,IAAI,EAAC,MANP;AAOE,IAAA,SAAS,EAAC,cAPZ;AAQE,IAAA,QAAQ,EAAGsD,CAAD,IAAO5C,QAAQ,CAAC4C,CAAC,CAACC,MAAF,CAASC,KAAV,CAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA7BF,eA2CE;AACE,IAAA,SAAS,EAAG,cAAa,CAACpB,aAAa,EAAd,GAAmB,YAAnB,GAAkC,EAAG,EADhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAEnB,QAAQ,CAAC;AAAEoC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAFf;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,SAAS,EAAC,cAJZ;AAKE,IAAA,QAAQ,EAAGC,CAAD,IAAO1C,WAAW,CAAC0C,CAAC,CAACC,MAAF,CAASC,KAAV,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAYE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,IAAA,IAAI,EAAC,iBADP;AAEE,IAAA,GAAG,EAAEvC,QAAQ,CAAC;AAAEoC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAFf;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,SAAS,EAAC,cAJZ;AAKE,IAAA,QAAQ,EAAGC,CAAD,IAAOxC,kBAAkB,CAACwC,CAAC,CAACC,MAAF,CAASC,KAAV,CALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAZF,CAHF,CA3CF,eAuEE;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvEF,CAJF,CADF,CADF,CATF,CADF;AAkGD,CAhLM;AAkLP,eAAerD,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useSignUpMutation } from '../generated/graphql'\nimport { emailValidation } from '../utils/validation'\n\nconst halfmoon = require('halfmoon')\n\ntype FormData = {\n  firstName: string\n  lastName: string\n  email: string\n  password: string\n  passwordConfirm: string\n}\n\nexport const SignUp = () => {\n  let fileReader: FileReader\n\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirm, setPasswordConfirm] = useState('')\n  const [img, setImg] = useState<File>()\n\n  const { register, setValue, handleSubmit } = useForm<FormData>()\n  const onSubmit = (data: any) => {\n    console.log(data)\n    signup(data)\n  }\n\n  const [signupMutation] = useSignUpMutation()\n\n  useEffect(() => {\n    halfmoon.onDOMContentLoaded()\n  }, [])\n\n  const handleImgRead = async () => {\n    const content = fileReader.result\n    console.log(content)\n  }\n\n  const handleImgChosen = (img: File) => {\n    fileReader = new FileReader()\n    fileReader.onloadend = handleImgRead\n    setImg(img)\n  }\n\n  const selectedImg = () => {\n    const text = img && img.name ? img.name : 'No picture selected'\n    return (\n      <p\n        className={\n          text === 'No picture selected' ? 'text-muted' : 'text-success'\n        }\n      >\n        {text}\n      </p>\n    )\n  }\n\n  const passwordMatch = () => {\n    // Match if both are blank\n    if (password === '' && passwordConfirm === '') return true\n    // Match if first password typed, but second is blank\n    else if (password !== '' && passwordConfirm === '') return true\n    else if (password !== '' && passwordConfirm !== '') {\n      return password === passwordConfirm\n    }\n  }\n\n  const signup = async (data: FormData) => {\n    const { firstName, lastName, email, password, passwordConfirm } = data\n\n    try {\n      const result = await signupMutation({\n        variables: {\n          firstName: firstName,\n          lastName: lastName,\n          email: email,\n          password: password,\n          passwordConfirmation: passwordConfirm,\n        },\n      })\n      if (result && result.data && result.data.signUp) {\n        localStorage.setItem('token', result.data.signUp.token)\n        window.location.reload()\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <div\n      className=\"content-wrapper\"\n      style={{\n        background: 'url(\"background.JPG\")',\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n      }}\n    >\n      <div className=\"container-fluid\">\n        <div className=\"d-flex justify-content-center\">\n          <div style={{ marginTop: '10vh' }} className=\"card w-400\">\n            <h2 className=\"text-align-center\">\n              Join Strava Clone today, it's Free\n            </h2>\n            <form\n              style={{ height: '50%' }}\n              onSubmit={handleSubmit(onSubmit)}\n              className=\"\"\n            >\n              <div className=\"form-row row-eq-spacing-sm\">\n                <label className=\"required\">First Name</label>\n                <input\n                  name=\"firstName\"\n                  ref={register({ required: true })}\n                  type=\"text\"\n                  className=\"form-control\"\n                  required={true}\n                  onChange={(e) => setFirstName(e.target.value.trim())}\n                />\n              </div>\n\n              <div className=\"form-row row-eq-spacing-sm\">\n                <label className=\"required\">Last Name</label>\n                <input\n                  name=\"lastName\"\n                  ref={register({ required: true })}\n                  type=\"text\"\n                  className=\"form-control\"\n                  required={true}\n                  onChange={(e) => setLastName(e.target.value.trim())}\n                />\n              </div>\n\n              <div className=\"form-row row-eq-spacing-sm\">\n                <label className=\"required\">Email</label>\n                <input\n                  name=\"email\"\n                  ref={register({\n                    required: true,\n                    pattern: emailValidation,\n                  })}\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n\n              <div\n                className={`form-group ${!passwordMatch() ? 'is-invalid' : ''}`}\n              >\n                <div className=\"form-row row-eq-spacing-sm\">\n                  <div className=\"col-sm\">\n                    <label className=\"required\">Password</label>\n                    <input\n                      name=\"password\"\n                      ref={register({ required: true })}\n                      type=\"password\"\n                      className=\"form-control\"\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                  </div>\n\n                  <div className=\"col-sm\">\n                    <label className=\"required\">Confirm Password</label>\n                    <input\n                      name=\"passwordConfirm\"\n                      ref={register({ required: true })}\n                      type=\"password\"\n                      className=\"form-control\"\n                      onChange={(e) => setPasswordConfirm(e.target.value)}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <input\n                className=\"btn btn-primary\"\n                type=\"submit\"\n                value=\"Sign Up\"\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}
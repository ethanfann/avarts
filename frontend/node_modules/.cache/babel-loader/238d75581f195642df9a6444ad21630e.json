{"ast":null,"code":"var _jsxFileName = \"/home/ethan/avarts/frontend/src/components/SignUp.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { useForm } from \"react-hook-form\";\nimport Header from \"../components/Header\";\nimport { useSigninMutation, useSignupMutation } from \"../generated/graphql\";\nimport { emailValidation } from \"../utils/validation\";\n\nconst halfmoon = require(\"halfmoon\");\n\nexport const SignUp = () => {\n  let fileReader;\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [img, setImg] = useState();\n  const {\n    register,\n    setValue,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    signup(data);\n  };\n\n  const [signupMutation] = useSignupMutation();\n  const [signinMutation] = useSigninMutation();\n  useEffect(() => {\n    halfmoon.onDOMContentLoaded();\n  }, []);\n\n  const handleImgRead = async () => {\n    const content = fileReader.result;\n    console.log(content);\n  };\n\n  const handleImgChosen = img => {\n    fileReader = new FileReader();\n    fileReader.onloadend = handleImgRead;\n    setImg(img);\n  };\n\n  const selectedImg = () => {\n    const text = img && img.name ? img.name : \"No picture selected\";\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: text === \"No picture selected\" ? \"text-muted\" : \"text-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, text);\n  };\n\n  const passwordMatch = () => {\n    // Match if both are blank\n    if (password === \"\" && passwordConfirm === \"\") return true; // Match if first password typed, but second is blank\n    else if (password !== \"\" && passwordConfirm === \"\") return true;else if (password !== \"\" && passwordConfirm !== \"\") {\n        return password === passwordConfirm;\n      }\n  };\n\n  const signup = async data => {\n    const {\n      userName,\n      email,\n      password\n    } = data;\n\n    try {\n      const result = await signupMutation({\n        variables: {\n          name: userName,\n          email: email,\n          password: password\n        }\n      });\n\n      if (result && result.data && result.data.signup) {\n        // localStorage.setItem(\"token\", result.data.signup.jwtToken);\n        // window.location.reload();\n        console.log(result.data.signup);\n        const signin = await signinMutation({\n          variables: {\n            email: email,\n            password: password\n          }\n        });\n\n        if (signin && signin.data && signin.data.signin && signin.data.signin.token) {\n          console.log(signin.data.signin);\n          localStorage.setItem(\"token\", signin.data.signin.token);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"pageWrapper\",\n    className: \"page-wrapper with-navbar\",\n    style: {\n      background: 'url(\"background.JPG\")',\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center\",\n      backgroundSize: \"cover\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"meta\", {\n    charSet: \"utf-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Strava Clone\")), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"10vh\"\n    },\n    className: \"card w-400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, \"Join Strava Clone today, it's Free\"), /*#__PURE__*/React.createElement(\"form\", {\n    style: {\n      height: \"50%\"\n    },\n    onSubmit: handleSubmit(onSubmit),\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row row-eq-spacing-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"User Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"userName\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    required: true,\n    onChange: e => setUserName(e.target.value.trim()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row row-eq-spacing-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    ref: register({\n      required: true,\n      pattern: emailValidation\n    }),\n    type: \"text\",\n    className: \"form-control\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-group ${!passwordMatch() ? \"is-invalid\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row row-eq-spacing-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    type: \"password\",\n    className: \"form-control\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"passwordConfirm\",\n    ref: register({\n      required: true\n    }),\n    type: \"password\",\n    className: \"form-control\",\n    onChange: e => setPasswordConfirm(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    value: \"Sign Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }))))))));\n};\nexport default SignUp;","map":{"version":3,"sources":["/home/ethan/avarts/frontend/src/components/SignUp.tsx"],"names":["React","useEffect","useState","Helmet","useForm","Header","useSigninMutation","useSignupMutation","emailValidation","halfmoon","require","SignUp","fileReader","userName","setUserName","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","img","setImg","register","setValue","handleSubmit","onSubmit","data","console","log","signup","signupMutation","signinMutation","onDOMContentLoaded","handleImgRead","content","result","handleImgChosen","FileReader","onloadend","selectedImg","text","name","passwordMatch","variables","signin","token","localStorage","setItem","error","background","backgroundRepeat","backgroundPosition","backgroundSize","marginTop","height","required","e","target","value","trim","pattern"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Helmet from \"react-helmet\";\nimport { useForm } from \"react-hook-form\";\nimport Header from \"../components/Header\";\nimport { useSigninMutation, useSignupMutation } from \"../generated/graphql\";\nimport { emailValidation } from \"../utils/validation\";\n\nconst halfmoon = require(\"halfmoon\");\n\ntype FormData = {\n  userName: string;\n  email: string;\n  password: string;\n  passwordConfirm: string;\n};\n\nexport const SignUp = () => {\n  let fileReader: FileReader;\n\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n  const [img, setImg] = useState<File>();\n\n  const { register, setValue, handleSubmit } = useForm<FormData>();\n  const onSubmit = (data: any) => {\n    console.log(data);\n    signup(data);\n  };\n\n  const [signupMutation] = useSignupMutation();\n  const [signinMutation] = useSigninMutation();\n\n  useEffect(() => {\n    halfmoon.onDOMContentLoaded();\n  }, []);\n\n  const handleImgRead = async () => {\n    const content = fileReader.result;\n    console.log(content);\n  };\n\n  const handleImgChosen = (img: File) => {\n    fileReader = new FileReader();\n    fileReader.onloadend = handleImgRead;\n    setImg(img);\n  };\n\n  const selectedImg = () => {\n    const text = img && img.name ? img.name : \"No picture selected\";\n    return (\n      <p\n        className={\n          text === \"No picture selected\" ? \"text-muted\" : \"text-success\"\n        }\n      >\n        {text}\n      </p>\n    );\n  };\n\n  const passwordMatch = () => {\n    // Match if both are blank\n    if (password === \"\" && passwordConfirm === \"\") return true;\n    // Match if first password typed, but second is blank\n    else if (password !== \"\" && passwordConfirm === \"\") return true;\n    else if (password !== \"\" && passwordConfirm !== \"\") {\n      return password === passwordConfirm;\n    }\n  };\n\n  const signup = async (data: FormData) => {\n    const { userName, email, password } = data;\n\n    try {\n      const result = await signupMutation({\n        variables: {\n          name: userName,\n          email: email,\n          password: password,\n        },\n      });\n      if (result && result.data && result.data.signup) {\n        // localStorage.setItem(\"token\", result.data.signup.jwtToken);\n        // window.location.reload();\n        console.log(result.data.signup);\n        const signin = await signinMutation({\n          variables: {\n            email: email,\n            password: password,\n          },\n        });\n\n        if (\n          signin &&\n          signin.data &&\n          signin.data.signin &&\n          signin.data.signin.token\n        ) {\n          console.log(signin.data.signin);\n          localStorage.setItem(\"token\", signin.data.signin.token);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <div\n        id=\"pageWrapper\"\n        className=\"page-wrapper with-navbar\"\n        style={{\n          background: 'url(\"background.JPG\")',\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"center\",\n          backgroundSize: \"cover\",\n        }}\n      >\n        <Helmet>\n          <meta charSet=\"utf-8\" />\n          <title>Strava Clone</title>\n        </Helmet>\n\n        <Header />\n\n        <div className=\"content-wrapper\">\n          <div className=\"container-fluid\">\n            <div className=\"d-flex justify-content-center\">\n              <div style={{ marginTop: \"10vh\" }} className=\"card w-400\">\n                <h2 className=\"text-align-center\">\n                  Join Strava Clone today, it's Free\n                </h2>\n                <form\n                  style={{ height: \"50%\" }}\n                  onSubmit={handleSubmit(onSubmit)}\n                  className=\"\"\n                >\n                  <div className=\"form-row row-eq-spacing-sm\">\n                    <label className=\"required\">User Name</label>\n                    <input\n                      name=\"userName\"\n                      ref={register({ required: true })}\n                      type=\"text\"\n                      className=\"form-control\"\n                      required={true}\n                      onChange={(e) => setUserName(e.target.value.trim())}\n                    />\n                  </div>\n\n                  <div className=\"form-row row-eq-spacing-sm\">\n                    <label className=\"required\">Email</label>\n                    <input\n                      name=\"email\"\n                      ref={register({\n                        required: true,\n                        pattern: emailValidation,\n                      })}\n                      type=\"text\"\n                      className=\"form-control\"\n                      onChange={(e) => setEmail(e.target.value)}\n                    />\n                  </div>\n\n                  <div\n                    className={`form-group ${\n                      !passwordMatch() ? \"is-invalid\" : \"\"\n                    }`}\n                  >\n                    <div className=\"form-row row-eq-spacing-sm\">\n                      <div className=\"col-sm\">\n                        <label className=\"required\">Password</label>\n                        <input\n                          name=\"password\"\n                          ref={register({ required: true })}\n                          type=\"password\"\n                          className=\"form-control\"\n                          onChange={(e) => setPassword(e.target.value)}\n                        />\n                      </div>\n\n                      <div className=\"col-sm\">\n                        <label className=\"required\">Confirm Password</label>\n                        <input\n                          name=\"passwordConfirm\"\n                          ref={register({ required: true })}\n                          type=\"password\"\n                          className=\"form-control\"\n                          onChange={(e) => setPasswordConfirm(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n\n                  <input\n                    className=\"btn btn-primary\"\n                    type=\"submit\"\n                    value=\"Sign Up\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* <nav className=\"navbar navbar-fixed-bottom\"></nav> */}\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}
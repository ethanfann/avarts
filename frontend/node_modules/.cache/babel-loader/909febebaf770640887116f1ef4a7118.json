{"ast":null,"code":"var _jsxFileName = \"/home/ethan/avarts/frontend/src/App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport Main from './components/Main';\nimport { useMeQuery } from './generated/graphql';\n\nrequire('halfmoon/css/halfmoon.min.css');\n\nconst halfmoon = require('halfmoon');\n\nconst App = () => {\n  var _data$userById, _data$userById2, _data$userById3, _data$userById4, _data$userById5;\n\n  const [user, setUser] = useState();\n  const {\n    data,\n    error,\n    loading\n  } = useMeQuery();\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    if (data) {\n      if (data && data.me) {\n        setUser(data.me);\n      }\n    }\n\n    if (error) {\n      localStorage.removeItem('token');\n      window.location.reload();\n      console.log(error);\n    }\n\n    if (loading) {\n      console.log(loading);\n    }\n  }, [data, error, loading]);\n  useEffect(() => {\n    document.body.classList.add('with-custom-webkit-scrollbars');\n    document.body.classList.add('with-custom-css-scrollbars');\n    const darkModePref = localStorage.getItem('prefer-dark-mode');\n\n    if (darkModePref === 'true') {\n      halfmoon.toggleDarkMode();\n    }\n\n    halfmoon.onDOMContentLoaded();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      user: {\n        id: data === null || data === void 0 ? void 0 : (_data$userById = data.userById) === null || _data$userById === void 0 ? void 0 : _data$userById.id,\n        name: data === null || data === void 0 ? void 0 : (_data$userById2 = data.userById) === null || _data$userById2 === void 0 ? void 0 : _data$userById2.name,\n        img: data === null || data === void 0 ? void 0 : (_data$userById3 = data.userById) === null || _data$userById3 === void 0 ? void 0 : _data$userById3.img,\n        activitiesCount: data === null || data === void 0 ? void 0 : (_data$userById4 = data.userById) === null || _data$userById4 === void 0 ? void 0 : _data$userById4.activitiesByUserId.totalCount\n      },\n      logout: logout\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, (data === null || data === void 0 ? void 0 : (_data$userById5 = data.userById) === null || _data$userById5 === void 0 ? void 0 : _data$userById5.id) === undefined ? /*#__PURE__*/React.createElement(SignUp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 45\n    }\n  }) : /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 58\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/ethan/avarts/frontend/src/App.tsx"],"names":["React","useEffect","useState","Main","useMeQuery","require","halfmoon","App","user","setUser","data","error","loading","logout","localStorage","removeItem","window","location","reload","me","console","log","document","body","classList","add","darkModePref","getItem","toggleDarkMode","onDOMContentLoaded","id","userById","name","img","activitiesCount","activitiesByUserId","totalCount","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Main from './components/Main'\nimport { useMeQuery, User } from './generated/graphql'\n\nrequire('halfmoon/css/halfmoon.min.css')\n\nconst halfmoon = require('halfmoon')\n\ntype UserContextType = Pick<User, 'id' | 'name' | 'email'>\n\nconst App: React.FC = () => {\n  const [user, setUser] = useState<UserContextType>()\n  const { data, error, loading } = useMeQuery()\n\n  const logout = () => {\n    localStorage.removeItem('token')\n    window.location.reload()\n  }\n\n  useEffect(() => {\n    if (data) {\n      if (data && data.me) {\n        setUser(data.me)\n      }\n    }\n    if (error) {\n      localStorage.removeItem('token')\n      window.location.reload()\n      console.log(error)\n    }\n    if (loading) {\n      console.log(loading)\n    }\n  }, [data, error, loading])\n\n  useEffect(() => {\n    document.body.classList.add('with-custom-webkit-scrollbars')\n    document.body.classList.add('with-custom-css-scrollbars')\n\n    const darkModePref = localStorage.getItem('prefer-dark-mode')\n\n    if (darkModePref === 'true') {\n      halfmoon.toggleDarkMode()\n    }\n\n    halfmoon.onDOMContentLoaded()\n  }, [])\n\n  return (\n    <div>\n      <UserContext.Provider\n        value={{\n          user: {\n            id: data?.userById?.id,\n            name: data?.userById?.name,\n            img: data?.userById?.img,\n            activitiesCount: data?.userById?.activitiesByUserId.totalCount,\n          },\n          logout: logout,\n        }}\n      >\n        {data?.userById?.id === undefined ? <SignUp /> : <Main />}\n      </UserContext.Provider>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ethan/avarts/frontend/src/index.tsx\";\nimport { ApolloClient, ApolloProvider, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:3000/graphql\",\n  credentials: \"same-origin\"\n});\nconst authLink = setContext((_, {\n  headers,\n  ...context\n}) => {\n  const token = localStorage.getItem(\"token\");\n  return {\n    headers: { ...headers,\n      ...(token ? {\n        authorization: `Basic ${token}`,\n        token: token\n      } : {})\n    },\n    ...context\n  };\n});\nexport const client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nReactDOM.render( /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/ethan/avarts/frontend/src/index.tsx"],"names":["ApolloClient","ApolloProvider","createHttpLink","InMemoryCache","setContext","React","ReactDOM","App","serviceWorker","httpLink","uri","credentials","authLink","_","headers","context","token","localStorage","getItem","authorization","client","link","concat","cache","render","document","getElementById","unregister"],"mappings":";AAAA,SACEA,YADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,aAJF,QAKO,gBALP;AAMA,SAASC,UAAT,QAA2B,6BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,MAAMC,QAAQ,GAAGP,cAAc,CAAC;AAC9BQ,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,WAAW,EAAE;AAFiB,CAAD,CAA/B;AAKA,MAAMC,QAAQ,GAAGR,UAAU,CAAC,CAACS,CAAD,EAAI;AAAEC,EAAAA,OAAF;AAAW,KAAGC;AAAd,CAAJ,KAAgC;AAC1D,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,SAAO;AACLJ,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEP,UAAIE,KAAK,GAAG;AAAEG,QAAAA,aAAa,EAAG,SAAQH,KAAM,EAAhC;AAAmCA,QAAAA,KAAK,EAAEA;AAA1C,OAAH,GAAuD,EAAhE;AAFO,KADJ;AAKL,OAAGD;AALE,GAAP;AAOD,CAT0B,CAA3B;AAWA,OAAO,MAAMK,MAAM,GAAG,IAAIpB,YAAJ,CAAiB;AACrCqB,EAAAA,IAAI,EAAET,QAAQ,CAACU,MAAT,CAAgBb,QAAhB,CAD+B;AAErCc,EAAAA,KAAK,EAAE,IAAIpB,aAAJ;AAF8B,CAAjB,CAAf;AAKPG,QAAQ,CAACkB,MAAT,eACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAlB,aAAa,CAACmB,UAAd","sourcesContent":["import {\n  ApolloClient,\n  ApolloProvider,\n  createHttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst httpLink = createHttpLink({\n  uri: \"http://localhost:3000/graphql\",\n  credentials: \"same-origin\",\n});\n\nconst authLink = setContext((_, { headers, ...context }) => {\n  const token = localStorage.getItem(\"token\");\n  return {\n    headers: {\n      ...headers,\n      ...(token ? { authorization: `Basic ${token}`, token: token } : {}),\n    },\n    ...context,\n  };\n});\n\nexport const client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}
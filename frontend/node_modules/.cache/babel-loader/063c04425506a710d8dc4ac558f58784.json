{"ast":null,"code":"var _jsxFileName = \"/home/ethan/avarts/frontend/src/components/TimeLine/ActivityCommentBox.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useAddActivityCommentMutation } from '../../generated/graphql';\nimport UserContext from '../../userContext';\nexport const ActivityCommentBox = props => {\n  const {\n    activityId,\n    hidden\n  } = props;\n  const [comment, setComment] = useState('');\n  const [addActivityCommentMutation] = useAddActivityCommentMutation();\n  let commentBox;\n  useEffect(() => {\n    commentBox.focus();\n  });\n  useEffect(() => {\n    const commentButton = document.getElementById('commentButton');\n\n    if (comment.length === 0) {\n      commentButton === null || commentButton === void 0 ? void 0 : commentButton.classList.add('disabled');\n    } else {\n      commentButton === null || commentButton === void 0 ? void 0 : commentButton.classList.remove('disabled');\n    }\n  });\n\n  const disableInput = () => {\n    return comment.length === 0;\n  };\n\n  const addComment = async (e, currentUser) => {\n    e.preventDefault();\n\n    if (currentUser && currentUser.id && activityId) {\n      await addActivityCommentMutation({\n        variables: {\n          comment: comment,\n          userId: currentUser.id,\n          activityId: activityId\n        },\n        refetchQueries: ['activitiesByUserId']\n      });\n    }\n\n    setComment('');\n  };\n\n  return /*#__PURE__*/React.createElement(UserContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, ctx => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      visibility: hidden ? 'hidden' : 'visible'\n    },\n    className: \"mt-5 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => addComment(e, ctx.user),\n    className: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: element => {\n      commentBox = element;\n    },\n    className: \"form-control\",\n    placeholder: \"Enter comment\",\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary btn-sm\",\n    value: \"Submit\",\n    disabled: disableInput(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default ActivityCommentBox;","map":{"version":3,"sources":["/home/ethan/avarts/frontend/src/components/TimeLine/ActivityCommentBox.tsx"],"names":["React","useEffect","useState","useAddActivityCommentMutation","UserContext","ActivityCommentBox","props","activityId","hidden","comment","setComment","addActivityCommentMutation","commentBox","focus","commentButton","document","getElementById","length","classList","add","remove","disableInput","addComment","e","currentUser","preventDefault","id","variables","userId","refetchQueries","ctx","visibility","user","element","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useAddActivityCommentMutation } from '../../generated/graphql'\nimport UserContext, { UserType } from '../../userContext'\n\ntype Props = {\n  activityId: string | undefined\n  hidden: boolean | undefined | null\n}\n\nexport const ActivityCommentBox = (props: Props) => {\n  const { activityId, hidden } = props\n  const [comment, setComment] = useState('')\n  const [addActivityCommentMutation] = useAddActivityCommentMutation()\n  let commentBox: any\n\n  useEffect(() => {\n    commentBox.focus()\n  })\n\n  useEffect(() => {\n    const commentButton = document.getElementById('commentButton')\n\n    if (comment.length === 0) {\n      commentButton?.classList.add('disabled')\n    } else {\n      commentButton?.classList.remove('disabled')\n    }\n  })\n\n  const disableInput = () => {\n    return comment.length === 0\n  }\n\n  const addComment = async (e: React.FormEvent, currentUser: UserType) => {\n    e.preventDefault()\n    if (currentUser && currentUser.id && activityId) {\n      await addActivityCommentMutation({\n        variables: {\n          comment: comment,\n          userId: currentUser.id,\n          activityId: activityId,\n        },\n        refetchQueries: ['activitiesByUserId'],\n      })\n    }\n\n    setComment('')\n  }\n\n  return (\n    <UserContext.Consumer>\n      {(ctx) => (\n        <div\n          style={{ visibility: hidden ? 'hidden' : 'visible' }}\n          className=\"mt-5 mb-5\"\n        >\n          <form\n            onSubmit={(e) => addComment(e, ctx.user)}\n            className=\"form-inline\"\n          >\n            <input\n              ref={(element) => {\n                commentBox = element\n              }}\n              className=\"form-control\"\n              placeholder=\"Enter comment\"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n              autoFocus\n            />\n            <input\n              type=\"submit\"\n              className=\"btn btn-primary btn-sm\"\n              value=\"Submit\"\n              disabled={disableInput()}\n            />\n          </form>\n        </div>\n      )}\n    </UserContext.Consumer>\n  )\n}\n\nexport default ActivityCommentBox\n"]},"metadata":{},"sourceType":"module"}
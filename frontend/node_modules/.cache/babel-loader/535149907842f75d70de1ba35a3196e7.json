{"ast":null,"code":"var _jsxFileName = \"/home/ethan/avarts/frontend/src/App.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport Main from \"./components/Main\";\n\nrequire(\"halfmoon/css/halfmoon.min.css\");\n\nconst halfmoon = require(\"halfmoon\");\n\nconst App = () => {\n  const [userId, setUserId] = useState(Number);\n  const {\n    data,\n    error,\n    loading\n  } = useCurrentUserIdQuery();\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    if (data) {\n      if (data && data.currentUserId) {\n        setUserId(data.currentUserId);\n      }\n    }\n\n    if (error) {\n      localStorage.removeItem(\"token\");\n      window.location.reload();\n      console.log(error);\n    }\n\n    if (loading) {\n      console.log(loading);\n    }\n  }, [data, error, loading]);\n  useEffect(() => {\n    document.body.classList.add(\"with-custom-webkit-scrollbars\");\n    document.body.classList.add(\"with-custom-css-scrollbars\");\n    const darkModePref = localStorage.getItem(\"prefer-dark-mode\");\n\n    if (darkModePref === \"true\") {\n      halfmoon.toggleDarkMode();\n    }\n\n    halfmoon.onDOMContentLoaded();\n  }, []);\n  return /*#__PURE__*/React.createElement(Main, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/home/ethan/avarts/frontend/src/App.tsx"],"names":["React","useEffect","useState","Main","require","halfmoon","App","userId","setUserId","Number","data","error","loading","useCurrentUserIdQuery","logout","localStorage","removeItem","window","location","reload","currentUserId","console","log","document","body","classList","add","darkModePref","getItem","toggleDarkMode","onDOMContentLoaded"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAIAC,OAAO,CAAC,+BAAD,CAAP;;AAEA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AAIA,MAAME,GAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAWO,MAAX,CAApC;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BC,qBAAqB,EAAtD;;AAEA,QAAMC,MAAM,GAAG,MAAM;AACnBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAHD;;AAKAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,IAAJ,EAAU;AACR,UAAIA,IAAI,IAAIA,IAAI,CAACU,aAAjB,EAAgC;AAC9BZ,QAAAA,SAAS,CAACE,IAAI,CAACU,aAAN,CAAT;AACD;AACF;;AACD,QAAIT,KAAJ,EAAW;AACTI,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD;;AACD,QAAIC,OAAJ,EAAa;AACXS,MAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACD;AACF,GAdQ,EAcN,CAACF,IAAD,EAAOC,KAAP,EAAcC,OAAd,CAdM,CAAT;AAgBAX,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,+BAA5B;AACAH,IAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,4BAA5B;AAEA,UAAMC,YAAY,GAAGZ,YAAY,CAACa,OAAb,CAAqB,kBAArB,CAArB;;AAEA,QAAID,YAAY,KAAK,MAArB,EAA6B;AAC3BtB,MAAAA,QAAQ,CAACwB,cAAT;AACD;;AAEDxB,IAAAA,QAAQ,CAACyB,kBAAT;AACD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAvCD;;AAyCA,eAAexB,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Main from \"./components/Main\";\nimport { User } from \"./generated/graphql\";\nimport { UserType } from \"./userContext\";\n\nrequire(\"halfmoon/css/halfmoon.min.css\");\n\nconst halfmoon = require(\"halfmoon\");\n\ntype UserContextType = Pick<User, \"id\" | \"firstName\" | \"lastName\" | \"email\">;\n\nconst App: React.FC = () => {\n  const [userId, setUserId] = useState<UserType>(Number);\n  const { data, error, loading } = useCurrentUserIdQuery();\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    if (data) {\n      if (data && data.currentUserId) {\n        setUserId(data.currentUserId);\n      }\n    }\n    if (error) {\n      localStorage.removeItem(\"token\");\n      window.location.reload();\n      console.log(error);\n    }\n    if (loading) {\n      console.log(loading);\n    }\n  }, [data, error, loading]);\n\n  useEffect(() => {\n    document.body.classList.add(\"with-custom-webkit-scrollbars\");\n    document.body.classList.add(\"with-custom-css-scrollbars\");\n\n    const darkModePref = localStorage.getItem(\"prefer-dark-mode\");\n\n    if (darkModePref === \"true\") {\n      halfmoon.toggleDarkMode();\n    }\n\n    halfmoon.onDOMContentLoaded();\n  }, []);\n\n  return <Main />;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
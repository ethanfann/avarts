{"ast":null,"code":"import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}","map":{"version":3,"sources":["/home/ethan/avarts/frontend/node_modules/graphql/language/printLocation.mjs"],"names":["getLocation","printLocation","location","printSourceLocation","source","start","sourceLocation","firstLineColumnOffset","locationOffset","column","body","whitespace","lineIndex","line","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","name","lines","split","locationLine","length","subLineIndex","Math","floor","subLineColumnNum","subLines","i","push","slice","printPrefixedLines","map","subLine","existingLines","filter","_ref","_","undefined","padLen","max","apply","_ref2","prefix","_ref3","leftPad","join","len","Array","str"],"mappings":"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","sourcesContent":["import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n"]},"metadata":{},"sourceType":"module"}
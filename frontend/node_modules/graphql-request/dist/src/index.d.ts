import { GraphQLError, Variables } from './types';
export { ClientError } from './types';
export declare class GraphQLClient {
    private url;
    private options;
    constructor(url: string, options?: RequestInit);
    rawRequest<T = any>(query: string, variables?: Variables): Promise<{
        data?: T;
        extensions?: any;
        headers: Request['headers'];
        status: number;
        errors?: GraphQLError[];
    }>;
    request<T = any>(query: string, variables?: Variables): Promise<T>;
    setHeaders(headers: Response['headers']): GraphQLClient;
    setHeader(key: string, value: string): GraphQLClient;
}
export declare function rawRequest<T = any>(url: string, query: string, variables?: Variables): Promise<{
    data?: T;
    extensions?: any;
    headers: Request['headers'];
    status: number;
    errors?: GraphQLError[];
}>;
export declare function request<T = any>(url: string, query: string, variables?: Variables): Promise<T>;
export default request;

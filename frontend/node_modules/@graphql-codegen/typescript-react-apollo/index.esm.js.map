{"version":3,"file":"index.esm.js","sources":["../../../dist/plugins/typescript/react-apollo/src/visitor.js","../../../dist/plugins/typescript/react-apollo/src/index.js"],"sourcesContent":["import { ClientSideBaseVisitor, getConfigValue, OMIT_TYPE, DocumentMode, } from '@graphql-codegen/visitor-plugin-common';\nimport autoBind from 'auto-bind';\nimport { Kind } from 'graphql';\nimport { pascalCase } from 'pascal-case';\nimport { camelCase } from 'camel-case';\nexport class ReactApolloVisitor extends ClientSideBaseVisitor {\n    constructor(schema, fragments, rawConfig, documents) {\n        super(schema, fragments, rawConfig, {\n            componentSuffix: getConfigValue(rawConfig.componentSuffix, 'Component'),\n            withHOC: getConfigValue(rawConfig.withHOC, true),\n            withComponent: getConfigValue(rawConfig.withComponent, true),\n            withHooks: getConfigValue(rawConfig.withHooks, false),\n            withMutationFn: getConfigValue(rawConfig.withMutationFn, true),\n            withRefetchFn: getConfigValue(rawConfig.withRefetchFn, false),\n            apolloReactCommonImportFrom: getConfigValue(rawConfig.apolloReactCommonImportFrom, rawConfig.reactApolloVersion === 3 ? '@apollo/client' : '@apollo/react-common'),\n            apolloReactComponentsImportFrom: getConfigValue(rawConfig.apolloReactComponentsImportFrom, rawConfig.reactApolloVersion === 3 ? '@apollo/client' : '@apollo/react-components'),\n            apolloReactHocImportFrom: getConfigValue(rawConfig.apolloReactHocImportFrom, rawConfig.reactApolloVersion === 3 ? '@apollo/client' : '@apollo/react-hoc'),\n            apolloReactHooksImportFrom: getConfigValue(rawConfig.apolloReactHooksImportFrom, rawConfig.reactApolloVersion === 3 ? '@apollo/client' : '@apollo/react-hooks'),\n            reactApolloVersion: getConfigValue(rawConfig.reactApolloVersion, 2),\n            withResultType: getConfigValue(rawConfig.withResultType, true),\n            withMutationOptionsType: getConfigValue(rawConfig.withMutationOptionsType, true),\n            addDocBlocks: getConfigValue(rawConfig.addDocBlocks, true),\n        });\n        this.imports = new Set();\n        this._externalImportPrefix = this.config.importOperationTypesFrom ? `${this.config.importOperationTypesFrom}.` : '';\n        this._documents = documents;\n        autoBind(this);\n    }\n    getImportStatement(isTypeImport) {\n        return isTypeImport && this.config.useTypeImports ? 'import type' : 'import';\n    }\n    getReactImport() {\n        return `import * as React from 'react';`;\n    }\n    getApolloReactCommonImport(isTypeImport) {\n        return `${this.getImportStatement(isTypeImport)} * as ApolloReactCommon from '${this.config.apolloReactCommonImportFrom}';`;\n    }\n    getApolloReactComponentsImport(isTypeImport) {\n        return `${this.getImportStatement(isTypeImport)} * as ApolloReactComponents from '${this.config.apolloReactComponentsImportFrom}';`;\n    }\n    getApolloReactHocImport(isTypeImport) {\n        return `${this.getImportStatement(isTypeImport)} * as ApolloReactHoc from '${this.config.apolloReactHocImportFrom}';`;\n    }\n    getApolloReactHooksImport(isTypeImport) {\n        return `${this.getImportStatement(isTypeImport)} * as ApolloReactHooks from '${this.config.apolloReactHooksImportFrom}';`;\n    }\n    getOmitDeclaration() {\n        return OMIT_TYPE;\n    }\n    getDocumentNodeVariable(node, documentVariableName) {\n        return this.config.documentMode === DocumentMode.external ? `Operations.${node.name.value}` : documentVariableName;\n    }\n    getImports() {\n        const baseImports = super.getImports();\n        const hasOperations = this._collectedOperations.length > 0;\n        if (!hasOperations) {\n            return baseImports;\n        }\n        return [...baseImports, ...Array.from(this.imports)];\n    }\n    _buildHocProps(operationName, operationType) {\n        const typeVariableName = this._externalImportPrefix +\n            this.convertName(operationName + pascalCase(operationType) + this._parsedConfig.operationResultSuffix);\n        const variablesVarName = this._externalImportPrefix + this.convertName(operationName + pascalCase(operationType) + 'Variables');\n        const typeArgs = `<${typeVariableName}, ${variablesVarName}>`;\n        if (operationType === 'mutation') {\n            this.imports.add(this.getApolloReactCommonImport(true));\n            return `ApolloReactCommon.MutationFunction${typeArgs}`;\n        }\n        else {\n            this.imports.add(this.getApolloReactHocImport(true));\n            return `ApolloReactHoc.DataValue${typeArgs}`;\n        }\n    }\n    _buildMutationFn(node, operationResultType, operationVariablesTypes) {\n        if (node.operation === 'mutation') {\n            this.imports.add(this.getApolloReactCommonImport(true));\n            return `export type ${this.convertName(node.name.value + 'MutationFn')} = ApolloReactCommon.MutationFunction<${operationResultType}, ${operationVariablesTypes}>;`;\n        }\n        return null;\n    }\n    _buildOperationHoc(node, documentVariableName, operationResultType, operationVariablesTypes) {\n        this.imports.add(this.getApolloReactCommonImport(false));\n        this.imports.add(this.getApolloReactHocImport(false));\n        const operationName = this.convertName(node.name.value, { useTypesPrefix: false });\n        const propsTypeName = this.convertName(node.name.value, { suffix: 'Props' });\n        const defaultDataName = node.operation === 'mutation' ? 'mutate' : 'data';\n        const propsVar = `export type ${propsTypeName}<TChildProps = {}, TDataName extends string = '${defaultDataName}'> = {\n      [key in TDataName]: ${this._buildHocProps(node.name.value, node.operation)}\n    } & TChildProps;`;\n        const hocString = `export function with${operationName}<TProps, TChildProps = {}, TDataName extends string = '${defaultDataName}'>(operationOptions?: ApolloReactHoc.OperationOption<\n  TProps,\n  ${operationResultType},\n  ${operationVariablesTypes},\n  ${propsTypeName}<TChildProps, TDataName>>) {\n    return ApolloReactHoc.with${pascalCase(node.operation)}<TProps, ${operationResultType}, ${operationVariablesTypes}, ${propsTypeName}<TChildProps, TDataName>>(${this.getDocumentNodeVariable(node, documentVariableName)}, {\n      alias: '${camelCase(operationName)}',\n      ...operationOptions\n    });\n};`;\n        return [propsVar, hocString].filter(a => a).join('\\n');\n    }\n    _buildComponent(node, documentVariableName, operationType, operationResultType, operationVariablesTypes) {\n        const componentPropsName = this.convertName(node.name.value, {\n            suffix: this.config.componentSuffix + 'Props',\n            useTypesPrefix: false,\n        });\n        const componentName = this.convertName(node.name.value, {\n            suffix: this.config.componentSuffix,\n            useTypesPrefix: false,\n        });\n        const isVariablesRequired = operationType === 'Query' &&\n            node.variableDefinitions.some(variableDef => variableDef.type.kind === Kind.NON_NULL_TYPE);\n        this.imports.add(this.getReactImport());\n        this.imports.add(this.getApolloReactCommonImport(true));\n        this.imports.add(this.getApolloReactComponentsImport(false));\n        this.imports.add(this.getOmitDeclaration());\n        const propsType = `Omit<ApolloReactComponents.${operationType}ComponentOptions<${operationResultType}, ${operationVariablesTypes}>, '${operationType.toLowerCase()}'>`;\n        let componentProps = '';\n        if (isVariablesRequired) {\n            componentProps = `export type ${componentPropsName} = ${propsType} & ({ variables: ${operationVariablesTypes}; skip?: boolean; } | { skip: boolean; });`;\n        }\n        else {\n            componentProps = `export type ${componentPropsName} = ${propsType};`;\n        }\n        const component = `\n    export const ${componentName} = (props: ${componentPropsName}) => (\n      <ApolloReactComponents.${operationType}<${operationResultType}, ${operationVariablesTypes}> ${node.operation}={${this.getDocumentNodeVariable(node, documentVariableName)}} {...props} />\n    );\n    `;\n        return [componentProps, component].join('\\n');\n    }\n    _buildHooksJSDoc(node, operationName, operationType) {\n        const variableString = node.variableDefinitions.reduce((acc, item) => {\n            const name = item.variable.name.value;\n            return `${acc}\\n *      ${name}: // value for '${name}'`;\n        }, '');\n        const queryDescription = `\n * To run a query within a React component, call \\`use${operationName}\\` and pass it any options that fit your needs.\n * When your component renders, \\`use${operationName}\\` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.`;\n        const queryExample = `\n * const { data, loading, error } = use${operationName}({\n *   variables: {${variableString}\n *   },\n * });`;\n        const mutationDescription = `\n * To run a mutation, you first call \\`use${operationName}\\` within a React component and pass it any options that fit your needs.\n * When your component renders, \\`use${operationName}\\` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution`;\n        const mutationExample = `\n * const [${camelCase(operationName)}, { data, loading, error }] = use${operationName}({\n *   variables: {${variableString}\n *   },\n * });`;\n        return `\n/**\n * __use${operationName}__\n *${operationType === 'Mutation' ? mutationDescription : queryDescription}\n *\n * @param baseOptions options that will be passed into the ${operationType.toLowerCase()}, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#${operationType === 'Mutation' ? 'options-2' : 'options'};\n *\n * @example${operationType === 'Mutation' ? mutationExample : queryExample}\n */`;\n    }\n    _buildHooks(node, operationType, documentVariableName, operationResultType, operationVariablesTypes) {\n        const suffix = this._getHookSuffix(node.name.value, operationType);\n        const operationName = this.convertName(node.name.value, {\n            suffix,\n            useTypesPrefix: false,\n        });\n        this.imports.add(this.getApolloReactCommonImport(true));\n        this.imports.add(this.getApolloReactHooksImport(false));\n        const hookFns = [\n            `export function use${operationName}(baseOptions?: ApolloReactHooks.${operationType}HookOptions<${operationResultType}, ${operationVariablesTypes}>) {\n        return ApolloReactHooks.use${operationType}<${operationResultType}, ${operationVariablesTypes}>(${this.getDocumentNodeVariable(node, documentVariableName)}, baseOptions);\n      }`,\n        ];\n        if (this.config.addDocBlocks) {\n            hookFns.unshift(this._buildHooksJSDoc(node, operationName, operationType));\n        }\n        const hookResults = [`export type ${operationName}HookResult = ReturnType<typeof use${operationName}>;`];\n        if (operationType === 'Query') {\n            const lazyOperationName = this.convertName(node.name.value, {\n                suffix: pascalCase('LazyQuery'),\n                useTypesPrefix: false,\n            });\n            hookFns.push(`export function use${lazyOperationName}(baseOptions?: ApolloReactHooks.LazyQueryHookOptions<${operationResultType}, ${operationVariablesTypes}>) {\n          return ApolloReactHooks.useLazyQuery<${operationResultType}, ${operationVariablesTypes}>(${this.getDocumentNodeVariable(node, documentVariableName)}, baseOptions);\n        }`);\n            hookResults.push(`export type ${lazyOperationName}HookResult = ReturnType<typeof use${lazyOperationName}>;`);\n        }\n        return [...hookFns, ...hookResults].join('\\n');\n    }\n    _getHookSuffix(name, operationType) {\n        if (this.config.omitOperationSuffix) {\n            return '';\n        }\n        if (!this.config.dedupeOperationSuffix) {\n            return pascalCase(operationType);\n        }\n        if (name.includes('Query') || name.includes('Mutation') || name.includes('Subscription')) {\n            return '';\n        }\n        return pascalCase(operationType);\n    }\n    _buildResultType(node, operationType, operationResultType, operationVariablesTypes) {\n        const componentResultType = this.convertName(node.name.value, {\n            suffix: `${operationType}Result`,\n            useTypesPrefix: false,\n        });\n        switch (node.operation) {\n            case 'query':\n                this.imports.add(this.getApolloReactCommonImport(true));\n                return `export type ${componentResultType} = ApolloReactCommon.QueryResult<${operationResultType}, ${operationVariablesTypes}>;`;\n            case 'mutation':\n                this.imports.add(this.getApolloReactCommonImport(true));\n                return `export type ${componentResultType} = ApolloReactCommon.MutationResult<${operationResultType}>;`;\n            case 'subscription':\n                this.imports.add(this.getApolloReactCommonImport(true));\n                return `export type ${componentResultType} = ApolloReactCommon.SubscriptionResult<${operationResultType}>;`;\n            default:\n                return '';\n        }\n    }\n    _buildWithMutationOptionsType(node, operationResultType, operationVariablesTypes) {\n        if (node.operation !== 'mutation') {\n            return '';\n        }\n        this.imports.add(this.getApolloReactCommonImport(true));\n        const mutationOptionsType = this.convertName(node.name.value, { suffix: 'MutationOptions', useTypesPrefix: false });\n        return `export type ${mutationOptionsType} = ApolloReactCommon.BaseMutationOptions<${operationResultType}, ${operationVariablesTypes}>;`;\n    }\n    _buildRefetchFn(node, documentVariableName, operationType, operationVariablesTypes) {\n        if (node.operation !== 'query') {\n            return '';\n        }\n        const operationName = this.convertName(node.name.value, {\n            suffix: this._getHookSuffix(node.name.value, operationType),\n            useTypesPrefix: false,\n        });\n        return `export function refetch${operationName}(variables?: ${operationVariablesTypes}) {\n      return { query: ${this.getDocumentNodeVariable(node, documentVariableName)}, variables: variables }\n    }`;\n    }\n    buildOperation(node, documentVariableName, operationType, operationResultType, operationVariablesTypes) {\n        operationResultType = this._externalImportPrefix + operationResultType;\n        operationVariablesTypes = this._externalImportPrefix + operationVariablesTypes;\n        const mutationFn = this.config.withMutationFn || this.config.withComponent\n            ? this._buildMutationFn(node, operationResultType, operationVariablesTypes)\n            : null;\n        const component = this.config.withComponent\n            ? this._buildComponent(node, documentVariableName, operationType, operationResultType, operationVariablesTypes)\n            : null;\n        const hoc = this.config.withHOC\n            ? this._buildOperationHoc(node, documentVariableName, operationResultType, operationVariablesTypes)\n            : null;\n        const hooks = this.config.withHooks\n            ? this._buildHooks(node, operationType, documentVariableName, operationResultType, operationVariablesTypes)\n            : null;\n        const resultType = this.config.withResultType\n            ? this._buildResultType(node, operationType, operationResultType, operationVariablesTypes)\n            : null;\n        const mutationOptionsType = this.config.withMutationOptionsType\n            ? this._buildWithMutationOptionsType(node, operationResultType, operationVariablesTypes)\n            : null;\n        const refetchFn = this.config.withRefetchFn\n            ? this._buildRefetchFn(node, documentVariableName, operationType, operationVariablesTypes)\n            : null;\n        return [mutationFn, component, hoc, hooks, resultType, mutationOptionsType, refetchFn].filter(a => a).join('\\n');\n    }\n}\n//# sourceMappingURL=visitor.js.map","import { visit, concatAST, Kind } from 'graphql';\nimport { ReactApolloVisitor } from './visitor';\nimport { extname } from 'path';\nexport const plugin = (schema, documents, config) => {\n    const allAst = concatAST(documents.map(v => v.document));\n    const allFragments = [\n        ...allAst.definitions.filter(d => d.kind === Kind.FRAGMENT_DEFINITION).map(fragmentDef => ({\n            node: fragmentDef,\n            name: fragmentDef.name.value,\n            onType: fragmentDef.typeCondition.name.value,\n            isExternal: false,\n        })),\n        ...(config.externalFragments || []),\n    ];\n    const visitor = new ReactApolloVisitor(schema, allFragments, config, documents);\n    const visitorResult = visit(allAst, { leave: visitor });\n    return {\n        prepend: visitor.getImports(),\n        content: [visitor.fragments, ...visitorResult.definitions.filter(t => typeof t === 'string')].join('\\n'),\n    };\n};\nexport const validate = async (schema, documents, config, outputFile) => {\n    if (config.withComponent === false) {\n        if (extname(outputFile) !== '.ts' && extname(outputFile) !== '.tsx') {\n            throw new Error(`Plugin \"react-apollo\" with \"noComponents\" requires extension to be \".ts\" or \".tsx\"!`);\n        }\n    }\n    else {\n        if (extname(outputFile) !== '.tsx') {\n            throw new Error(`Plugin \"react-apollo\" requires extension to be \".tsx\"!`);\n        }\n    }\n};\nexport { ReactApolloVisitor };\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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"}
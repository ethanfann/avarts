{"version":3,"file":"index.ie11.development.js","sources":["../src/utils/isHTMLElement.ts","../src/constants.ts","../src/logic/attachEventListeners.ts","../src/utils/isNullOrUndefined.ts","../src/utils/isArray.ts","../src/utils/isObject.ts","../src/utils/isKey.ts","../src/utils/stringToPath.ts","../src/utils/set.ts","../src/logic/transformToNestObject.ts","../src/utils/isUndefined.ts","../src/utils/unique.ts","../src/utils/get.ts","../src/logic/focusOnErrorField.ts","../src/logic/removeAllEventListeners.ts","../src/logic/getRadioValue.ts","../src/logic/getMultipleSelectValue.ts","../src/utils/isRadioInput.ts","../src/utils/isFileInput.ts","../src/utils/isCheckBoxInput.ts","../src/utils/isMultipleSelect.ts","../src/logic/getCheckboxValue.ts","../src/logic/getFieldValue.ts","../src/utils/isDetached.ts","../src/utils/isEmptyObject.ts","../src/utils/isBoolean.ts","../src/utils/unset.ts","../src/logic/findRemovedFieldAndRemoveListener.ts","../src/utils/isString.ts","../src/utils/deepMerge.ts","../src/logic/getFieldsValues.ts","../src/utils/isSameError.ts","../src/logic/shouldRenderBasedOnError.ts","../src/utils/isRegex.ts","../src/logic/getValueAndMessage.ts","../src/utils/isFunction.ts","../src/utils/isMessage.ts","../src/logic/getValidateError.ts","../src/logic/appendErrors.ts","../src/logic/validateField.ts","../src/utils/isPrimitive.ts","../src/utils/getPath.ts","../src/logic/assignWatchFields.ts","../src/logic/skipValidation.ts","../src/logic/getFieldArrayParentName.ts","../src/logic/deepEqual.ts","../src/logic/isNameInFieldArray.ts","../src/utils/isSelectInput.ts","../src/utils/onDomRemove.ts","../src/utils/validationModeChecker.ts","../src/utils/isRadioOrCheckbox.ts","../src/useForm.ts","../src/useFormContext.tsx","../src/logic/generateId.ts","../src/utils/remove.ts","../src/utils/move.ts","../src/utils/swap.ts","../src/utils/prepend.ts","../src/utils/insert.ts","../src/utils/fillEmptyArray.ts","../src/utils/filterBooleanArray.ts","../src/useFieldArray.ts","../src/useWatch.ts","../src/logic/getInputValue.ts","../src/controller.tsx"],"sourcesContent":["export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { ValidationMode } from './types/form';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const VALUE = 'value';\n\nexport const SELECT = 'select';\n\nexport const UNDEFINED = 'undefined';\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Field } from '../types/form';\n\nexport default function attachEventListeners(\n  { ref }: Field,\n  shouldAttachChangeEvent: boolean,\n  handleChange?: EventListenerOrEventListenerObject,\n): void {\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(\n      shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT,\n      handleChange,\n    );\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n","export default (value: unknown): value is null | undefined => value == null;\n","export default <T>(value: unknown): value is T[] => Array.isArray(value);\n","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n","import isArray from './isArray';\n\nexport default (value: [] | string) =>\n  !isArray(value) &&\n  (/^\\w*$/.test(value) ||\n    !/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/.test(value));\n","export default (input: string): (string | number)[] => {\n  const result: (string | number)[] = [];\n\n  input.replace(\n    /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,\n    (\n      match: string,\n      mathNumber: string,\n      mathQuote: string,\n      originalString: string,\n    ): any => {\n      result.push(\n        mathQuote\n          ? originalString.replace(/\\\\(\\\\)?/g, '$1')\n          : mathNumber || match,\n      );\n    },\n  );\n\n  return result;\n};\n","import isObject from './isObject';\nimport isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport { FieldValues } from '../types/form';\n\nexport default function set(object: FieldValues, path: string, value: any) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue: string | object = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import set from '../utils/set';\nimport isKey from '../utils/isKey';\nimport { FieldValues } from '../types/form';\n\nexport default (data: FieldValues): any =>\n  Object.entries(data).reduce(\n    (previous: FieldValues, [key, value]): FieldValues => {\n      if (!isKey(key)) {\n        set(previous, key, value);\n        return previous;\n      }\n\n      return { ...previous, [key]: value };\n    },\n    {},\n  );\n","export default (val: unknown): val is undefined => val === undefined;\n","export default (value: any[]) => value.filter(Boolean);\n","import isUndefined from './isUndefined';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport unique from './unique';\n\nexport default (obj: any, path: string, defaultValue?: any) => {\n  const result = unique(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path])\n      ? defaultValue\n      : obj[path]\n    : result;\n};\n","import get from '../utils/get';\nimport { FieldErrors, FieldRefs } from '../types/form';\n\nexport default <TFieldValues>(\n  fields: FieldRefs<TFieldValues>,\n  fieldErrors: FieldErrors<TFieldValues>,\n) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n\n      if (field) {\n        if (field.ref.focus) {\n          field.ref.focus();\n\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n\n          break;\n        }\n      }\n    }\n  }\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Ref } from '../types/form';\n\nexport default (\n  ref: Ref,\n  validateWithStateUpdate: EventListenerOrEventListenerObject,\n): void => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n","import isArray from '../utils/isArray';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype RadioFieldResult = {\n  isValid: boolean;\n  value: number | string;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: '',\n};\n\nexport default (options?: RadioOrCheckboxOption[]): RadioFieldResult =>\n  isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.ref.checked\n            ? {\n                isValid: true,\n                value: option.ref.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-multiple`;\n","import isArray from '../utils/isArray';\nimport isUndefined from '../utils/isUndefined';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: RadioOrCheckboxOption[]): CheckboxFieldResult => {\n  if (isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.ref.checked)\n        .map(({ ref: { value } }) => value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    const { checked, value, attributes } = options[0].ref;\n\n    return checked\n      ? attributes && !isUndefined((attributes as any).value)\n        ? isUndefined(value) || value === ''\n          ? validResult\n          : { value: value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isFileInput from '../utils/isFileInput';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport getCheckboxValue from './getCheckboxValue';\nimport { FieldRefs, FieldValues, InternalFieldName } from '../types/form';\n\nexport default function getFieldValue<TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  name: InternalFieldName<TFieldValues>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n) {\n  const field = fieldsRef.current[name]!;\n\n  if (field) {\n    const {\n      ref: { value },\n      ref,\n    } = field;\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n\n    return value;\n  }\n\n  if (unmountFieldsStateRef) {\n    return unmountFieldsStateRef.current[name];\n  }\n}\n","import { Ref } from '../types/form';\n\nexport default function isDetached(element: Ref): boolean {\n  if (!element) {\n    return true;\n  }\n\n  if (\n    !(element instanceof HTMLElement) ||\n    element.nodeType === Node.DOCUMENT_NODE\n  ) {\n    return false;\n  }\n\n  return isDetached(element.parentNode as Ref);\n}\n","import isObject from './isObject';\nimport { EmptyObject } from '../types/utils';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport isEmptyObject from './isEmptyObject';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport isBoolean from './isBoolean';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const path = updatePath.slice(0, -1);\n  const length = path.length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef = undefined;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef = undefined;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (isArray(objectRef) &&\n            !objectRef.filter(\n              (data) =>\n                (isObject(data) && !isEmptyObject(data)) || isBoolean(data),\n            ).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import * as React from 'react';\nimport removeAllEventListeners from './removeAllEventListeners';\nimport getFieldValue from './getFieldValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDetached from '../utils/isDetached';\nimport isArray from '../utils/isArray';\nimport unset from '../utils/unset';\nimport unique from '../utils/unique';\nimport isUndefined from '../utils/isUndefined';\nimport { Field, FieldRefs, FieldValues, Ref } from '../types/form';\n\nconst isSameRef = (fieldValue: Field, ref: Ref) =>\n  fieldValue && fieldValue.ref === ref;\n\nexport default function findRemovedFieldAndRemoveListener<\n  TFieldValues extends FieldValues\n>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  handleChange: ({ type, target }: Event) => Promise<void | boolean>,\n  field: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n  shouldUnregister?: boolean,\n  forceDelete?: boolean,\n): void {\n  const {\n    ref,\n    ref: { name, type },\n    mutationWatcher,\n  } = field;\n  const fieldRef = fieldsRef.current[name] as Field;\n\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n\n    if (!isUndefined(value)) {\n      unmountFieldsStateRef.current[name] = value;\n    }\n  }\n\n  if (!type) {\n    delete fieldsRef.current[name];\n    return;\n  }\n\n  if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldRef) {\n    const { options } = fieldRef;\n\n    if (isArray(options) && options.length) {\n      unique(options).forEach((option, index): void => {\n        const { ref, mutationWatcher } = option;\n        if ((ref && isDetached(ref) && isSameRef(option, ref)) || forceDelete) {\n          removeAllEventListeners(ref, handleChange);\n\n          if (mutationWatcher) {\n            mutationWatcher.disconnect();\n          }\n\n          unset(options, `[${index}]`);\n        }\n      });\n\n      if (options && !unique(options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    if (mutationWatcher) {\n      mutationWatcher.disconnect();\n    }\n\n    delete fieldsRef.current[name];\n  }\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import isObject from './isObject';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>\n>(target: T, source: U): T & U {\n  if (!isObject(target) || !isObject(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = deepMerge(targetValue, sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  }\n\n  return target;\n}\n","import * as React from 'react';\nimport getFieldValue from './getFieldValue';\nimport isString from '../utils/isString';\nimport isArray from '../utils/isArray';\nimport { deepMerge } from '../utils/deepMerge';\nimport isUndefined from '../utils/isUndefined';\nimport { InternalFieldName, FieldValues, FieldRefs } from '../types/form';\nimport transformToNestObject from './transformToNestObject';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n  search?:\n    | InternalFieldName<TFieldValues>\n    | InternalFieldName<TFieldValues>[]\n    | { nest: boolean },\n) => {\n  const output = {} as TFieldValues;\n\n  for (const name in fieldsRef.current) {\n    if (\n      isUndefined(search) ||\n      (isString(search)\n        ? name.startsWith(search)\n        : isArray(search) && search.find((data) => name.startsWith(data)))\n    ) {\n      output[name as InternalFieldName<TFieldValues>] = getFieldValue(\n        fieldsRef,\n        name,\n      );\n    }\n  }\n\n  return deepMerge(\n    transformToNestObject((unmountFieldsStateRef || {}).current || {}),\n    transformToNestObject(output),\n  );\n};\n","import isObject from './isObject';\nimport { FieldError } from '../types/form';\n\nexport default (\n  error: FieldError | undefined,\n  { type, types = {}, message }: FieldError,\n): boolean =>\n  isObject(error) &&\n  error.type === type &&\n  error.message === message &&\n  Object.keys(error.types || {}).length === Object.keys(types).length &&\n  Object.entries(error.types || {}).every(\n    ([key, value]) => types[key] === value,\n  );\n","import isEmptyObject from '../utils/isEmptyObject';\nimport isSameError from '../utils/isSameError';\nimport get from '../utils/get';\nimport {\n  FieldValues,\n  InternalFieldName,\n  FieldErrors,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default function shouldRenderBasedOnError<\n  TFieldValues extends FieldValues\n>({\n  errors,\n  name,\n  error,\n  validFields,\n  fieldsWithValidation,\n}: {\n  errors: FieldErrors<TFieldValues>;\n  error: FlatFieldErrors<TFieldValues>;\n  name: InternalFieldName<TFieldValues>;\n  validFields: Set<InternalFieldName<TFieldValues>>;\n  fieldsWithValidation: Set<InternalFieldName<TFieldValues>>;\n}): boolean {\n  const isFieldValid = isEmptyObject(error);\n  const isFormValid = isEmptyObject(errors);\n  const currentFieldError = get(error, name);\n  const existFieldError = get(errors, name);\n\n  if (isFieldValid && validFields.has(name)) {\n    return false;\n  }\n\n  if (\n    isFormValid !== isFieldValid ||\n    (!isFormValid && !existFieldError) ||\n    (isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name))\n  ) {\n    return true;\n  }\n\n  return currentFieldError && !isSameError(existFieldError, currentFieldError);\n}\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport { ValidationRule, ValidationValueMessage } from '../types/form';\n\nconst isValueMessage = (\n  value?: ValidationRule,\n): value is ValidationValueMessage => isObject(value) && !isRegex(value);\n\nexport default (validationData?: ValidationRule) =>\n  isValueMessage(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import { isValidElement } from 'react';\nimport isString from '../utils/isString';\nimport isObject from '../utils/isObject';\nimport { Message } from '../types/form';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || (isObject(value) && isValidElement(value));\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport { FieldError, ValidateResult, Ref } from '../types/form';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (isMessage(result) || (isBoolean(result) && !result)) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import {\n  InternalFieldName,\n  ValidateResult,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default <TFieldValues>(\n  name: InternalFieldName<TFieldValues>,\n  validateAllFieldCriteria: boolean,\n  errors: FlatFieldErrors<TFieldValues>,\n  type: string,\n  message: ValidateResult,\n) => {\n  if (validateAllFieldCriteria) {\n    const error = errors[name];\n\n    return {\n      ...error,\n      types: {\n        ...(error && error.types ? error.types : {}),\n        [type]: message || true,\n      },\n    };\n  }\n\n  return {};\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getCheckboxValue from './getCheckboxValue';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isRadioInput from '../utils/isRadioInput';\nimport getValueAndMessage from './getValueAndMessage';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isString from '../utils/isString';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isObject from '../utils/isObject';\nimport isFunction from '../utils/isFunction';\nimport getFieldsValue from './getFieldValue';\nimport isRegex from '../utils/isRegex';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport getValidateError from './getValidateError';\nimport appendErrors from './appendErrors';\nimport { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldValues,\n  FieldRefs,\n  Message,\n  FieldError,\n  InternalFieldName,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default async <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  validateAllFieldCriteria: boolean,\n  {\n    ref,\n    ref: { type, value },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n  }: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n): Promise<FlatFieldErrors<TFieldValues>> => {\n  const fields = fieldsRef.current;\n  const name: InternalFieldName<TFieldValues> = ref.name;\n  const error: FlatFieldErrors<TFieldValues> = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...(exceedMax\n        ? appendErrorsCurry(maxType, message)\n        : appendErrorsCurry(minType, message)),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\n      (isBoolean(value) && !value) ||\n      (isCheckBox && !getCheckboxValue(options).isValid) ||\n      (isRadio && !getRadioValue(options).isValid))\n  ) {\n    const { value: requiredValue, message: requiredMessage } = isMessage(\n      required,\n    )\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (requiredValue) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message: requiredMessage,\n        ref: isRadioOrCheckbox\n          ? ((fields[name] as Field).options || [])[0].ref\n          : ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, requiredMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\n    let exceedMax;\n    let exceedMin;\n    const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\n    const { value: minValue, message: minMessage } = getValueAndMessage(min);\n\n    if (type === 'number' || (!type && !isNaN(value))) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxValue)) {\n        exceedMax = valueNumber > maxValue;\n      }\n      if (!isNullOrUndefined(minValue)) {\n        exceedMin = valueNumber < minValue;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(value);\n      if (isString(maxValue)) {\n        exceedMax = valueDate > new Date(maxValue);\n      }\n      if (isString(minValue)) {\n        exceedMin = valueDate < new Date(minValue);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxMessage,\n        minMessage,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const {\n      value: maxLengthValue,\n      message: maxLengthMessage,\n    } = getValueAndMessage(maxLength);\n    const {\n      value: minLengthValue,\n      message: minLengthMessage,\n    } = getValueAndMessage(minLength);\n    const inputLength = value.toString().length;\n    const exceedMax =\n      !isNullOrUndefined(maxLengthValue) && inputLength > maxLengthValue;\n    const exceedMin =\n      !isNullOrUndefined(minLengthValue) && inputLength < minLengthValue;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty) {\n    const { value: patternValue, message: patternMessage } = getValueAndMessage(\n      pattern,\n    );\n\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message: patternMessage,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    const fieldValue = getFieldsValue(fieldsRef, name, unmountFieldsStateRef);\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(\n          validateResult,\n          validateRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: validateRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  return error;\n};\n","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nimport { Primitive } from '../types/utils';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isPrimitive from './isPrimitive';\nimport isObject from './isObject';\nimport { FieldValues, InternalFieldName } from '../types/form';\n\nexport const getPath = <TFieldValues extends FieldValues = FieldValues>(\n  path: InternalFieldName<TFieldValues>,\n  values: TFieldValues | any[],\n): any[] => {\n  const getInnerPath = (\n    value: any,\n    key: number | string,\n    isObject?: boolean,\n  ) => {\n    const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\n    return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\n  };\n\n  return Object.entries(values)\n    .map(([key, value]) => getInnerPath(value, key, isObject(values)))\n    .flat(Infinity);\n};\n","import get from '../utils/get';\nimport { getPath } from '../utils/getPath';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\nimport { DeepPartial } from '../types/utils';\nimport {\n  FieldValue,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n} from '../types/form';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldValues: TFieldValues,\n  fieldName: InternalFieldName<TFieldValues>,\n  watchFields: Set<InternalFieldName<TFieldValues>>,\n  inputValue: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  isSingleField?: boolean,\n):\n  | FieldValue<TFieldValues>\n  | UnpackNestedValue<DeepPartial<TFieldValues>>\n  | undefined => {\n  let value;\n\n  watchFields.add(fieldName);\n\n  if (isEmptyObject(fieldValues)) {\n    value = undefined;\n  } else {\n    value = get(fieldValues, fieldName);\n\n    if (isObject(value) || isArray(value)) {\n      getPath<TFieldValues>(\n        fieldName,\n        value as TFieldValues,\n      ).forEach((name: string) => watchFields.add(name));\n    }\n  }\n\n  return isUndefined(value)\n    ? isSingleField\n      ? inputValue\n      : get(inputValue, fieldName)\n    : value;\n};\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isOnTouch,\n  isTouched,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n  isOnAll,\n}: {\n  isOnAll?: boolean;\n  isOnBlur?: boolean;\n  isOnChange?: boolean;\n  isReValidateOnBlur?: boolean;\n  isReValidateOnChange?: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted?: boolean;\n  isOnTouch?: boolean;\n  isTouched?: boolean;\n}) => {\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (name: string) => name.substring(0, name.indexOf('['));\n","import isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\n\nexport default function deepEqual(object1: any = [], object2: any = []) {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n    const val2 = object2[key];\n\n    if (\n      (isObject(val1) || isArray(val1)) && (isObject(val2) || isArray(val2))\n        ? !deepEqual(val1, val2)\n        : val1 !== val2\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","export const isMatchFieldArrayName = (name: string, searchName: string) =>\n  RegExp(\n    `^${searchName}[\\\\d+]`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]'),\n  ).test(name);\n\nexport default (names: Set<string>, name: string) =>\n  [...names].some((current) => isMatchFieldArrayName(name, current));\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-one`;\n","import { Ref } from '../types/form';\nimport isDetached from './isDetached';\n\nexport default function onDomRemove(\n  element: Ref,\n  onDetachCallback: () => void,\n): MutationObserver {\n  const observer = new MutationObserver((): void => {\n    if (isDetached(element)) {\n      observer.disconnect();\n      onDetachCallback();\n    }\n  });\n\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true,\n  });\n\n  return observer;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types/form';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import isRadioInput from './isRadioInput';\nimport isCheckBoxInput from './isCheckBoxInput';\nimport { FieldElement } from '../types/form';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import * as React from 'react';\nimport attachEventListeners from './logic/attachEventListeners';\nimport transformToNestObject from './logic/transformToNestObject';\nimport focusOnErrorField from './logic/focusOnErrorField';\nimport findRemovedFieldAndRemoveListener from './logic/findRemovedFieldAndRemoveListener';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport shouldRenderBasedOnError from './logic/shouldRenderBasedOnError';\nimport validateField from './logic/validateField';\nimport assignWatchFields from './logic/assignWatchFields';\nimport skipValidation from './logic/skipValidation';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport deepEqual from './logic/deepEqual';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isRadioInput from './utils/isRadioInput';\nimport isSelectInput from './utils/isSelectInput';\nimport isFileInput from './utils/isFileInput';\nimport isObject from './utils/isObject';\nimport { getPath } from './utils/getPath';\nimport isPrimitive from './utils/isPrimitive';\nimport isFunction from './utils/isFunction';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isSameError from './utils/isSameError';\nimport isUndefined from './utils/isUndefined';\nimport onDomRemove from './utils/onDomRemove';\nimport get from './utils/get';\nimport set from './utils/set';\nimport unset from './utils/unset';\nimport modeChecker from './utils/validationModeChecker';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport unique from './utils/unique';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isHTMLElement from './utils/isHTMLElement';\nimport { EVENTS, UNDEFINED, VALIDATION_MODE } from './constants';\nimport {\n  UseFormMethods,\n  FieldValues,\n  UnpackNestedValue,\n  FieldName,\n  InternalFieldName,\n  FieldValue,\n  FieldErrors,\n  Field,\n  FieldRefs,\n  UseFormOptions,\n  ValidationRules,\n  SubmitHandler,\n  FieldElement,\n  FormStateProxy,\n  ReadFormState,\n  Ref,\n  HandleChange,\n  Touched,\n  FieldError,\n  RadioOrCheckboxOption,\n  OmitResetState,\n  DefaultValuesAtRender,\n  FlatFieldErrors,\n  NestedValue,\n  SetValueConfig,\n  ErrorOption,\n  SubmitErrorHandler,\n} from './types/form';\nimport { LiteralToPrimitive, DeepPartial, NonUndefined } from './types/utils';\n\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isWeb =\n  typeof document !== UNDEFINED &&\n  !isWindowUndefined &&\n  !isUndefined(window.HTMLElement);\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as UnpackNestedValue<DeepPartial<TFieldValues>>,\n  shouldFocusError = true,\n  shouldUnregister = true,\n  criteriaMode,\n}: UseFormOptions<TFieldValues, TContext> = {}): UseFormMethods<TFieldValues> {\n  const fieldsRef = React.useRef<FieldRefs<TFieldValues>>({});\n  const errorsRef = React.useRef<FieldErrors<TFieldValues>>({});\n  const touchedFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const fieldArrayDefaultValues = React.useRef<Record<string, unknown[]>>({});\n  const dirtyFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const watchFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const watchFieldsHookRef = React.useRef<\n    Record<string, Set<InternalFieldName<TFieldValues>>>\n  >({});\n  const watchFieldsHookRenderRef = React.useRef<Record<string, Function>>({});\n  const fieldsWithValidationRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const validFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const isValidRef = React.useRef(true);\n  const defaultValuesRef = React.useRef<\n    | FieldValue<UnpackNestedValue<TFieldValues>>\n    | UnpackNestedValue<DeepPartial<TFieldValues>>\n  >(defaultValues);\n  const defaultValuesAtRenderRef = React.useRef(\n    {} as DefaultValuesAtRender<TFieldValues>,\n  );\n  const isUnMount = React.useRef(false);\n  const isWatchAllRef = React.useRef(false);\n  const isSubmittedRef = React.useRef(false);\n  const isDirtyRef = React.useRef(false);\n  const submitCountRef = React.useRef(0);\n  const isSubmittingRef = React.useRef(false);\n  const handleChangeRef = React.useRef<HandleChange>();\n  const unmountFieldsStateRef = React.useRef<Record<string, any>>({});\n  const resetFieldArrayFunctionRef = React.useRef<Record<string, () => void>>(\n    {},\n  );\n  const contextRef = React.useRef(context);\n  const resolverRef = React.useRef(resolver);\n  const fieldArrayNamesRef = React.useRef<Set<string>>(new Set());\n  const [, render] = React.useState();\n  const modeRef = React.useRef(modeChecker(mode));\n  const {\n    current: { isOnSubmit, isOnTouch },\n  } = modeRef;\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    isSubmitted: isOnSubmit,\n    submitCount: !isProxyEnabled,\n    touched: !isProxyEnabled || isOnTouch,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n  });\n  const {\n    current: { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange },\n  } = React.useRef(modeChecker(reValidateMode));\n  contextRef.current = context;\n  resolverRef.current = resolver;\n\n  const reRender = React.useCallback(\n    () => !isUnMount.current && render({}),\n    [],\n  );\n\n  const shouldRenderBaseOnError = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      error: FlatFieldErrors<TFieldValues>,\n      shouldRender: boolean | null = false,\n    ): boolean | void => {\n      let shouldReRender =\n        shouldRender ||\n        shouldRenderBasedOnError<TFieldValues>({\n          errors: errorsRef.current,\n          error,\n          name,\n          validFields: validFieldsRef.current,\n          fieldsWithValidation: fieldsWithValidationRef.current,\n        });\n      const previousError = get(errorsRef.current, name);\n\n      if (isEmptyObject(error)) {\n        if (fieldsWithValidationRef.current.has(name) || resolverRef.current) {\n          validFieldsRef.current.add(name);\n          shouldReRender = shouldReRender || previousError;\n        }\n\n        errorsRef.current = unset(errorsRef.current, name);\n      } else {\n        validFieldsRef.current.delete(name);\n        shouldReRender =\n          shouldReRender ||\n          !previousError ||\n          !isSameError(previousError, error[name] as FieldError);\n\n        set(errorsRef.current, name, error[name]);\n      }\n\n      if (shouldReRender && !isNullOrUndefined(shouldRender)) {\n        reRender();\n        return true;\n      }\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (\n      { ref, options }: Field,\n      rawValue:\n        | FieldValue<TFieldValues>\n        | UnpackNestedValue<DeepPartial<TFieldValues>>\n        | undefined\n        | null\n        | boolean,\n    ) => {\n      const value =\n        isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\n          ? ''\n          : rawValue;\n\n      if (isRadioInput(ref) && options) {\n        options.forEach(\n          ({ ref: radioRef }: { ref: HTMLInputElement }) =>\n            (radioRef.checked = radioRef.value === value),\n        );\n      } else if (isFileInput(ref) && !isString(value)) {\n        ref.files = value as FileList;\n      } else if (isMultipleSelect(ref)) {\n        [...ref.options].forEach(\n          (selectRef) =>\n            (selectRef.selected = (value as string).includes(selectRef.value)),\n        );\n      } else if (isCheckBoxInput(ref) && options) {\n        options.length > 1\n          ? options.forEach(\n              ({ ref: checkboxRef }) =>\n                (checkboxRef.checked = String(\n                  value as string | boolean,\n                ).includes(checkboxRef.value)),\n            )\n          : (options[0].ref.checked = !!value);\n      } else {\n        ref.value = value;\n      }\n    },\n    [],\n  );\n\n  const setDirty = React.useCallback(\n    (name: InternalFieldName<TFieldValues>): boolean => {\n      const { isDirty, dirtyFields } = readFormStateRef.current;\n\n      if (!fieldsRef.current[name] || (!isDirty && !dirtyFields)) {\n        return false;\n      }\n\n      const isFieldDirty =\n        defaultValuesAtRenderRef.current[name] !==\n        getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      const isDirtyFieldExist = get(dirtyFieldsRef.current, name);\n      const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n      const previousIsDirty = isDirtyRef.current;\n\n      if (isFieldDirty) {\n        set(dirtyFieldsRef.current, name, true);\n      } else {\n        unset(dirtyFieldsRef.current, name);\n      }\n\n      isDirtyRef.current =\n        (isFieldArray &&\n          !deepEqual(\n            get(getValues(), getFieldArrayParentName(name)),\n            get(defaultValuesRef.current, getFieldArrayParentName(name)),\n          )) ||\n        !isEmptyObject(dirtyFieldsRef.current);\n\n      return (\n        (isDirty && previousIsDirty !== isDirtyRef.current) ||\n        (dirtyFields && isDirtyFieldExist !== get(dirtyFieldsRef.current, name))\n      );\n    },\n    [],\n  );\n\n  const executeValidation = React.useCallback(\n    async (\n      name: InternalFieldName<TFieldValues>,\n      skipReRender?: boolean,\n    ): Promise<boolean> => {\n      if (fieldsRef.current[name]) {\n        const error = await validateField<TFieldValues>(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          fieldsRef.current[name] as Field,\n          unmountFieldsStateRef,\n        );\n\n        shouldRenderBaseOnError(name, error, skipReRender ? null : false);\n\n        return isEmptyObject(error);\n      }\n\n      return false;\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const executeSchemaOrResolverValidation = React.useCallback(\n    async (\n      payload:\n        | InternalFieldName<TFieldValues>\n        | InternalFieldName<TFieldValues>[],\n    ) => {\n      const { errors } = await resolverRef.current!(\n        getValues() as TFieldValues,\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (isArray(payload)) {\n        const isInputsValid = payload\n          .map((name) => {\n            const error = get(errors, name);\n\n            if (error) {\n              set(errorsRef.current, name, error);\n            } else {\n              unset(errorsRef.current, name);\n            }\n\n            return !error;\n          })\n          .every(Boolean);\n\n        reRender();\n\n        return isInputsValid;\n      } else {\n        const error = get(errors, payload);\n\n        shouldRenderBaseOnError(\n          payload,\n          (error ? { [payload]: error } : {}) as FlatFieldErrors<TFieldValues>,\n          previousFormIsValid !== isValidRef.current,\n        );\n\n        return !error;\n      }\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const trigger = React.useCallback(\n    async (\n      name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n    ): Promise<boolean> => {\n      const fields = name || Object.keys(fieldsRef.current);\n\n      if (resolverRef.current) {\n        return executeSchemaOrResolverValidation(fields);\n      }\n\n      if (isArray(fields)) {\n        const result = await Promise.all(\n          fields.map(async (data) => await executeValidation(data, true)),\n        );\n        reRender();\n        return result.every(Boolean);\n      }\n\n      return await executeValidation(fields);\n    },\n    [executeSchemaOrResolverValidation, executeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues>,\n      { shouldDirty, shouldValidate }: SetValueConfig,\n    ) => {\n      getPath(name, value).forEach((fieldName) => {\n        const data = {};\n        const field = fieldsRef.current[fieldName];\n\n        if (field) {\n          set(data, name, value);\n          setFieldValue(field, get(data, fieldName));\n\n          if (shouldDirty) {\n            setDirty(fieldName);\n          }\n\n          if (shouldValidate) {\n            trigger(fieldName as FieldName<TFieldValues>);\n          }\n        }\n      });\n    },\n    [trigger, setFieldValue, setDirty],\n  );\n\n  const setInternalValue = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues> | null | undefined | boolean,\n      config: SetValueConfig,\n    ): boolean | void => {\n      if (fieldsRef.current[name]) {\n        setFieldValue(fieldsRef.current[name] as Field, value);\n        return config.shouldDirty && setDirty(name);\n      } else if (!isPrimitive(value)) {\n        setInternalValues(name, value, config);\n      }\n\n      if (!shouldUnregister) {\n        unmountFieldsStateRef.current[name] = value;\n      }\n\n      return true;\n    },\n    [setDirty, setFieldValue, setInternalValues],\n  );\n\n  const isFieldWatched = (name: string) =>\n    isWatchAllRef.current ||\n    watchFieldsRef.current.has(name) ||\n    watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n\n  const renderWatchedInputs = (name: string, found = true): boolean => {\n    if (!isEmptyObject(watchFieldsHookRef.current)) {\n      for (const key in watchFieldsHookRef.current) {\n        if (\n          !name ||\n          watchFieldsHookRef.current[key].has(name) ||\n          watchFieldsHookRef.current[key].has(getFieldArrayParentName(name)) ||\n          !watchFieldsHookRef.current[key].size\n        ) {\n          watchFieldsHookRenderRef.current[key]();\n          found = false;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  function setValue<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    value: NonUndefined<TFieldValue> extends NestedValue<infer U>\n      ? U\n      : UnpackNestedValue<DeepPartial<LiteralToPrimitive<TFieldValue>>>,\n    config: SetValueConfig = {},\n  ): void {\n    const shouldRender =\n      setInternalValue(name, value as TFieldValues[string], config) ||\n      isFieldWatched(name);\n\n    renderWatchedInputs(name);\n\n    if (shouldRender) {\n      reRender();\n    }\n\n    if (config.shouldValidate) {\n      trigger(name as any);\n    }\n  }\n\n  handleChangeRef.current = handleChangeRef.current\n    ? handleChangeRef.current\n    : async ({ type, target }: Event): Promise<void | boolean> => {\n        const name = (target as Ref)!.name;\n        const field = fieldsRef.current[name];\n        let error: FlatFieldErrors<TFieldValues>;\n\n        if (field) {\n          const isBlurEvent = type === EVENTS.BLUR;\n          const shouldSkipValidation = skipValidation({\n            isBlurEvent,\n            isReValidateOnChange,\n            isReValidateOnBlur,\n            isSubmitted: isSubmittedRef.current,\n            isTouched: !!get(touchedFieldsRef.current, name),\n            ...modeRef.current,\n          });\n          let shouldRender = setDirty(name) || isFieldWatched(name);\n\n          if (\n            isBlurEvent &&\n            !get(touchedFieldsRef.current, name) &&\n            readFormStateRef.current.touched\n          ) {\n            set(touchedFieldsRef.current, name, true);\n            shouldRender = true;\n          }\n\n          if (shouldSkipValidation) {\n            renderWatchedInputs(name);\n            return shouldRender && reRender();\n          }\n\n          if (resolverRef.current) {\n            const { errors } = await resolverRef.current(\n              getValues() as TFieldValues,\n              contextRef.current,\n              isValidateAllFieldCriteria,\n            );\n            const previousFormIsValid = isValidRef.current;\n            isValidRef.current = isEmptyObject(errors);\n\n            error = (get(errors, name)\n              ? { [name]: get(errors, name) }\n              : {}) as FlatFieldErrors<TFieldValues>;\n\n            if (previousFormIsValid !== isValidRef.current) {\n              shouldRender = true;\n            }\n          } else {\n            error = await validateField<TFieldValues>(\n              fieldsRef,\n              isValidateAllFieldCriteria,\n              field,\n              unmountFieldsStateRef,\n            );\n          }\n\n          renderWatchedInputs(name);\n\n          if (!shouldRenderBaseOnError(name, error) && shouldRender) {\n            reRender();\n          }\n        }\n      };\n\n  function getValues(): UnpackNestedValue<TFieldValues>;\n  function getValues<TFieldName extends string, TFieldValue extends unknown>(\n    name: TFieldName,\n  ): TFieldName extends keyof TFieldValues\n    ? UnpackNestedValue<TFieldValues>[TFieldName]\n    : TFieldValue;\n  function getValues<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function getValues(payload?: string | string[]): unknown {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, unmountFieldsStateRef);\n    }\n\n    if (isArray(payload)) {\n      return payload.reduce(\n        (previous, name) => ({\n          ...previous,\n          [name]: getFieldValue(fieldsRef, name, unmountFieldsStateRef),\n        }),\n        {},\n      );\n    }\n\n    return getFieldsValues(fieldsRef, unmountFieldsStateRef);\n  }\n\n  const validateResolver = React.useCallback(\n    async (values = {}) => {\n      const { errors } = await resolverRef.current!(\n        {\n          ...defaultValuesRef.current,\n          ...getValues(),\n          ...values,\n        },\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (previousFormIsValid !== isValidRef.current) {\n        reRender();\n      }\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const removeFieldEventListener = React.useCallback(\n    (field: Field, forceDelete?: boolean) =>\n      findRemovedFieldAndRemoveListener(\n        fieldsRef,\n        handleChangeRef.current!,\n        field,\n        unmountFieldsStateRef,\n        shouldUnregister,\n        forceDelete,\n      ),\n    [shouldUnregister],\n  );\n\n  const removeFieldEventListenerAndRef = React.useCallback(\n    (field: Field | undefined, forceDelete?: boolean) => {\n      if (\n        field &&\n        (!isNameInFieldArray(fieldArrayNamesRef.current, field.ref.name) ||\n          forceDelete)\n      ) {\n        removeFieldEventListener(field, forceDelete);\n\n        if (shouldUnregister) {\n          [\n            errorsRef,\n            touchedFieldsRef,\n            dirtyFieldsRef,\n            defaultValuesAtRenderRef,\n          ].forEach((data) => unset(data.current, field.ref.name));\n\n          [fieldsWithValidationRef, validFieldsRef].forEach((data) =>\n            data.current.delete(field.ref.name),\n          );\n\n          if (\n            readFormStateRef.current.isValid ||\n            readFormStateRef.current.touched ||\n            readFormStateRef.current.isDirty\n          ) {\n            isDirtyRef.current = !isEmptyObject(dirtyFieldsRef.current);\n            reRender();\n\n            if (resolverRef.current) {\n              validateResolver();\n            }\n          }\n        }\n      }\n    },\n    [validateResolver, removeFieldEventListener],\n  );\n\n  function clearErrors(\n    name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    if (name) {\n      (isArray(name) ? name : [name]).forEach((inputName) =>\n        unset(errorsRef.current, inputName),\n      );\n    } else {\n      errorsRef.current = {};\n    }\n\n    reRender();\n  }\n\n  function setError(name: FieldName<TFieldValues>, error: ErrorOption): void {\n    isValidRef.current = false;\n\n    set(errorsRef.current, name, {\n      ...error,\n      ref: (fieldsRef.current[name] || {})!.ref,\n    });\n\n    reRender();\n  }\n\n  const watchInternal = React.useCallback(\n    (\n      fieldNames?: string | string[],\n      defaultValue?: unknown,\n      watchId?: string,\n    ) => {\n      const watchFields = watchId\n        ? watchFieldsHookRef.current[watchId]\n        : watchFieldsRef.current;\n      const combinedDefaultValues = isUndefined(defaultValue)\n        ? defaultValuesRef.current\n        : defaultValue;\n      const fieldValues = getFieldsValues<TFieldValues>(\n        fieldsRef,\n        unmountFieldsStateRef,\n        fieldNames,\n      );\n\n      if (isString(fieldNames)) {\n        return assignWatchFields<TFieldValues>(\n          fieldValues,\n          fieldNames,\n          watchFields,\n          isUndefined(defaultValue)\n            ? get(combinedDefaultValues, fieldNames)\n            : (defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>),\n          true,\n        );\n      }\n\n      if (isArray(fieldNames)) {\n        return fieldNames.reduce(\n          (previous, name) => ({\n            ...previous,\n            [name]: assignWatchFields<TFieldValues>(\n              fieldValues,\n              name,\n              watchFields,\n              combinedDefaultValues as UnpackNestedValue<\n                DeepPartial<TFieldValues>\n              >,\n            ),\n          }),\n          {},\n        );\n      }\n\n      if (isUndefined(watchId)) {\n        isWatchAllRef.current = true;\n      }\n\n      return transformToNestObject(\n        (!isEmptyObject(fieldValues) && fieldValues) ||\n          (combinedDefaultValues as FieldValues),\n      );\n    },\n    [],\n  );\n\n  function watch(): UnpackNestedValue<TFieldValues>;\n  function watch<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    defaultValue?: UnpackNestedValue<LiteralToPrimitive<TFieldValue>>,\n  ): UnpackNestedValue<LiteralToPrimitive<TFieldValue>>;\n  function watch<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n    defaultValues?: UnpackNestedValue<\n      DeepPartial<Pick<TFieldValues, TFieldName>>\n    >,\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function watch(\n    names: string[],\n    defaultValues?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  ): UnpackNestedValue<DeepPartial<TFieldValues>>;\n  function watch(\n    fieldNames?: string | string[],\n    defaultValue?: unknown,\n  ): unknown {\n    return watchInternal(fieldNames, defaultValue);\n  }\n\n  function unregister(\n    name: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    (isArray(name) ? name : [name]).forEach((fieldName) =>\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true),\n    );\n  }\n\n  function registerFieldRef<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: TFieldElement & Ref,\n    validateOptions: ValidationRules | null = {},\n  ): ((name: InternalFieldName<TFieldValues>) => void) | void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ref.name) {\n        return console.warn('📋 Field is missing `name` attribute:', ref);\n      }\n\n      if (\n        fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) &&\n        !RegExp(\n          `^${ref.name.split(/\\[\\d+\\]$/)[0]}[\\\\d+]\\.\\\\w+`\n            .replace(/\\[/g, '\\\\[')\n            .replace(/\\]/g, '\\\\]'),\n        ).test(ref.name)\n      ) {\n        return console.warn(\n          '📋 `name` prop should be in object shape: name=\"test[index].name\". https://react-hook-form.com/api#useFieldArray',\n        );\n      }\n    }\n\n    const { name, type, value } = ref;\n    const fieldRefAndValidationOptions = {\n      ref,\n      ...validateOptions,\n    };\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    const compareRef = (currentRef: Ref) =>\n      isWeb && (!isHTMLElement(ref) || currentRef === ref);\n    let field = fields[name] as Field;\n    let isEmptyDefaultValue = true;\n    let isFieldArray;\n    let defaultValue;\n\n    if (\n      field &&\n      (isRadioOrCheckbox\n        ? isArray(field.options) &&\n          unique(field.options).find((option) => {\n            return value === option.ref.value && compareRef(option.ref);\n          })\n        : compareRef(field.ref))\n    ) {\n      fields[name] = {\n        ...field,\n        ...validateOptions,\n      };\n      return;\n    }\n\n    if (type) {\n      const mutationWatcher = onDomRemove(ref, () =>\n        removeFieldEventListenerAndRef(field),\n      );\n\n      field = isRadioOrCheckbox\n        ? {\n            options: [\n              ...unique((field && field.options) || []),\n              {\n                ref,\n                mutationWatcher,\n              } as RadioOrCheckboxOption,\n            ],\n            ref: { type, name },\n            ...validateOptions,\n          }\n        : {\n            ...fieldRefAndValidationOptions,\n            mutationWatcher,\n          };\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n\n    fields[name] = field;\n\n    const isEmptyUnmountFields = isUndefined(\n      get(unmountFieldsStateRef.current, name),\n    );\n\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(\n        isEmptyUnmountFields\n          ? defaultValuesRef.current\n          : unmountFieldsStateRef.current,\n        name,\n      );\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(field, defaultValue);\n      }\n    }\n\n    if (resolver && !isFieldArray && readFormStateRef.current.isValid) {\n      validateResolver();\n    } else if (!isEmptyObject(validateOptions)) {\n      fieldsWithValidationRef.current.add(name);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          field,\n          unmountFieldsStateRef,\n        ).then((error: FieldErrors) => {\n          const previousFormIsValid = isValidRef.current;\n\n          isEmptyObject(error)\n            ? validFieldsRef.current.add(name)\n            : (isValidRef.current = false);\n\n          if (previousFormIsValid !== isValidRef.current) {\n            reRender();\n          }\n        });\n      }\n    }\n\n    if (\n      !defaultValuesAtRenderRef.current[name] &&\n      !(isFieldArray && isEmptyDefaultValue)\n    ) {\n      const fieldValue = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      defaultValuesAtRenderRef.current[name] = isEmptyDefaultValue\n        ? isObject(fieldValue)\n          ? { ...fieldValue }\n          : fieldValue\n        : defaultValue;\n    }\n\n    if (type) {\n      attachEventListeners(\n        isRadioOrCheckbox && field.options\n          ? field.options[field.options.length - 1]\n          : field,\n        isRadioOrCheckbox || isSelectInput(ref),\n        handleChangeRef.current,\n      );\n    }\n  }\n\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    rules?: ValidationRules,\n  ): (ref: (TFieldElement & Ref) | null) => void;\n  function register(\n    name: FieldName<TFieldValues>,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: (TFieldElement & Ref) | null,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    refOrValidationOptions?:\n      | FieldName<TFieldValues>\n      | ValidationRules\n      | (TFieldElement & Ref)\n      | null,\n    rules?: ValidationRules,\n  ): ((ref: (TFieldElement & Ref) | null) => void) | void {\n    if (!isWindowUndefined) {\n      if (isString(refOrValidationOptions)) {\n        registerFieldRef({ name: refOrValidationOptions }, rules);\n      } else if (\n        isObject(refOrValidationOptions) &&\n        'name' in refOrValidationOptions\n      ) {\n        registerFieldRef(refOrValidationOptions, rules);\n      } else {\n        return (ref: (TFieldElement & Ref) | null) =>\n          ref && registerFieldRef(ref, refOrValidationOptions);\n      }\n    }\n  }\n\n  const handleSubmit = React.useCallback(\n    <TSubmitFieldValues extends FieldValues = TFieldValues>(\n      onValid: SubmitHandler<TSubmitFieldValues>,\n      onInvalid?: SubmitErrorHandler<TFieldValues>,\n    ) => async (e?: React.BaseSyntheticEvent): Promise<void> => {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.persist();\n      }\n      let fieldErrors: FieldErrors<TFieldValues> = {};\n      let fieldValues: FieldValues = getFieldsValues(\n        fieldsRef,\n        unmountFieldsStateRef,\n      );\n\n      if (readFormStateRef.current.isSubmitting) {\n        isSubmittingRef.current = true;\n        reRender();\n      }\n\n      try {\n        if (resolverRef.current) {\n          const { errors, values } = await resolverRef.current(\n            fieldValues as TFieldValues,\n            contextRef.current,\n            isValidateAllFieldCriteria,\n          );\n          errorsRef.current = errors;\n          fieldErrors = errors;\n          fieldValues = values;\n        } else {\n          for (const field of Object.values(fieldsRef.current)) {\n            if (field) {\n              const {\n                ref: { name },\n              } = field;\n\n              const fieldError = await validateField(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                unmountFieldsStateRef,\n              );\n\n              if (fieldError[name]) {\n                set(fieldErrors, name, fieldError[name]);\n                validFieldsRef.current.delete(name);\n              } else if (fieldsWithValidationRef.current.has(name)) {\n                unset(errorsRef.current, name);\n                validFieldsRef.current.add(name);\n              }\n            }\n          }\n        }\n\n        if (\n          isEmptyObject(fieldErrors) &&\n          Object.keys(errorsRef.current).every((name) =>\n            Object.keys(fieldsRef.current).includes(name),\n          )\n        ) {\n          errorsRef.current = {};\n          reRender();\n          await onValid(\n            fieldValues as UnpackNestedValue<TSubmitFieldValues>,\n            e,\n          );\n        } else {\n          errorsRef.current = {\n            ...errorsRef.current,\n            ...fieldErrors,\n          };\n          if (onInvalid) {\n            await onInvalid(fieldErrors, e);\n          }\n          if (shouldFocusError) {\n            focusOnErrorField(fieldsRef.current, fieldErrors);\n          }\n        }\n      } finally {\n        isSubmittedRef.current = true;\n        isSubmittingRef.current = false;\n        submitCountRef.current = submitCountRef.current + 1;\n        reRender();\n      }\n    },\n    [shouldFocusError, isValidateAllFieldCriteria],\n  );\n\n  const resetRefs = ({\n    errors,\n    isDirty,\n    isSubmitted,\n    touched,\n    isValid,\n    submitCount,\n    dirtyFields,\n  }: OmitResetState) => {\n    if (!errors) {\n      errorsRef.current = {};\n    }\n\n    if (!touched) {\n      touchedFieldsRef.current = {};\n    }\n\n    if (!isValid) {\n      validFieldsRef.current = new Set();\n      fieldsWithValidationRef.current = new Set();\n      isValidRef.current = true;\n    }\n\n    if (!isDirty) {\n      isDirtyRef.current = false;\n    }\n\n    if (!dirtyFields) {\n      dirtyFieldsRef.current = {};\n    }\n\n    if (!isSubmitted) {\n      isSubmittedRef.current = false;\n    }\n\n    if (!submitCount) {\n      submitCountRef.current = 0;\n    }\n\n    defaultValuesAtRenderRef.current = {} as DefaultValuesAtRender<\n      TFieldValues\n    >;\n    fieldArrayDefaultValues.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n  };\n\n  const reset = (\n    values?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n    omitResetState: OmitResetState = {},\n  ): void => {\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const { ref, options } = field;\n          const inputRef =\n            isRadioOrCheckboxFunction(ref) && isArray(options)\n              ? options[0].ref\n              : ref;\n\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n    }\n\n    fieldsRef.current = {};\n\n    defaultValuesRef.current = values || { ...defaultValuesRef.current };\n\n    if (values) {\n      renderWatchedInputs('');\n    }\n\n    unmountFieldsStateRef.current = shouldUnregister ? {} : values || {};\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(\n      (resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray(),\n    );\n\n    resetRefs(omitResetState);\n\n    reRender();\n  };\n\n  React.useEffect(() => {\n    isUnMount.current = false;\n\n    return () => {\n      isUnMount.current = true;\n\n      if (process.env.NODE_ENV !== 'production') {\n        return;\n      }\n\n      fieldsRef.current &&\n        Object.values(fieldsRef.current).forEach((field) =>\n          removeFieldEventListenerAndRef(field, true),\n        );\n    };\n  }, [removeFieldEventListenerAndRef]);\n\n  if (!resolver && readFormStateRef.current.isValid) {\n    isValidRef.current =\n      validFieldsRef.current.size >= fieldsWithValidationRef.current.size &&\n      isEmptyObject(errorsRef.current);\n  }\n\n  const formState = {\n    dirtyFields: dirtyFieldsRef.current,\n    isSubmitted: isSubmittedRef.current,\n    submitCount: submitCountRef.current,\n    touched: touchedFieldsRef.current,\n    isDirty: isDirtyRef.current,\n    isSubmitting: isSubmittingRef.current,\n    isValid: isOnSubmit\n      ? isSubmittedRef.current && isEmptyObject(errorsRef.current)\n      : isValidRef.current,\n  };\n\n  const commonProps = {\n    trigger,\n    setValue: React.useCallback(setValue, [\n      reRender,\n      setInternalValue,\n      trigger,\n    ]),\n    getValues: React.useCallback(getValues, []),\n    register: React.useCallback(register, [defaultValuesRef.current]),\n    unregister: React.useCallback(unregister, []),\n    formState: isProxyEnabled\n      ? new Proxy<FormStateProxy<TFieldValues>>(formState, {\n          get: (obj, prop: keyof FormStateProxy) => {\n            if (\n              process.env.NODE_ENV !== 'production' &&\n              prop === 'isValid' &&\n              isOnSubmit\n            ) {\n              console.warn(\n                '📋 `formState.isValid` is applicable with `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState',\n              );\n            }\n\n            if (prop in obj) {\n              readFormStateRef.current[prop] = true;\n              return obj[prop];\n            }\n\n            return undefined;\n          },\n        })\n      : formState,\n  };\n\n  const control = {\n    removeFieldEventListener,\n    renderWatchedInputs,\n    watchInternal,\n    reRender,\n    mode: modeRef.current,\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange,\n    },\n    errorsRef,\n    touchedFieldsRef,\n    fieldsRef,\n    isWatchAllRef,\n    watchFieldsRef,\n    resetFieldArrayFunctionRef,\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    fieldArrayDefaultValues,\n    validFieldsRef,\n    dirtyFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayNamesRef,\n    isDirtyRef,\n    isSubmittedRef,\n    readFormStateRef,\n    defaultValuesRef,\n    unmountFieldsStateRef,\n    validateResolver: resolver ? validateResolver : undefined,\n    ...commonProps,\n  };\n\n  return {\n    watch,\n    control,\n    handleSubmit,\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    setError: React.useCallback(setError, []),\n    errors: errorsRef.current,\n    ...commonProps,\n  };\n}\n","import * as React from 'react';\nimport { UseFormMethods, FieldValues } from './types/form';\nimport { FormProviderProps } from './types/props';\n\nconst FormContext = React.createContext<UseFormMethods | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues\n>(): UseFormMethods<TFieldValues> =>\n  React.useContext(FormContext) as UseFormMethods<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FormProviderProps<TFieldValues>) => (\n  <FormContext.Provider value={{ ...props } as UseFormMethods}>\n    {children}\n  </FormContext.Provider>\n);\n","import { UNDEFINED } from '../constants';\n\nexport default () => {\n  const d =\n    typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import isUndefined from './isUndefined';\nimport isArray from './isArray';\nimport unique from './unique';\n\nconst removeAt = <T>(data: T[], index: number): T[] => [\n  ...data.slice(0, index),\n  ...data.slice(index + 1),\n];\n\nfunction removeAtIndexes<T>(data: T[], index: number[]): T[] {\n  let k = -1;\n\n  while (++k < data.length) {\n    if (index.indexOf(k) >= 0) {\n      delete data[k];\n    }\n  }\n\n  return unique(data);\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : isArray(index)\n    ? removeAtIndexes(data, index)\n    : removeAt(data, index);\n","import isUndefined from './isUndefined';\nimport isArray from './isArray';\n\nexport default <T>(data: T[], from: number, to: number): (T | undefined)[] => {\n  if (isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined as any;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  const temp = [data[indexB], data[indexA]];\n  data[indexA] = temp[0];\n  data[indexB] = temp[1];\n};\n","import isArray from './isArray';\n\nexport default function prepend<T>(data: T[]): (T | undefined)[];\nexport default function prepend<T>(data: T[], value: T | T[]): T[];\nexport default function prepend<T>(\n  data: T[],\n  value?: T | T[],\n): (T | undefined)[] {\n  return [...(isArray(value) ? value : [value || undefined]), ...data];\n}\n","import isArray from './isArray';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...(isArray(value) ? value : [value || undefined]),\n    ...data.slice(index),\n  ];\n}\n","import isArray from './isArray';\n\nexport default <T>(value: T | T[]): undefined[] | undefined =>\n  isArray(value) ? Array(value.length).fill(undefined) : undefined;\n","import isArray from './isArray';\nimport isObject from './isObject';\n\nfunction mapValueToBoolean(value: any) {\n  if (isObject(value)) {\n    const object: any = {};\n\n    for (const key in value) {\n      object[key] = true;\n    }\n\n    return [object];\n  }\n\n  return [true];\n}\n\nexport const filterBooleanArray = <T>(value: T): T[] =>\n  isArray(value)\n    ? value.map(mapValueToBoolean).flat()\n    : mapValueToBoolean(value);\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport { isMatchFieldArrayName } from './logic/isNameInFieldArray';\nimport generateId from './logic/generateId';\nimport isObject from './utils/isObject';\nimport deepEqual from './logic/deepEqual';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport get from './utils/get';\nimport set from './utils/set';\nimport isUndefined from './utils/isUndefined';\nimport removeArrayAt from './utils/remove';\nimport unset from './utils/unset';\nimport moveArrayAt from './utils/move';\nimport swapArrayAt from './utils/swap';\nimport prependAt from './utils/prepend';\nimport isArray from './utils/isArray';\nimport insertAt from './utils/insert';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport { filterBooleanArray } from './utils/filterBooleanArray';\nimport unique from './utils/unique';\nimport {\n  Field,\n  FieldValues,\n  UseFieldArrayOptions,\n  Control,\n  ArrayField,\n} from './types/form';\n\nconst appendId = <TValue extends object, TKeyName extends string>(\n  value: TValue,\n  keyName: TKeyName,\n): Partial<ArrayField<TValue, TKeyName>> => ({\n  [keyName]: generateId(),\n  ...(isObject(value) ? value : { value }),\n});\n\nconst mapIds = <TData extends object, TKeyName extends string>(\n  data: TData | TData[],\n  keyName: TKeyName,\n) => (isArray(data) ? data : []).map((value) => appendId(value, keyName));\n\nexport const useFieldArray = <\n  TFieldArrayValues extends FieldValues = FieldValues,\n  TKeyName extends string = 'id',\n  TControl extends Control = Control\n>({\n  control,\n  name,\n  keyName = 'id' as TKeyName,\n}: UseFieldArrayOptions<TKeyName, TControl>) => {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 useFieldArray is missing `control` prop.');\n    }\n\n    if (!name) {\n      console.warn('📋 useFieldArray is missing `name` attribute.');\n    }\n  }\n\n  const focusIndexRef = React.useRef(-1);\n  const {\n    isWatchAllRef,\n    resetFieldArrayFunctionRef,\n    fieldArrayNamesRef,\n    reRender,\n    fieldsRef,\n    defaultValuesRef,\n    removeFieldEventListener,\n    errorsRef,\n    dirtyFieldsRef,\n    isDirtyRef,\n    touchedFieldsRef,\n    readFormStateRef,\n    watchFieldsRef,\n    validFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayDefaultValues,\n    validateResolver,\n    renderWatchedInputs,\n    getValues,\n  } = control || methods.control;\n  let shouldRender;\n\n  const getDefaultValues = () => [\n    ...(get(fieldArrayDefaultValues.current, name) ||\n      get(defaultValuesRef.current, name) ||\n      []),\n  ];\n  const memoizedDefaultValues = React.useRef<Partial<TFieldArrayValues>[]>(\n    getDefaultValues(),\n  );\n  const [fields, setFields] = React.useState<\n    Partial<ArrayField<TFieldArrayValues, TKeyName>>[]\n  >(mapIds(memoizedDefaultValues.current, keyName));\n  const allFields = React.useRef<\n    Partial<ArrayField<TFieldArrayValues, TKeyName>>[]\n  >(fields);\n  const rootParentName = getFieldArrayParentName(name);\n\n  const getCurrentFieldsValues = () =>\n    get(getValues() || {}, name, allFields.current).map(\n      (item: Partial<TFieldArrayValues>, index: number) => ({\n        ...allFields.current[index],\n        ...item,\n      }),\n    );\n\n  allFields.current = fields;\n  fieldArrayNamesRef.current.add(name);\n\n  if (!get(fieldArrayDefaultValues.current, name) && rootParentName) {\n    set(\n      fieldArrayDefaultValues.current,\n      rootParentName,\n      get(defaultValuesRef.current, rootParentName),\n    );\n  }\n\n  const appendValueWithKey = (values: Partial<TFieldArrayValues>[]) =>\n    values.map((value: Partial<TFieldArrayValues>) => appendId(value, keyName));\n\n  const setFieldAndValidState = (\n    fieldsValues: Partial<ArrayField<TFieldArrayValues, TKeyName>>[],\n  ) => {\n    setFields(fieldsValues);\n\n    if (readFormStateRef.current.isValid && validateResolver) {\n      const values = {};\n      set(values, name, fieldsValues);\n      validateResolver(values);\n    }\n  };\n\n  const shouldRenderFieldArray = (shouldRender?: boolean) => {\n    renderWatchedInputs(name);\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty ||\n        readFormStateRef.current.isValid) &&\n      !isWatchAllRef.current\n    ) {\n      shouldRender = true;\n    }\n\n    shouldRender && reRender();\n  };\n\n  const resetFields = (\n    flagOrFields?: (Partial<TFieldArrayValues> | undefined)[],\n  ) => {\n    if (\n      readFormStateRef.current.isDirty ||\n      readFormStateRef.current.dirtyFields\n    ) {\n      isDirtyRef.current =\n        isUndefined(flagOrFields) ||\n        !deepEqual(\n          flagOrFields.map(({ [keyName]: omitted, ...rest } = {}) => rest),\n          get(defaultValuesRef.current, name, []),\n        );\n    }\n\n    for (const key in fieldsRef.current) {\n      if (isMatchFieldArrayName(key, name) && fieldsRef.current[key]) {\n        removeFieldEventListener(fieldsRef.current[key] as Field, true);\n      }\n    }\n  };\n\n  const append = (\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    shouldRender = false;\n    setFieldAndValidState([\n      ...allFields.current,\n      ...(isArray(value)\n        ? appendValueWithKey(value)\n        : [appendId(value, keyName)]),\n    ]);\n\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty\n    ) {\n      set(dirtyFieldsRef.current, name, [\n        ...(get(dirtyFieldsRef.current, name) ||\n          fillEmptyArray(fields.slice(0, 1))),\n        ...filterBooleanArray(value),\n      ]);\n      isDirtyRef.current = true;\n      shouldRender = true;\n    }\n\n    focusIndexRef.current = shouldFocus ? allFields.current.length : -1;\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const prepend = (\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    const emptyArray = fillEmptyArray(value);\n    shouldRender = false;\n\n    setFieldAndValidState(\n      prependAt(\n        getCurrentFieldsValues(),\n        isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)],\n      ),\n    );\n    resetFields();\n\n    if (isArray(get(errorsRef.current, name))) {\n      set(\n        errorsRef.current,\n        name,\n        prependAt(get(errorsRef.current, name), emptyArray),\n      );\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      set(\n        touchedFieldsRef.current,\n        name,\n        prependAt(get(touchedFieldsRef.current, name), emptyArray),\n      );\n      shouldRender = true;\n    }\n\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty\n    ) {\n      set(\n        dirtyFieldsRef.current,\n        name,\n        prependAt(\n          get(dirtyFieldsRef.current, name) || [],\n          filterBooleanArray(value),\n        ),\n      );\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n    focusIndexRef.current = shouldFocus ? 0 : -1;\n  };\n\n  const remove = (index?: number | number[]) => {\n    shouldRender = false;\n\n    const fieldValues = getCurrentFieldsValues();\n    setFieldAndValidState(removeArrayAt(fieldValues, index));\n    resetFields(removeArrayAt(fieldValues, index));\n\n    if (isArray(get(errorsRef.current, name))) {\n      set(\n        errorsRef.current,\n        name,\n        removeArrayAt(get(errorsRef.current, name), index),\n      );\n\n      if (!unique(get(errorsRef.current, name, [])).length) {\n        unset(errorsRef.current, name);\n      }\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      set(\n        touchedFieldsRef.current,\n        name,\n        removeArrayAt(get(touchedFieldsRef.current, name), index),\n      );\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFieldsRef.current, name)\n    ) {\n      set(\n        dirtyFieldsRef.current,\n        name,\n        removeArrayAt(get(dirtyFieldsRef.current, name), index),\n      );\n\n      if (!unique(get(dirtyFieldsRef.current, name, [])).length) {\n        unset(dirtyFieldsRef.current, name);\n      }\n\n      shouldRender = true;\n    }\n\n    if (readFormStateRef.current.isValid && !validateResolver) {\n      let fieldIndex = -1;\n      let isFound = false;\n      const isIndexUndefined = isUndefined(index);\n\n      while (fieldIndex++ < fields.length) {\n        const isLast = fieldIndex === fields.length - 1;\n        const isCurrentIndex =\n          (isArray(index) ? index : [index]).indexOf(fieldIndex) >= 0;\n\n        if (isCurrentIndex || isIndexUndefined) {\n          isFound = true;\n        }\n\n        if (!isFound) {\n          continue;\n        }\n\n        for (const key in fields[fieldIndex]) {\n          const getFieldName = (index = 0) =>\n            `${name}[${fieldIndex - index}].${key}`;\n\n          if (isCurrentIndex || isLast || isIndexUndefined) {\n            validFieldsRef.current.delete(getFieldName());\n            fieldsWithValidationRef.current.delete(getFieldName());\n          } else {\n            if (validFieldsRef.current.has(getFieldName())) {\n              validFieldsRef.current.add(getFieldName(1));\n            }\n            if (fieldsWithValidationRef.current.has(getFieldName())) {\n              fieldsWithValidationRef.current.add(getFieldName(1));\n            }\n          }\n        }\n      }\n    }\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const insert = (\n    index: number,\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    shouldRender = false;\n    const emptyArray = fillEmptyArray(value);\n    const fieldValues = getCurrentFieldsValues();\n\n    setFieldAndValidState(\n      insertAt(\n        fieldValues,\n        index,\n        isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)],\n      ),\n    );\n    resetFields(insertAt(fieldValues, index));\n\n    if (isArray(get(errorsRef.current, name))) {\n      set(\n        errorsRef.current,\n        name,\n        insertAt(get(errorsRef.current, name), index, emptyArray),\n      );\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      set(\n        touchedFieldsRef.current,\n        name,\n        insertAt(get(touchedFieldsRef.current, name), index, emptyArray),\n      );\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFieldsRef.current, name)\n    ) {\n      set(\n        dirtyFieldsRef.current,\n        name,\n        insertAt(\n          get(dirtyFieldsRef.current, name),\n          index,\n          filterBooleanArray(value),\n        ),\n      );\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n\n    focusIndexRef.current = shouldFocus ? index : -1;\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    shouldRender = false;\n\n    const fieldValues = getCurrentFieldsValues();\n    swapArrayAt(fieldValues, indexA, indexB);\n    resetFields(fieldValues);\n    setFieldAndValidState([...fieldValues]);\n\n    if (isArray(get(errorsRef.current, name))) {\n      swapArrayAt(get(errorsRef.current, name), indexA, indexB);\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      swapArrayAt(get(touchedFieldsRef.current, name), indexA, indexB);\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFieldsRef.current, name)\n    ) {\n      swapArrayAt(get(dirtyFieldsRef.current, name), indexA, indexB);\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const move = (from: number, to: number) => {\n    shouldRender = false;\n    const fieldValues = getCurrentFieldsValues();\n    moveArrayAt(fieldValues, from, to);\n    resetFields(fieldValues);\n    setFieldAndValidState([...fieldValues]);\n\n    if (isArray(get(errorsRef.current, name))) {\n      moveArrayAt(get(errorsRef.current, name), from, to);\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      moveArrayAt(get(touchedFieldsRef.current, name), from, to);\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFieldsRef.current, name)\n    ) {\n      moveArrayAt(get(dirtyFieldsRef.current, name), from, to);\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const reset = () => {\n    resetFields();\n    memoizedDefaultValues.current = getDefaultValues();\n    setFields(mapIds(memoizedDefaultValues.current, keyName));\n  };\n\n  React.useEffect(() => {\n    const defaultValues = get(fieldArrayDefaultValues.current, name);\n\n    if (defaultValues && fields.length < defaultValues.length) {\n      defaultValues.pop();\n      set(fieldArrayDefaultValues.current, name, defaultValues);\n    }\n\n    if (isWatchAllRef.current) {\n      reRender();\n    } else if (watchFieldsRef) {\n      let shouldRenderUseWatch = true;\n      for (const watchField of watchFieldsRef.current) {\n        if (watchField.startsWith(name)) {\n          reRender();\n          shouldRenderUseWatch = false;\n          break;\n        }\n      }\n\n      shouldRenderUseWatch && renderWatchedInputs(name);\n    }\n\n    if (focusIndexRef.current > -1) {\n      for (const key in fieldsRef.current) {\n        const field = fieldsRef.current[key];\n        if (\n          key.startsWith(`${name}[${focusIndexRef.current}]`) &&\n          field!.ref.focus\n        ) {\n          field!.ref.focus();\n          break;\n        }\n      }\n    }\n\n    focusIndexRef.current = -1;\n  }, [\n    fields,\n    name,\n    fieldArrayDefaultValues,\n    reRender,\n    fieldsRef,\n    watchFieldsRef,\n    isWatchAllRef,\n  ]);\n\n  React.useEffect(() => {\n    const resetFunctions = resetFieldArrayFunctionRef.current;\n    resetFunctions[name] = reset;\n\n    return () => {\n      resetFields();\n      delete resetFunctions[name];\n      fieldArrayNamesRef.current.delete(name);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    swap: React.useCallback(swap, [name]),\n    move: React.useCallback(move, [name]),\n    prepend: React.useCallback(prepend, [name]),\n    append: React.useCallback(append, [name]),\n    remove: React.useCallback(remove, [fields, name]),\n    insert: React.useCallback(insert, [name]),\n    fields,\n  };\n};\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport isUndefined from './utils/isUndefined';\nimport isString from './utils/isString';\nimport generateId from './logic/generateId';\nimport get from './utils/get';\nimport isArray from './utils/isArray';\nimport {\n  UseWatchOptions,\n  FieldValues,\n  UnpackNestedValue,\n  Control,\n} from './types/form';\nimport { DeepPartial } from './types/utils';\n\nexport function useWatch<TWatchFieldValues extends FieldValues>(props: {\n  defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\n  control?: Control;\n}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\nexport function useWatch<TWatchFieldValue extends any>(props: {\n  name: string;\n  control?: Control;\n}): undefined | UnpackNestedValue<TWatchFieldValue>;\nexport function useWatch<TWatchFieldValue extends any>(props: {\n  name: string;\n  defaultValue: UnpackNestedValue<TWatchFieldValue>;\n  control?: Control;\n}): UnpackNestedValue<TWatchFieldValue>;\nexport function useWatch<TWatchFieldValues extends FieldValues>(props: {\n  name: string[];\n  defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\n  control?: Control;\n}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\nexport function useWatch<TWatchFieldValues>({\n  control,\n  name,\n  defaultValue,\n}: UseWatchOptions): TWatchFieldValues {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 useWatch is missing `control` prop.');\n    }\n\n    if (name === '') {\n      console.warn('📋 useWatch is missing `name` attribute.');\n    }\n  }\n\n  const {\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    watchInternal,\n    defaultValuesRef,\n  } = control || methods.control;\n  const [value, setValue] = React.useState<unknown>(\n    isUndefined(defaultValue)\n      ? isString(name)\n        ? get(defaultValuesRef.current, name)\n        : isArray(name)\n        ? name.reduce(\n            (previous, inputName) => ({\n              ...previous,\n              [inputName]: get(defaultValuesRef.current, inputName),\n            }),\n            {},\n          )\n        : defaultValuesRef.current\n      : defaultValue,\n  );\n  const idRef = React.useRef<string>();\n  const defaultValueRef = React.useRef(defaultValue);\n\n  const updateWatchValue = React.useCallback(\n    () => setValue(watchInternal(name, defaultValueRef.current, idRef.current)),\n    [setValue, watchInternal, defaultValueRef, name, idRef],\n  );\n\n  React.useEffect(() => {\n    const id = (idRef.current = generateId());\n    const watchFieldsHookRender = watchFieldsHookRenderRef.current;\n    const watchFieldsHook = watchFieldsHookRef.current;\n    watchFieldsHook[id] = new Set();\n    watchFieldsHookRender[id] = updateWatchValue;\n    watchInternal(name, defaultValueRef.current, id);\n\n    return () => {\n      delete watchFieldsHook[id];\n      delete watchFieldsHookRender[id];\n    };\n  }, [\n    name,\n    updateWatchValue,\n    watchFieldsHookRenderRef,\n    watchFieldsHookRef,\n    watchInternal,\n    defaultValueRef,\n  ]);\n\n  return (isUndefined(value) ? defaultValue : value) as TWatchFieldValues;\n}\n","import isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\n\nexport default (event: any) =>\n  isPrimitive(event) ||\n  !isObject(event.target) ||\n  (isObject(event.target) && !event.type)\n    ? event\n    : isUndefined(event.target.value)\n    ? event.target.checked\n    : event.target.value;\n","import * as React from 'react';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport set from './utils/set';\nimport getInputValue from './logic/getInputValue';\nimport skipValidation from './logic/skipValidation';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport { useFormContext } from './useFormContext';\nimport { VALUE } from './constants';\nimport { Control } from './types/form';\nimport { ControllerProps } from './types/props';\n\nconst Controller = <\n  TAs extends\n    | React.ReactElement\n    | React.ComponentType<any>\n    | 'input'\n    | 'select'\n    | 'textarea',\n  TControl extends Control = Control\n>({\n  name,\n  rules,\n  as,\n  render,\n  defaultValue,\n  control,\n  onFocus,\n  ...rest\n}: ControllerProps<TAs, TControl>) => {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production' && !control && !methods) {\n    throw new Error('📋 Controller is missing `control` prop.');\n  }\n\n  const {\n    defaultValuesRef,\n    setValue,\n    register,\n    unregister,\n    trigger,\n    mode,\n    reValidateMode: { isReValidateOnBlur, isReValidateOnChange },\n    isSubmittedRef,\n    touchedFieldsRef,\n    readFormStateRef,\n    reRender,\n    fieldsRef,\n    fieldArrayNamesRef,\n    unmountFieldsStateRef,\n  } = control || methods.control;\n  const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\n  const getInitialValue = () =>\n    !isUndefined(get(unmountFieldsStateRef.current, name)) && isNotFieldArray\n      ? unmountFieldsStateRef.current[name]\n      : isUndefined(defaultValue)\n      ? get(defaultValuesRef.current, name)\n      : defaultValue;\n  const [value, setInputStateValue] = React.useState(getInitialValue());\n  const valueRef = React.useRef(value);\n  const onFocusRef = React.useRef(onFocus);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isUndefined(value)) {\n      console.warn(\n        '📋 Controller `defaultValue` or useForm `defaultValues` is missing.',\n      );\n    }\n\n    if (as && render) {\n      console.warn('📋 Should use either `as` or `render` prop.');\n    }\n\n    if (!isNotFieldArray && isUndefined(defaultValue)) {\n      console.warn(\n        '📋 Controller is missing `defaultValue` prop when using `useFieldArray`.',\n      );\n    }\n  }\n\n  const shouldValidate = (isBlurEvent?: boolean) =>\n    !skipValidation({\n      isBlurEvent,\n      isReValidateOnBlur,\n      isReValidateOnChange,\n      isSubmitted: isSubmittedRef.current,\n      ...mode,\n    });\n\n  const commonTask = ([event]: any[]) => {\n    const data = getInputValue(event);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  };\n\n  const registerField = React.useCallback(() => {\n    if (process.env.NODE_ENV !== 'production' && !name) {\n      return console.warn('📋 Field is missing `name` prop.');\n    }\n\n    if (fieldsRef.current[name]) {\n      fieldsRef.current[name] = {\n        ref: fieldsRef.current[name]!.ref,\n        ...rules,\n      };\n    } else {\n      register(\n        Object.defineProperty({ name, focus: onFocusRef.current }, VALUE, {\n          set(data) {\n            setInputStateValue(data);\n            valueRef.current = data;\n          },\n          get() {\n            return valueRef.current;\n          },\n        }),\n        rules,\n      );\n      if (isNotFieldArray && !get(defaultValuesRef.current, name)) {\n        setInputStateValue(getInitialValue());\n      }\n    }\n  }, [fieldsRef, rules, name, onFocusRef, register]);\n\n  React.useEffect(\n    () => () => {\n      !isNameInFieldArray(fieldArrayNamesRef.current, name) && unregister(name);\n    },\n    [unregister, name, fieldArrayNamesRef],\n  );\n\n  React.useEffect(() => {\n    registerField();\n  }, [registerField]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  React.useEffect(() => {\n    if (!fieldsRef.current[name]) {\n      registerField();\n      if (isNotFieldArray) {\n        setInputStateValue(getInitialValue());\n      }\n    }\n  });\n\n  const onBlur = () => {\n    if (\n      readFormStateRef.current.touched &&\n      !get(touchedFieldsRef.current, name)\n    ) {\n      set(touchedFieldsRef.current, name, true);\n      reRender();\n    }\n\n    if (shouldValidate(true)) {\n      trigger(name);\n    }\n  };\n\n  const onChange = (...event: any[]) =>\n    setValue(name, commonTask(event), {\n      shouldValidate: shouldValidate(),\n      shouldDirty: true,\n    });\n\n  const props = {\n    ...rest,\n    onChange,\n    onBlur,\n    name,\n    value,\n  };\n\n  return as\n    ? React.isValidElement(as)\n      ? React.cloneElement(as, props)\n      : React.createElement(as as string, props)\n    : render\n    ? render({\n        onChange,\n        onBlur,\n        value,\n        name,\n      })\n    : null;\n};\n\nexport { Controller };\n"],"names":["value","HTMLElement","EVENTS","BLUR","CHANGE","INPUT","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","VALUE","SELECT","UNDEFINED","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","attachEventListeners","_a","shouldAttachChangeEvent","handleChange","ref","isHTMLElement","addEventListener","isObjectType","isNullOrUndefined","isArray","Date","test","input","result","replace","match","mathNumber","mathQuote","originalString","push","set","object","path","index","tempPath","isKey","stringToPath","length","lastIndex","key","newValue","objValue","isObject","isNaN","data","previous","_c","__read","val","undefined","Boolean","obj","defaultValue","unique","split","isUndefined","fields","fieldErrors","get","field","focus","options","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","option","checked","__spread","selected","element","type","defaultResult","validResult","values","attributes","getFieldValue","fieldsRef","name","unmountFieldsStateRef","current","isFileInput","files","isRadioInput","getRadioValue","isMultipleSelect","getMultipleSelectValue","isCheckBox","getCheckboxValue","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","baseGet","updatePath","unset","childObject","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isEmptyObject","isBoolean","isSameRef","fieldValue","findRemovedFieldAndRemoveListener","shouldUnregister","forceDelete","mutationWatcher","fieldRef","isCheckBoxInput","options_1","removeAllEventListeners","disconnect","deepMerge","target","source","targetValue","sourceValue","search","output","name_1","isString","transformToNestObject","error","_b","types","message","shouldRenderBasedOnError","errors","validFields","fieldsWithValidation","isFieldValid","isFormValid","currentFieldError","existFieldError","has","isSameError","RegExp","isValueMessage","isRegex","validationData","isValidElement","getValidateError","isMessage","validateAllFieldCriteria","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","appendErrors","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","requiredValue","requiredMessage","exceedMin","_d","maxValue","maxMessage","_e","minValue","minMessage","valueNumber","valueAsNumber","valueDate","valueAsDate","_f","maxLengthValue","_g","minLengthValue","inputLength","toString","_h","patternValue","patternMessage","getFieldsValue","validateRef","isFunction","_o","validateError","validationResult","_j","__values","_l","validateFunction","validateResult","getPath","getInnerPath","pathWithIndex","isPrimitive","Infinity","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","isOnBlur","isOnChange","isOnTouch","isTouched","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","substring","deepEqual","object1","object2","keys1","keys2","keys1_1","val1","val2","isMatchFieldArrayName","searchName","names","onDomRemove","onDetachCallback","observer","MutationObserver","observe","window","document","childList","subtree","mode","isOnSubmit","isWindowUndefined","isWeb","isProxyEnabled","Proxy","useForm","reValidateMode","resolver","context","defaultValues","shouldFocusError","criteriaMode","React.useRef","errorsRef","touchedFieldsRef","fieldArrayDefaultValues","dirtyFieldsRef","watchFieldsRef","watchFieldsHookRef","watchFieldsHookRenderRef","fieldsWithValidationRef","validFieldsRef","isValidRef","defaultValuesRef","defaultValuesAtRenderRef","isUnMount","isWatchAllRef","isSubmittedRef","isDirtyRef","submitCountRef","isSubmittingRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","React.useState","render","modeRef","modeChecker","isValidateAllFieldCriteria","readFormStateRef","isDirty","dirtyFields","submitCount","touched","isSubmitting","_k","reRender","React.useCallback","shouldRenderBaseOnError","shouldRender","shouldReRender","previousError","delete","setFieldValue","rawValue","radioRef","selectRef","checkboxRef","String","setDirty","isFieldDirty","isDirtyFieldExist","isFieldArray","isNameInFieldArray","previousIsDirty","getValues","getFieldArrayParentName","executeValidation","skipReRender","validateField","executeSchemaOrResolverValidation","payload","previousFormIsValid","isInputsValid","trigger","setInternalValues","shouldDirty","shouldValidate","setInternalValue","config","isFieldWatched","renderWatchedInputs","found","size","setValue","shouldSkipValidation","skipValidation","getFieldsValues","validateResolver","removeFieldEventListener","removeFieldEventListenerAndRef","clearErrors","inputName","setError","watchInternal","fieldNames","watchId","combinedDefaultValues","assignWatchFields","watch","unregister","registerFieldRef","validateOptions","console","warn","fieldRefAndValidationOptions","isRadioOrCheckboxFunction","compareRef","currentRef","isEmptyDefaultValue","isEmptyUnmountFields","then","isSelectInput","register","refOrValidationOptions","rules","handleSubmit","onValid","onInvalid","e","preventDefault","persist","fieldError","focusOnErrorField","resetRefs","reset","omitResetState","inputRef","closest","resetFieldArray","React.useEffect","formState","commonProps","prop","control","FormContext","React.createContext","displayName","useFormContext","React.useContext","FormProvider","children","props","React.createElement","Provider","__assign","d","performance","now","c","r","Math","random","removeAt","removeAtIndexes","from","to","indexA","indexB","temp","prepend","insert","Array","mapValueToBoolean","filterBooleanArray","appendId","keyName","generateId","mapIds","useFieldArray","methods","Error","focusIndexRef","getDefaultValues","memoizedDefaultValues","setFields","allFields","rootParentName","getCurrentFieldsValues","appendValueWithKey","setFieldAndValidState","fieldsValues","shouldRenderFieldArray","resetFields","flagOrFields","omitted","rest","append","shouldFocus","fillEmptyArray","emptyArray","prependAt","remove","removeArrayAt","fieldIndex_1","isFound","isIndexUndefined","isLast","isCurrentIndex","getFieldName","insertAt","swap","swapArrayAt","move","moveArrayAt","pop","shouldRenderUseWatch","watchField","resetFunctions","useWatch","idRef","defaultValueRef","updateWatchValue","id","watchFieldsHookRender","watchFieldsHook","event","Controller","as","onFocus","isNotFieldArray","getInitialValue","setInputStateValue","valueRef","onFocusRef","commonTask","getInputValue","registerField","_i","React.isValidElement","React.cloneElement"],"mappings":"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"}
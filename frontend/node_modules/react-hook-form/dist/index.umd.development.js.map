{"version":3,"file":"index.umd.development.js","sources":["../src/utils/isHTMLElement.ts","../src/constants.ts","../src/logic/attachEventListeners.ts","../src/utils/isNullOrUndefined.ts","../src/utils/isArray.ts","../src/utils/isObject.ts","../src/utils/isKey.ts","../src/utils/stringToPath.ts","../src/utils/set.ts","../src/logic/transformToNestObject.ts","../src/utils/isUndefined.ts","../src/utils/unique.ts","../src/utils/get.ts","../src/logic/focusOnErrorField.ts","../src/logic/removeAllEventListeners.ts","../src/logic/getRadioValue.ts","../src/logic/getMultipleSelectValue.ts","../src/utils/isRadioInput.ts","../src/utils/isFileInput.ts","../src/utils/isCheckBoxInput.ts","../src/utils/isMultipleSelect.ts","../src/logic/getCheckboxValue.ts","../src/logic/getFieldValue.ts","../src/utils/isDetached.ts","../src/utils/isEmptyObject.ts","../src/utils/isBoolean.ts","../src/utils/unset.ts","../src/logic/findRemovedFieldAndRemoveListener.ts","../src/utils/isString.ts","../src/utils/deepMerge.ts","../src/logic/getFieldsValues.ts","../src/utils/isSameError.ts","../src/logic/shouldRenderBasedOnError.ts","../src/utils/isRegex.ts","../src/logic/getValueAndMessage.ts","../src/utils/isFunction.ts","../src/utils/isMessage.ts","../src/logic/getValidateError.ts","../src/logic/appendErrors.ts","../src/logic/validateField.ts","../src/utils/isPrimitive.ts","../src/utils/getPath.ts","../src/logic/assignWatchFields.ts","../src/logic/skipValidation.ts","../src/logic/getFieldArrayParentName.ts","../src/logic/deepEqual.ts","../src/logic/isNameInFieldArray.ts","../src/utils/isSelectInput.ts","../src/utils/onDomRemove.ts","../src/utils/validationModeChecker.ts","../src/utils/isRadioOrCheckbox.ts","../src/useForm.ts","../src/useFormContext.tsx","../src/logic/generateId.ts","../src/utils/remove.ts","../src/utils/move.ts","../src/utils/swap.ts","../src/utils/prepend.ts","../src/utils/insert.ts","../src/utils/fillEmptyArray.ts","../src/utils/filterBooleanArray.ts","../src/useFieldArray.ts","../src/useWatch.ts","../src/logic/getInputValue.ts","../src/controller.tsx"],"sourcesContent":["export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { ValidationMode } from './types/form';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const VALUE = 'value';\n\nexport const SELECT = 'select';\n\nexport const UNDEFINED = 'undefined';\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Field } from '../types/form';\n\nexport default function attachEventListeners(\n  { ref }: Field,\n  shouldAttachChangeEvent: boolean,\n  handleChange?: EventListenerOrEventListenerObject,\n): void {\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(\n      shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT,\n      handleChange,\n    );\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n","export default (value: unknown): value is null | undefined => value == null;\n","export default <T>(value: unknown): value is T[] => Array.isArray(value);\n","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n","import isArray from './isArray';\n\nexport default (value: [] | string) =>\n  !isArray(value) &&\n  (/^\\w*$/.test(value) ||\n    !/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/.test(value));\n","export default (input: string): (string | number)[] => {\n  const result: (string | number)[] = [];\n\n  input.replace(\n    /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,\n    (\n      match: string,\n      mathNumber: string,\n      mathQuote: string,\n      originalString: string,\n    ): any => {\n      result.push(\n        mathQuote\n          ? originalString.replace(/\\\\(\\\\)?/g, '$1')\n          : mathNumber || match,\n      );\n    },\n  );\n\n  return result;\n};\n","import isObject from './isObject';\nimport isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport { FieldValues } from '../types/form';\n\nexport default function set(object: FieldValues, path: string, value: any) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue: string | object = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import set from '../utils/set';\nimport isKey from '../utils/isKey';\nimport { FieldValues } from '../types/form';\n\nexport default (data: FieldValues): any =>\n  Object.entries(data).reduce(\n    (previous: FieldValues, [key, value]): FieldValues => {\n      if (!isKey(key)) {\n        set(previous, key, value);\n        return previous;\n      }\n\n      return { ...previous, [key]: value };\n    },\n    {},\n  );\n","export default (val: unknown): val is undefined => val === undefined;\n","export default (value: any[]) => value.filter(Boolean);\n","import isUndefined from './isUndefined';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport unique from './unique';\n\nexport default (obj: any, path: string, defaultValue?: any) => {\n  const result = unique(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path])\n      ? defaultValue\n      : obj[path]\n    : result;\n};\n","import get from '../utils/get';\nimport { FieldErrors, FieldRefs } from '../types/form';\n\nexport default <TFieldValues>(\n  fields: FieldRefs<TFieldValues>,\n  fieldErrors: FieldErrors<TFieldValues>,\n) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n\n      if (field) {\n        if (field.ref.focus) {\n          field.ref.focus();\n\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n\n          break;\n        }\n      }\n    }\n  }\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Ref } from '../types/form';\n\nexport default (\n  ref: Ref,\n  validateWithStateUpdate: EventListenerOrEventListenerObject,\n): void => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n","import isArray from '../utils/isArray';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype RadioFieldResult = {\n  isValid: boolean;\n  value: number | string;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: '',\n};\n\nexport default (options?: RadioOrCheckboxOption[]): RadioFieldResult =>\n  isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.ref.checked\n            ? {\n                isValid: true,\n                value: option.ref.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-multiple`;\n","import isArray from '../utils/isArray';\nimport isUndefined from '../utils/isUndefined';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: RadioOrCheckboxOption[]): CheckboxFieldResult => {\n  if (isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.ref.checked)\n        .map(({ ref: { value } }) => value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    const { checked, value, attributes } = options[0].ref;\n\n    return checked\n      ? attributes && !isUndefined((attributes as any).value)\n        ? isUndefined(value) || value === ''\n          ? validResult\n          : { value: value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isFileInput from '../utils/isFileInput';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport getCheckboxValue from './getCheckboxValue';\nimport { FieldRefs, FieldValues, InternalFieldName } from '../types/form';\n\nexport default function getFieldValue<TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  name: InternalFieldName<TFieldValues>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n) {\n  const field = fieldsRef.current[name]!;\n\n  if (field) {\n    const {\n      ref: { value },\n      ref,\n    } = field;\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n\n    return value;\n  }\n\n  if (unmountFieldsStateRef) {\n    return unmountFieldsStateRef.current[name];\n  }\n}\n","import { Ref } from '../types/form';\n\nexport default function isDetached(element: Ref): boolean {\n  if (!element) {\n    return true;\n  }\n\n  if (\n    !(element instanceof HTMLElement) ||\n    element.nodeType === Node.DOCUMENT_NODE\n  ) {\n    return false;\n  }\n\n  return isDetached(element.parentNode as Ref);\n}\n","import isObject from './isObject';\nimport { EmptyObject } from '../types/utils';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport isEmptyObject from './isEmptyObject';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport isBoolean from './isBoolean';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const path = updatePath.slice(0, -1);\n  const length = path.length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef = undefined;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef = undefined;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (isArray(objectRef) &&\n            !objectRef.filter(\n              (data) =>\n                (isObject(data) && !isEmptyObject(data)) || isBoolean(data),\n            ).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import * as React from 'react';\nimport removeAllEventListeners from './removeAllEventListeners';\nimport getFieldValue from './getFieldValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDetached from '../utils/isDetached';\nimport isArray from '../utils/isArray';\nimport unset from '../utils/unset';\nimport unique from '../utils/unique';\nimport isUndefined from '../utils/isUndefined';\nimport { Field, FieldRefs, FieldValues, Ref } from '../types/form';\n\nconst isSameRef = (fieldValue: Field, ref: Ref) =>\n  fieldValue && fieldValue.ref === ref;\n\nexport default function findRemovedFieldAndRemoveListener<\n  TFieldValues extends FieldValues\n>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  handleChange: ({ type, target }: Event) => Promise<void | boolean>,\n  field: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n  shouldUnregister?: boolean,\n  forceDelete?: boolean,\n): void {\n  const {\n    ref,\n    ref: { name, type },\n    mutationWatcher,\n  } = field;\n  const fieldRef = fieldsRef.current[name] as Field;\n\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n\n    if (!isUndefined(value)) {\n      unmountFieldsStateRef.current[name] = value;\n    }\n  }\n\n  if (!type) {\n    delete fieldsRef.current[name];\n    return;\n  }\n\n  if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldRef) {\n    const { options } = fieldRef;\n\n    if (isArray(options) && options.length) {\n      unique(options).forEach((option, index): void => {\n        const { ref, mutationWatcher } = option;\n        if ((ref && isDetached(ref) && isSameRef(option, ref)) || forceDelete) {\n          removeAllEventListeners(ref, handleChange);\n\n          if (mutationWatcher) {\n            mutationWatcher.disconnect();\n          }\n\n          unset(options, `[${index}]`);\n        }\n      });\n\n      if (options && !unique(options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    if (mutationWatcher) {\n      mutationWatcher.disconnect();\n    }\n\n    delete fieldsRef.current[name];\n  }\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import isObject from './isObject';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>\n>(target: T, source: U): T & U {\n  if (!isObject(target) || !isObject(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = deepMerge(targetValue, sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  }\n\n  return target;\n}\n","import * as React from 'react';\nimport getFieldValue from './getFieldValue';\nimport isString from '../utils/isString';\nimport isArray from '../utils/isArray';\nimport { deepMerge } from '../utils/deepMerge';\nimport isUndefined from '../utils/isUndefined';\nimport { InternalFieldName, FieldValues, FieldRefs } from '../types/form';\nimport transformToNestObject from './transformToNestObject';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n  search?:\n    | InternalFieldName<TFieldValues>\n    | InternalFieldName<TFieldValues>[]\n    | { nest: boolean },\n) => {\n  const output = {} as TFieldValues;\n\n  for (const name in fieldsRef.current) {\n    if (\n      isUndefined(search) ||\n      (isString(search)\n        ? name.startsWith(search)\n        : isArray(search) && search.find((data) => name.startsWith(data)))\n    ) {\n      output[name as InternalFieldName<TFieldValues>] = getFieldValue(\n        fieldsRef,\n        name,\n      );\n    }\n  }\n\n  return deepMerge(\n    transformToNestObject((unmountFieldsStateRef || {}).current || {}),\n    transformToNestObject(output),\n  );\n};\n","import isObject from './isObject';\nimport { FieldError } from '../types/form';\n\nexport default (\n  error: FieldError | undefined,\n  { type, types = {}, message }: FieldError,\n): boolean =>\n  isObject(error) &&\n  error.type === type &&\n  error.message === message &&\n  Object.keys(error.types || {}).length === Object.keys(types).length &&\n  Object.entries(error.types || {}).every(\n    ([key, value]) => types[key] === value,\n  );\n","import isEmptyObject from '../utils/isEmptyObject';\nimport isSameError from '../utils/isSameError';\nimport get from '../utils/get';\nimport {\n  FieldValues,\n  InternalFieldName,\n  FieldErrors,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default function shouldRenderBasedOnError<\n  TFieldValues extends FieldValues\n>({\n  errors,\n  name,\n  error,\n  validFields,\n  fieldsWithValidation,\n}: {\n  errors: FieldErrors<TFieldValues>;\n  error: FlatFieldErrors<TFieldValues>;\n  name: InternalFieldName<TFieldValues>;\n  validFields: Set<InternalFieldName<TFieldValues>>;\n  fieldsWithValidation: Set<InternalFieldName<TFieldValues>>;\n}): boolean {\n  const isFieldValid = isEmptyObject(error);\n  const isFormValid = isEmptyObject(errors);\n  const currentFieldError = get(error, name);\n  const existFieldError = get(errors, name);\n\n  if (isFieldValid && validFields.has(name)) {\n    return false;\n  }\n\n  if (\n    isFormValid !== isFieldValid ||\n    (!isFormValid && !existFieldError) ||\n    (isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name))\n  ) {\n    return true;\n  }\n\n  return currentFieldError && !isSameError(existFieldError, currentFieldError);\n}\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport { ValidationRule, ValidationValueMessage } from '../types/form';\n\nconst isValueMessage = (\n  value?: ValidationRule,\n): value is ValidationValueMessage => isObject(value) && !isRegex(value);\n\nexport default (validationData?: ValidationRule) =>\n  isValueMessage(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","import { isValidElement } from 'react';\nimport isString from '../utils/isString';\nimport isObject from '../utils/isObject';\nimport { Message } from '../types/form';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || (isObject(value) && isValidElement(value));\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport { FieldError, ValidateResult, Ref } from '../types/form';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (isMessage(result) || (isBoolean(result) && !result)) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import {\n  InternalFieldName,\n  ValidateResult,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default <TFieldValues>(\n  name: InternalFieldName<TFieldValues>,\n  validateAllFieldCriteria: boolean,\n  errors: FlatFieldErrors<TFieldValues>,\n  type: string,\n  message: ValidateResult,\n) => {\n  if (validateAllFieldCriteria) {\n    const error = errors[name];\n\n    return {\n      ...error,\n      types: {\n        ...(error && error.types ? error.types : {}),\n        [type]: message || true,\n      },\n    };\n  }\n\n  return {};\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getCheckboxValue from './getCheckboxValue';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isRadioInput from '../utils/isRadioInput';\nimport getValueAndMessage from './getValueAndMessage';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isString from '../utils/isString';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isObject from '../utils/isObject';\nimport isFunction from '../utils/isFunction';\nimport getFieldsValue from './getFieldValue';\nimport isRegex from '../utils/isRegex';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport getValidateError from './getValidateError';\nimport appendErrors from './appendErrors';\nimport { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldValues,\n  FieldRefs,\n  Message,\n  FieldError,\n  InternalFieldName,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default async <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  validateAllFieldCriteria: boolean,\n  {\n    ref,\n    ref: { type, value },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n  }: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n): Promise<FlatFieldErrors<TFieldValues>> => {\n  const fields = fieldsRef.current;\n  const name: InternalFieldName<TFieldValues> = ref.name;\n  const error: FlatFieldErrors<TFieldValues> = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...(exceedMax\n        ? appendErrorsCurry(maxType, message)\n        : appendErrorsCurry(minType, message)),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\n      (isBoolean(value) && !value) ||\n      (isCheckBox && !getCheckboxValue(options).isValid) ||\n      (isRadio && !getRadioValue(options).isValid))\n  ) {\n    const { value: requiredValue, message: requiredMessage } = isMessage(\n      required,\n    )\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (requiredValue) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message: requiredMessage,\n        ref: isRadioOrCheckbox\n          ? ((fields[name] as Field).options || [])[0].ref\n          : ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, requiredMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\n    let exceedMax;\n    let exceedMin;\n    const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\n    const { value: minValue, message: minMessage } = getValueAndMessage(min);\n\n    if (type === 'number' || (!type && !isNaN(value))) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxValue)) {\n        exceedMax = valueNumber > maxValue;\n      }\n      if (!isNullOrUndefined(minValue)) {\n        exceedMin = valueNumber < minValue;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(value);\n      if (isString(maxValue)) {\n        exceedMax = valueDate > new Date(maxValue);\n      }\n      if (isString(minValue)) {\n        exceedMin = valueDate < new Date(minValue);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxMessage,\n        minMessage,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const {\n      value: maxLengthValue,\n      message: maxLengthMessage,\n    } = getValueAndMessage(maxLength);\n    const {\n      value: minLengthValue,\n      message: minLengthMessage,\n    } = getValueAndMessage(minLength);\n    const inputLength = value.toString().length;\n    const exceedMax =\n      !isNullOrUndefined(maxLengthValue) && inputLength > maxLengthValue;\n    const exceedMin =\n      !isNullOrUndefined(minLengthValue) && inputLength < minLengthValue;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty) {\n    const { value: patternValue, message: patternMessage } = getValueAndMessage(\n      pattern,\n    );\n\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message: patternMessage,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    const fieldValue = getFieldsValue(fieldsRef, name, unmountFieldsStateRef);\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(\n          validateResult,\n          validateRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: validateRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  return error;\n};\n","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nimport { Primitive } from '../types/utils';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isPrimitive from './isPrimitive';\nimport isObject from './isObject';\nimport { FieldValues, InternalFieldName } from '../types/form';\n\nexport const getPath = <TFieldValues extends FieldValues = FieldValues>(\n  path: InternalFieldName<TFieldValues>,\n  values: TFieldValues | any[],\n): any[] => {\n  const getInnerPath = (\n    value: any,\n    key: number | string,\n    isObject?: boolean,\n  ) => {\n    const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\n    return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\n  };\n\n  return Object.entries(values)\n    .map(([key, value]) => getInnerPath(value, key, isObject(values)))\n    .flat(Infinity);\n};\n","import get from '../utils/get';\nimport { getPath } from '../utils/getPath';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\nimport { DeepPartial } from '../types/utils';\nimport {\n  FieldValue,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n} from '../types/form';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldValues: TFieldValues,\n  fieldName: InternalFieldName<TFieldValues>,\n  watchFields: Set<InternalFieldName<TFieldValues>>,\n  inputValue: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  isSingleField?: boolean,\n):\n  | FieldValue<TFieldValues>\n  | UnpackNestedValue<DeepPartial<TFieldValues>>\n  | undefined => {\n  let value;\n\n  watchFields.add(fieldName);\n\n  if (isEmptyObject(fieldValues)) {\n    value = undefined;\n  } else {\n    value = get(fieldValues, fieldName);\n\n    if (isObject(value) || isArray(value)) {\n      getPath<TFieldValues>(\n        fieldName,\n        value as TFieldValues,\n      ).forEach((name: string) => watchFields.add(name));\n    }\n  }\n\n  return isUndefined(value)\n    ? isSingleField\n      ? inputValue\n      : get(inputValue, fieldName)\n    : value;\n};\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isOnTouch,\n  isTouched,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n  isOnAll,\n}: {\n  isOnAll?: boolean;\n  isOnBlur?: boolean;\n  isOnChange?: boolean;\n  isReValidateOnBlur?: boolean;\n  isReValidateOnChange?: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted?: boolean;\n  isOnTouch?: boolean;\n  isTouched?: boolean;\n}) => {\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (name: string) => name.substring(0, name.indexOf('['));\n","import isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\n\nexport default function deepEqual(object1: any = [], object2: any = []) {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    const val1 = object1[key];\n    const val2 = object2[key];\n\n    if (\n      (isObject(val1) || isArray(val1)) && (isObject(val2) || isArray(val2))\n        ? !deepEqual(val1, val2)\n        : val1 !== val2\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","export const isMatchFieldArrayName = (name: string, searchName: string) =>\n  RegExp(\n    `^${searchName}[\\\\d+]`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]'),\n  ).test(name);\n\nexport default (names: Set<string>, name: string) =>\n  [...names].some((current) => isMatchFieldArrayName(name, current));\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-one`;\n","import { Ref } from '../types/form';\nimport isDetached from './isDetached';\n\nexport default function onDomRemove(\n  element: Ref,\n  onDetachCallback: () => void,\n): MutationObserver {\n  const observer = new MutationObserver((): void => {\n    if (isDetached(element)) {\n      observer.disconnect();\n      onDetachCallback();\n    }\n  });\n\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true,\n  });\n\n  return observer;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types/form';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import isRadioInput from './isRadioInput';\nimport isCheckBoxInput from './isCheckBoxInput';\nimport { FieldElement } from '../types/form';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import * as React from 'react';\nimport attachEventListeners from './logic/attachEventListeners';\nimport transformToNestObject from './logic/transformToNestObject';\nimport focusOnErrorField from './logic/focusOnErrorField';\nimport findRemovedFieldAndRemoveListener from './logic/findRemovedFieldAndRemoveListener';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport shouldRenderBasedOnError from './logic/shouldRenderBasedOnError';\nimport validateField from './logic/validateField';\nimport assignWatchFields from './logic/assignWatchFields';\nimport skipValidation from './logic/skipValidation';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport deepEqual from './logic/deepEqual';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isRadioInput from './utils/isRadioInput';\nimport isSelectInput from './utils/isSelectInput';\nimport isFileInput from './utils/isFileInput';\nimport isObject from './utils/isObject';\nimport { getPath } from './utils/getPath';\nimport isPrimitive from './utils/isPrimitive';\nimport isFunction from './utils/isFunction';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isSameError from './utils/isSameError';\nimport isUndefined from './utils/isUndefined';\nimport onDomRemove from './utils/onDomRemove';\nimport get from './utils/get';\nimport set from './utils/set';\nimport unset from './utils/unset';\nimport modeChecker from './utils/validationModeChecker';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport unique from './utils/unique';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isHTMLElement from './utils/isHTMLElement';\nimport { EVENTS, UNDEFINED, VALIDATION_MODE } from './constants';\nimport {\n  UseFormMethods,\n  FieldValues,\n  UnpackNestedValue,\n  FieldName,\n  InternalFieldName,\n  FieldValue,\n  FieldErrors,\n  Field,\n  FieldRefs,\n  UseFormOptions,\n  ValidationRules,\n  SubmitHandler,\n  FieldElement,\n  FormStateProxy,\n  ReadFormState,\n  Ref,\n  HandleChange,\n  Touched,\n  FieldError,\n  RadioOrCheckboxOption,\n  OmitResetState,\n  DefaultValuesAtRender,\n  FlatFieldErrors,\n  NestedValue,\n  SetValueConfig,\n  ErrorOption,\n  SubmitErrorHandler,\n} from './types/form';\nimport { LiteralToPrimitive, DeepPartial, NonUndefined } from './types/utils';\n\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isWeb =\n  typeof document !== UNDEFINED &&\n  !isWindowUndefined &&\n  !isUndefined(window.HTMLElement);\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as UnpackNestedValue<DeepPartial<TFieldValues>>,\n  shouldFocusError = true,\n  shouldUnregister = true,\n  criteriaMode,\n}: UseFormOptions<TFieldValues, TContext> = {}): UseFormMethods<TFieldValues> {\n  const fieldsRef = React.useRef<FieldRefs<TFieldValues>>({});\n  const errorsRef = React.useRef<FieldErrors<TFieldValues>>({});\n  const touchedFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const fieldArrayDefaultValues = React.useRef<Record<string, unknown[]>>({});\n  const dirtyFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const watchFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const watchFieldsHookRef = React.useRef<\n    Record<string, Set<InternalFieldName<TFieldValues>>>\n  >({});\n  const watchFieldsHookRenderRef = React.useRef<Record<string, Function>>({});\n  const fieldsWithValidationRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const validFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const isValidRef = React.useRef(true);\n  const defaultValuesRef = React.useRef<\n    | FieldValue<UnpackNestedValue<TFieldValues>>\n    | UnpackNestedValue<DeepPartial<TFieldValues>>\n  >(defaultValues);\n  const defaultValuesAtRenderRef = React.useRef(\n    {} as DefaultValuesAtRender<TFieldValues>,\n  );\n  const isUnMount = React.useRef(false);\n  const isWatchAllRef = React.useRef(false);\n  const isSubmittedRef = React.useRef(false);\n  const isDirtyRef = React.useRef(false);\n  const submitCountRef = React.useRef(0);\n  const isSubmittingRef = React.useRef(false);\n  const handleChangeRef = React.useRef<HandleChange>();\n  const unmountFieldsStateRef = React.useRef<Record<string, any>>({});\n  const resetFieldArrayFunctionRef = React.useRef<Record<string, () => void>>(\n    {},\n  );\n  const contextRef = React.useRef(context);\n  const resolverRef = React.useRef(resolver);\n  const fieldArrayNamesRef = React.useRef<Set<string>>(new Set());\n  const [, render] = React.useState();\n  const modeRef = React.useRef(modeChecker(mode));\n  const {\n    current: { isOnSubmit, isOnTouch },\n  } = modeRef;\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    isSubmitted: isOnSubmit,\n    submitCount: !isProxyEnabled,\n    touched: !isProxyEnabled || isOnTouch,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n  });\n  const {\n    current: { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange },\n  } = React.useRef(modeChecker(reValidateMode));\n  contextRef.current = context;\n  resolverRef.current = resolver;\n\n  const reRender = React.useCallback(\n    () => !isUnMount.current && render({}),\n    [],\n  );\n\n  const shouldRenderBaseOnError = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      error: FlatFieldErrors<TFieldValues>,\n      shouldRender: boolean | null = false,\n    ): boolean | void => {\n      let shouldReRender =\n        shouldRender ||\n        shouldRenderBasedOnError<TFieldValues>({\n          errors: errorsRef.current,\n          error,\n          name,\n          validFields: validFieldsRef.current,\n          fieldsWithValidation: fieldsWithValidationRef.current,\n        });\n      const previousError = get(errorsRef.current, name);\n\n      if (isEmptyObject(error)) {\n        if (fieldsWithValidationRef.current.has(name) || resolverRef.current) {\n          validFieldsRef.current.add(name);\n          shouldReRender = shouldReRender || previousError;\n        }\n\n        errorsRef.current = unset(errorsRef.current, name);\n      } else {\n        validFieldsRef.current.delete(name);\n        shouldReRender =\n          shouldReRender ||\n          !previousError ||\n          !isSameError(previousError, error[name] as FieldError);\n\n        set(errorsRef.current, name, error[name]);\n      }\n\n      if (shouldReRender && !isNullOrUndefined(shouldRender)) {\n        reRender();\n        return true;\n      }\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (\n      { ref, options }: Field,\n      rawValue:\n        | FieldValue<TFieldValues>\n        | UnpackNestedValue<DeepPartial<TFieldValues>>\n        | undefined\n        | null\n        | boolean,\n    ) => {\n      const value =\n        isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\n          ? ''\n          : rawValue;\n\n      if (isRadioInput(ref) && options) {\n        options.forEach(\n          ({ ref: radioRef }: { ref: HTMLInputElement }) =>\n            (radioRef.checked = radioRef.value === value),\n        );\n      } else if (isFileInput(ref) && !isString(value)) {\n        ref.files = value as FileList;\n      } else if (isMultipleSelect(ref)) {\n        [...ref.options].forEach(\n          (selectRef) =>\n            (selectRef.selected = (value as string).includes(selectRef.value)),\n        );\n      } else if (isCheckBoxInput(ref) && options) {\n        options.length > 1\n          ? options.forEach(\n              ({ ref: checkboxRef }) =>\n                (checkboxRef.checked = String(\n                  value as string | boolean,\n                ).includes(checkboxRef.value)),\n            )\n          : (options[0].ref.checked = !!value);\n      } else {\n        ref.value = value;\n      }\n    },\n    [],\n  );\n\n  const setDirty = React.useCallback(\n    (name: InternalFieldName<TFieldValues>): boolean => {\n      const { isDirty, dirtyFields } = readFormStateRef.current;\n\n      if (!fieldsRef.current[name] || (!isDirty && !dirtyFields)) {\n        return false;\n      }\n\n      const isFieldDirty =\n        defaultValuesAtRenderRef.current[name] !==\n        getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      const isDirtyFieldExist = get(dirtyFieldsRef.current, name);\n      const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n      const previousIsDirty = isDirtyRef.current;\n\n      if (isFieldDirty) {\n        set(dirtyFieldsRef.current, name, true);\n      } else {\n        unset(dirtyFieldsRef.current, name);\n      }\n\n      isDirtyRef.current =\n        (isFieldArray &&\n          !deepEqual(\n            get(getValues(), getFieldArrayParentName(name)),\n            get(defaultValuesRef.current, getFieldArrayParentName(name)),\n          )) ||\n        !isEmptyObject(dirtyFieldsRef.current);\n\n      return (\n        (isDirty && previousIsDirty !== isDirtyRef.current) ||\n        (dirtyFields && isDirtyFieldExist !== get(dirtyFieldsRef.current, name))\n      );\n    },\n    [],\n  );\n\n  const executeValidation = React.useCallback(\n    async (\n      name: InternalFieldName<TFieldValues>,\n      skipReRender?: boolean,\n    ): Promise<boolean> => {\n      if (fieldsRef.current[name]) {\n        const error = await validateField<TFieldValues>(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          fieldsRef.current[name] as Field,\n          unmountFieldsStateRef,\n        );\n\n        shouldRenderBaseOnError(name, error, skipReRender ? null : false);\n\n        return isEmptyObject(error);\n      }\n\n      return false;\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const executeSchemaOrResolverValidation = React.useCallback(\n    async (\n      payload:\n        | InternalFieldName<TFieldValues>\n        | InternalFieldName<TFieldValues>[],\n    ) => {\n      const { errors } = await resolverRef.current!(\n        getValues() as TFieldValues,\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (isArray(payload)) {\n        const isInputsValid = payload\n          .map((name) => {\n            const error = get(errors, name);\n\n            if (error) {\n              set(errorsRef.current, name, error);\n            } else {\n              unset(errorsRef.current, name);\n            }\n\n            return !error;\n          })\n          .every(Boolean);\n\n        reRender();\n\n        return isInputsValid;\n      } else {\n        const error = get(errors, payload);\n\n        shouldRenderBaseOnError(\n          payload,\n          (error ? { [payload]: error } : {}) as FlatFieldErrors<TFieldValues>,\n          previousFormIsValid !== isValidRef.current,\n        );\n\n        return !error;\n      }\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const trigger = React.useCallback(\n    async (\n      name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n    ): Promise<boolean> => {\n      const fields = name || Object.keys(fieldsRef.current);\n\n      if (resolverRef.current) {\n        return executeSchemaOrResolverValidation(fields);\n      }\n\n      if (isArray(fields)) {\n        const result = await Promise.all(\n          fields.map(async (data) => await executeValidation(data, true)),\n        );\n        reRender();\n        return result.every(Boolean);\n      }\n\n      return await executeValidation(fields);\n    },\n    [executeSchemaOrResolverValidation, executeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues>,\n      { shouldDirty, shouldValidate }: SetValueConfig,\n    ) => {\n      getPath(name, value).forEach((fieldName) => {\n        const data = {};\n        const field = fieldsRef.current[fieldName];\n\n        if (field) {\n          set(data, name, value);\n          setFieldValue(field, get(data, fieldName));\n\n          if (shouldDirty) {\n            setDirty(fieldName);\n          }\n\n          if (shouldValidate) {\n            trigger(fieldName as FieldName<TFieldValues>);\n          }\n        }\n      });\n    },\n    [trigger, setFieldValue, setDirty],\n  );\n\n  const setInternalValue = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues> | null | undefined | boolean,\n      config: SetValueConfig,\n    ): boolean | void => {\n      if (fieldsRef.current[name]) {\n        setFieldValue(fieldsRef.current[name] as Field, value);\n        return config.shouldDirty && setDirty(name);\n      } else if (!isPrimitive(value)) {\n        setInternalValues(name, value, config);\n      }\n\n      if (!shouldUnregister) {\n        unmountFieldsStateRef.current[name] = value;\n      }\n\n      return true;\n    },\n    [setDirty, setFieldValue, setInternalValues],\n  );\n\n  const isFieldWatched = (name: string) =>\n    isWatchAllRef.current ||\n    watchFieldsRef.current.has(name) ||\n    watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n\n  const renderWatchedInputs = (name: string, found = true): boolean => {\n    if (!isEmptyObject(watchFieldsHookRef.current)) {\n      for (const key in watchFieldsHookRef.current) {\n        if (\n          !name ||\n          watchFieldsHookRef.current[key].has(name) ||\n          watchFieldsHookRef.current[key].has(getFieldArrayParentName(name)) ||\n          !watchFieldsHookRef.current[key].size\n        ) {\n          watchFieldsHookRenderRef.current[key]();\n          found = false;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  function setValue<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    value: NonUndefined<TFieldValue> extends NestedValue<infer U>\n      ? U\n      : UnpackNestedValue<DeepPartial<LiteralToPrimitive<TFieldValue>>>,\n    config: SetValueConfig = {},\n  ): void {\n    const shouldRender =\n      setInternalValue(name, value as TFieldValues[string], config) ||\n      isFieldWatched(name);\n\n    renderWatchedInputs(name);\n\n    if (shouldRender) {\n      reRender();\n    }\n\n    if (config.shouldValidate) {\n      trigger(name as any);\n    }\n  }\n\n  handleChangeRef.current = handleChangeRef.current\n    ? handleChangeRef.current\n    : async ({ type, target }: Event): Promise<void | boolean> => {\n        const name = (target as Ref)!.name;\n        const field = fieldsRef.current[name];\n        let error: FlatFieldErrors<TFieldValues>;\n\n        if (field) {\n          const isBlurEvent = type === EVENTS.BLUR;\n          const shouldSkipValidation = skipValidation({\n            isBlurEvent,\n            isReValidateOnChange,\n            isReValidateOnBlur,\n            isSubmitted: isSubmittedRef.current,\n            isTouched: !!get(touchedFieldsRef.current, name),\n            ...modeRef.current,\n          });\n          let shouldRender = setDirty(name) || isFieldWatched(name);\n\n          if (\n            isBlurEvent &&\n            !get(touchedFieldsRef.current, name) &&\n            readFormStateRef.current.touched\n          ) {\n            set(touchedFieldsRef.current, name, true);\n            shouldRender = true;\n          }\n\n          if (shouldSkipValidation) {\n            renderWatchedInputs(name);\n            return shouldRender && reRender();\n          }\n\n          if (resolverRef.current) {\n            const { errors } = await resolverRef.current(\n              getValues() as TFieldValues,\n              contextRef.current,\n              isValidateAllFieldCriteria,\n            );\n            const previousFormIsValid = isValidRef.current;\n            isValidRef.current = isEmptyObject(errors);\n\n            error = (get(errors, name)\n              ? { [name]: get(errors, name) }\n              : {}) as FlatFieldErrors<TFieldValues>;\n\n            if (previousFormIsValid !== isValidRef.current) {\n              shouldRender = true;\n            }\n          } else {\n            error = await validateField<TFieldValues>(\n              fieldsRef,\n              isValidateAllFieldCriteria,\n              field,\n              unmountFieldsStateRef,\n            );\n          }\n\n          renderWatchedInputs(name);\n\n          if (!shouldRenderBaseOnError(name, error) && shouldRender) {\n            reRender();\n          }\n        }\n      };\n\n  function getValues(): UnpackNestedValue<TFieldValues>;\n  function getValues<TFieldName extends string, TFieldValue extends unknown>(\n    name: TFieldName,\n  ): TFieldName extends keyof TFieldValues\n    ? UnpackNestedValue<TFieldValues>[TFieldName]\n    : TFieldValue;\n  function getValues<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function getValues(payload?: string | string[]): unknown {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, unmountFieldsStateRef);\n    }\n\n    if (isArray(payload)) {\n      return payload.reduce(\n        (previous, name) => ({\n          ...previous,\n          [name]: getFieldValue(fieldsRef, name, unmountFieldsStateRef),\n        }),\n        {},\n      );\n    }\n\n    return getFieldsValues(fieldsRef, unmountFieldsStateRef);\n  }\n\n  const validateResolver = React.useCallback(\n    async (values = {}) => {\n      const { errors } = await resolverRef.current!(\n        {\n          ...defaultValuesRef.current,\n          ...getValues(),\n          ...values,\n        },\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (previousFormIsValid !== isValidRef.current) {\n        reRender();\n      }\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const removeFieldEventListener = React.useCallback(\n    (field: Field, forceDelete?: boolean) =>\n      findRemovedFieldAndRemoveListener(\n        fieldsRef,\n        handleChangeRef.current!,\n        field,\n        unmountFieldsStateRef,\n        shouldUnregister,\n        forceDelete,\n      ),\n    [shouldUnregister],\n  );\n\n  const removeFieldEventListenerAndRef = React.useCallback(\n    (field: Field | undefined, forceDelete?: boolean) => {\n      if (\n        field &&\n        (!isNameInFieldArray(fieldArrayNamesRef.current, field.ref.name) ||\n          forceDelete)\n      ) {\n        removeFieldEventListener(field, forceDelete);\n\n        if (shouldUnregister) {\n          [\n            errorsRef,\n            touchedFieldsRef,\n            dirtyFieldsRef,\n            defaultValuesAtRenderRef,\n          ].forEach((data) => unset(data.current, field.ref.name));\n\n          [fieldsWithValidationRef, validFieldsRef].forEach((data) =>\n            data.current.delete(field.ref.name),\n          );\n\n          if (\n            readFormStateRef.current.isValid ||\n            readFormStateRef.current.touched ||\n            readFormStateRef.current.isDirty\n          ) {\n            isDirtyRef.current = !isEmptyObject(dirtyFieldsRef.current);\n            reRender();\n\n            if (resolverRef.current) {\n              validateResolver();\n            }\n          }\n        }\n      }\n    },\n    [validateResolver, removeFieldEventListener],\n  );\n\n  function clearErrors(\n    name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    if (name) {\n      (isArray(name) ? name : [name]).forEach((inputName) =>\n        unset(errorsRef.current, inputName),\n      );\n    } else {\n      errorsRef.current = {};\n    }\n\n    reRender();\n  }\n\n  function setError(name: FieldName<TFieldValues>, error: ErrorOption): void {\n    isValidRef.current = false;\n\n    set(errorsRef.current, name, {\n      ...error,\n      ref: (fieldsRef.current[name] || {})!.ref,\n    });\n\n    reRender();\n  }\n\n  const watchInternal = React.useCallback(\n    (\n      fieldNames?: string | string[],\n      defaultValue?: unknown,\n      watchId?: string,\n    ) => {\n      const watchFields = watchId\n        ? watchFieldsHookRef.current[watchId]\n        : watchFieldsRef.current;\n      const combinedDefaultValues = isUndefined(defaultValue)\n        ? defaultValuesRef.current\n        : defaultValue;\n      const fieldValues = getFieldsValues<TFieldValues>(\n        fieldsRef,\n        unmountFieldsStateRef,\n        fieldNames,\n      );\n\n      if (isString(fieldNames)) {\n        return assignWatchFields<TFieldValues>(\n          fieldValues,\n          fieldNames,\n          watchFields,\n          isUndefined(defaultValue)\n            ? get(combinedDefaultValues, fieldNames)\n            : (defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>),\n          true,\n        );\n      }\n\n      if (isArray(fieldNames)) {\n        return fieldNames.reduce(\n          (previous, name) => ({\n            ...previous,\n            [name]: assignWatchFields<TFieldValues>(\n              fieldValues,\n              name,\n              watchFields,\n              combinedDefaultValues as UnpackNestedValue<\n                DeepPartial<TFieldValues>\n              >,\n            ),\n          }),\n          {},\n        );\n      }\n\n      if (isUndefined(watchId)) {\n        isWatchAllRef.current = true;\n      }\n\n      return transformToNestObject(\n        (!isEmptyObject(fieldValues) && fieldValues) ||\n          (combinedDefaultValues as FieldValues),\n      );\n    },\n    [],\n  );\n\n  function watch(): UnpackNestedValue<TFieldValues>;\n  function watch<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    defaultValue?: UnpackNestedValue<LiteralToPrimitive<TFieldValue>>,\n  ): UnpackNestedValue<LiteralToPrimitive<TFieldValue>>;\n  function watch<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n    defaultValues?: UnpackNestedValue<\n      DeepPartial<Pick<TFieldValues, TFieldName>>\n    >,\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function watch(\n    names: string[],\n    defaultValues?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  ): UnpackNestedValue<DeepPartial<TFieldValues>>;\n  function watch(\n    fieldNames?: string | string[],\n    defaultValue?: unknown,\n  ): unknown {\n    return watchInternal(fieldNames, defaultValue);\n  }\n\n  function unregister(\n    name: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    (isArray(name) ? name : [name]).forEach((fieldName) =>\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true),\n    );\n  }\n\n  function registerFieldRef<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: TFieldElement & Ref,\n    validateOptions: ValidationRules | null = {},\n  ): ((name: InternalFieldName<TFieldValues>) => void) | void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ref.name) {\n        return console.warn('📋 Field is missing `name` attribute:', ref);\n      }\n\n      if (\n        fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) &&\n        !RegExp(\n          `^${ref.name.split(/\\[\\d+\\]$/)[0]}[\\\\d+]\\.\\\\w+`\n            .replace(/\\[/g, '\\\\[')\n            .replace(/\\]/g, '\\\\]'),\n        ).test(ref.name)\n      ) {\n        return console.warn(\n          '📋 `name` prop should be in object shape: name=\"test[index].name\". https://react-hook-form.com/api#useFieldArray',\n        );\n      }\n    }\n\n    const { name, type, value } = ref;\n    const fieldRefAndValidationOptions = {\n      ref,\n      ...validateOptions,\n    };\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    const compareRef = (currentRef: Ref) =>\n      isWeb && (!isHTMLElement(ref) || currentRef === ref);\n    let field = fields[name] as Field;\n    let isEmptyDefaultValue = true;\n    let isFieldArray;\n    let defaultValue;\n\n    if (\n      field &&\n      (isRadioOrCheckbox\n        ? isArray(field.options) &&\n          unique(field.options).find((option) => {\n            return value === option.ref.value && compareRef(option.ref);\n          })\n        : compareRef(field.ref))\n    ) {\n      fields[name] = {\n        ...field,\n        ...validateOptions,\n      };\n      return;\n    }\n\n    if (type) {\n      const mutationWatcher = onDomRemove(ref, () =>\n        removeFieldEventListenerAndRef(field),\n      );\n\n      field = isRadioOrCheckbox\n        ? {\n            options: [\n              ...unique((field && field.options) || []),\n              {\n                ref,\n                mutationWatcher,\n              } as RadioOrCheckboxOption,\n            ],\n            ref: { type, name },\n            ...validateOptions,\n          }\n        : {\n            ...fieldRefAndValidationOptions,\n            mutationWatcher,\n          };\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n\n    fields[name] = field;\n\n    const isEmptyUnmountFields = isUndefined(\n      get(unmountFieldsStateRef.current, name),\n    );\n\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(\n        isEmptyUnmountFields\n          ? defaultValuesRef.current\n          : unmountFieldsStateRef.current,\n        name,\n      );\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(field, defaultValue);\n      }\n    }\n\n    if (resolver && !isFieldArray && readFormStateRef.current.isValid) {\n      validateResolver();\n    } else if (!isEmptyObject(validateOptions)) {\n      fieldsWithValidationRef.current.add(name);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          field,\n          unmountFieldsStateRef,\n        ).then((error: FieldErrors) => {\n          const previousFormIsValid = isValidRef.current;\n\n          isEmptyObject(error)\n            ? validFieldsRef.current.add(name)\n            : (isValidRef.current = false);\n\n          if (previousFormIsValid !== isValidRef.current) {\n            reRender();\n          }\n        });\n      }\n    }\n\n    if (\n      !defaultValuesAtRenderRef.current[name] &&\n      !(isFieldArray && isEmptyDefaultValue)\n    ) {\n      const fieldValue = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      defaultValuesAtRenderRef.current[name] = isEmptyDefaultValue\n        ? isObject(fieldValue)\n          ? { ...fieldValue }\n          : fieldValue\n        : defaultValue;\n    }\n\n    if (type) {\n      attachEventListeners(\n        isRadioOrCheckbox && field.options\n          ? field.options[field.options.length - 1]\n          : field,\n        isRadioOrCheckbox || isSelectInput(ref),\n        handleChangeRef.current,\n      );\n    }\n  }\n\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    rules?: ValidationRules,\n  ): (ref: (TFieldElement & Ref) | null) => void;\n  function register(\n    name: FieldName<TFieldValues>,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: (TFieldElement & Ref) | null,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    refOrValidationOptions?:\n      | FieldName<TFieldValues>\n      | ValidationRules\n      | (TFieldElement & Ref)\n      | null,\n    rules?: ValidationRules,\n  ): ((ref: (TFieldElement & Ref) | null) => void) | void {\n    if (!isWindowUndefined) {\n      if (isString(refOrValidationOptions)) {\n        registerFieldRef({ name: refOrValidationOptions }, rules);\n      } else if (\n        isObject(refOrValidationOptions) &&\n        'name' in refOrValidationOptions\n      ) {\n        registerFieldRef(refOrValidationOptions, rules);\n      } else {\n        return (ref: (TFieldElement & Ref) | null) =>\n          ref && registerFieldRef(ref, refOrValidationOptions);\n      }\n    }\n  }\n\n  const handleSubmit = React.useCallback(\n    <TSubmitFieldValues extends FieldValues = TFieldValues>(\n      onValid: SubmitHandler<TSubmitFieldValues>,\n      onInvalid?: SubmitErrorHandler<TFieldValues>,\n    ) => async (e?: React.BaseSyntheticEvent): Promise<void> => {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.persist();\n      }\n      let fieldErrors: FieldErrors<TFieldValues> = {};\n      let fieldValues: FieldValues = getFieldsValues(\n        fieldsRef,\n        unmountFieldsStateRef,\n      );\n\n      if (readFormStateRef.current.isSubmitting) {\n        isSubmittingRef.current = true;\n        reRender();\n      }\n\n      try {\n        if (resolverRef.current) {\n          const { errors, values } = await resolverRef.current(\n            fieldValues as TFieldValues,\n            contextRef.current,\n            isValidateAllFieldCriteria,\n          );\n          errorsRef.current = errors;\n          fieldErrors = errors;\n          fieldValues = values;\n        } else {\n          for (const field of Object.values(fieldsRef.current)) {\n            if (field) {\n              const {\n                ref: { name },\n              } = field;\n\n              const fieldError = await validateField(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                unmountFieldsStateRef,\n              );\n\n              if (fieldError[name]) {\n                set(fieldErrors, name, fieldError[name]);\n                validFieldsRef.current.delete(name);\n              } else if (fieldsWithValidationRef.current.has(name)) {\n                unset(errorsRef.current, name);\n                validFieldsRef.current.add(name);\n              }\n            }\n          }\n        }\n\n        if (\n          isEmptyObject(fieldErrors) &&\n          Object.keys(errorsRef.current).every((name) =>\n            Object.keys(fieldsRef.current).includes(name),\n          )\n        ) {\n          errorsRef.current = {};\n          reRender();\n          await onValid(\n            fieldValues as UnpackNestedValue<TSubmitFieldValues>,\n            e,\n          );\n        } else {\n          errorsRef.current = {\n            ...errorsRef.current,\n            ...fieldErrors,\n          };\n          if (onInvalid) {\n            await onInvalid(fieldErrors, e);\n          }\n          if (shouldFocusError) {\n            focusOnErrorField(fieldsRef.current, fieldErrors);\n          }\n        }\n      } finally {\n        isSubmittedRef.current = true;\n        isSubmittingRef.current = false;\n        submitCountRef.current = submitCountRef.current + 1;\n        reRender();\n      }\n    },\n    [shouldFocusError, isValidateAllFieldCriteria],\n  );\n\n  const resetRefs = ({\n    errors,\n    isDirty,\n    isSubmitted,\n    touched,\n    isValid,\n    submitCount,\n    dirtyFields,\n  }: OmitResetState) => {\n    if (!errors) {\n      errorsRef.current = {};\n    }\n\n    if (!touched) {\n      touchedFieldsRef.current = {};\n    }\n\n    if (!isValid) {\n      validFieldsRef.current = new Set();\n      fieldsWithValidationRef.current = new Set();\n      isValidRef.current = true;\n    }\n\n    if (!isDirty) {\n      isDirtyRef.current = false;\n    }\n\n    if (!dirtyFields) {\n      dirtyFieldsRef.current = {};\n    }\n\n    if (!isSubmitted) {\n      isSubmittedRef.current = false;\n    }\n\n    if (!submitCount) {\n      submitCountRef.current = 0;\n    }\n\n    defaultValuesAtRenderRef.current = {} as DefaultValuesAtRender<\n      TFieldValues\n    >;\n    fieldArrayDefaultValues.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n  };\n\n  const reset = (\n    values?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n    omitResetState: OmitResetState = {},\n  ): void => {\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const { ref, options } = field;\n          const inputRef =\n            isRadioOrCheckboxFunction(ref) && isArray(options)\n              ? options[0].ref\n              : ref;\n\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n    }\n\n    fieldsRef.current = {};\n\n    defaultValuesRef.current = values || { ...defaultValuesRef.current };\n\n    if (values) {\n      renderWatchedInputs('');\n    }\n\n    unmountFieldsStateRef.current = shouldUnregister ? {} : values || {};\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(\n      (resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray(),\n    );\n\n    resetRefs(omitResetState);\n\n    reRender();\n  };\n\n  React.useEffect(() => {\n    isUnMount.current = false;\n\n    return () => {\n      isUnMount.current = true;\n\n      if (process.env.NODE_ENV !== 'production') {\n        return;\n      }\n\n      fieldsRef.current &&\n        Object.values(fieldsRef.current).forEach((field) =>\n          removeFieldEventListenerAndRef(field, true),\n        );\n    };\n  }, [removeFieldEventListenerAndRef]);\n\n  if (!resolver && readFormStateRef.current.isValid) {\n    isValidRef.current =\n      validFieldsRef.current.size >= fieldsWithValidationRef.current.size &&\n      isEmptyObject(errorsRef.current);\n  }\n\n  const formState = {\n    dirtyFields: dirtyFieldsRef.current,\n    isSubmitted: isSubmittedRef.current,\n    submitCount: submitCountRef.current,\n    touched: touchedFieldsRef.current,\n    isDirty: isDirtyRef.current,\n    isSubmitting: isSubmittingRef.current,\n    isValid: isOnSubmit\n      ? isSubmittedRef.current && isEmptyObject(errorsRef.current)\n      : isValidRef.current,\n  };\n\n  const commonProps = {\n    trigger,\n    setValue: React.useCallback(setValue, [\n      reRender,\n      setInternalValue,\n      trigger,\n    ]),\n    getValues: React.useCallback(getValues, []),\n    register: React.useCallback(register, [defaultValuesRef.current]),\n    unregister: React.useCallback(unregister, []),\n    formState: isProxyEnabled\n      ? new Proxy<FormStateProxy<TFieldValues>>(formState, {\n          get: (obj, prop: keyof FormStateProxy) => {\n            if (\n              process.env.NODE_ENV !== 'production' &&\n              prop === 'isValid' &&\n              isOnSubmit\n            ) {\n              console.warn(\n                '📋 `formState.isValid` is applicable with `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState',\n              );\n            }\n\n            if (prop in obj) {\n              readFormStateRef.current[prop] = true;\n              return obj[prop];\n            }\n\n            return undefined;\n          },\n        })\n      : formState,\n  };\n\n  const control = {\n    removeFieldEventListener,\n    renderWatchedInputs,\n    watchInternal,\n    reRender,\n    mode: modeRef.current,\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange,\n    },\n    errorsRef,\n    touchedFieldsRef,\n    fieldsRef,\n    isWatchAllRef,\n    watchFieldsRef,\n    resetFieldArrayFunctionRef,\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    fieldArrayDefaultValues,\n    validFieldsRef,\n    dirtyFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayNamesRef,\n    isDirtyRef,\n    isSubmittedRef,\n    readFormStateRef,\n    defaultValuesRef,\n    unmountFieldsStateRef,\n    validateResolver: resolver ? validateResolver : undefined,\n    ...commonProps,\n  };\n\n  return {\n    watch,\n    control,\n    handleSubmit,\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    setError: React.useCallback(setError, []),\n    errors: errorsRef.current,\n    ...commonProps,\n  };\n}\n","import * as React from 'react';\nimport { UseFormMethods, FieldValues } from './types/form';\nimport { FormProviderProps } from './types/props';\n\nconst FormContext = React.createContext<UseFormMethods | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues\n>(): UseFormMethods<TFieldValues> =>\n  React.useContext(FormContext) as UseFormMethods<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FormProviderProps<TFieldValues>) => (\n  <FormContext.Provider value={{ ...props } as UseFormMethods}>\n    {children}\n  </FormContext.Provider>\n);\n","import { UNDEFINED } from '../constants';\n\nexport default () => {\n  const d =\n    typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import isUndefined from './isUndefined';\nimport isArray from './isArray';\nimport unique from './unique';\n\nconst removeAt = <T>(data: T[], index: number): T[] => [\n  ...data.slice(0, index),\n  ...data.slice(index + 1),\n];\n\nfunction removeAtIndexes<T>(data: T[], index: number[]): T[] {\n  let k = -1;\n\n  while (++k < data.length) {\n    if (index.indexOf(k) >= 0) {\n      delete data[k];\n    }\n  }\n\n  return unique(data);\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : isArray(index)\n    ? removeAtIndexes(data, index)\n    : removeAt(data, index);\n","import isUndefined from './isUndefined';\nimport isArray from './isArray';\n\nexport default <T>(data: T[], from: number, to: number): (T | undefined)[] => {\n  if (isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined as any;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  const temp = [data[indexB], data[indexA]];\n  data[indexA] = temp[0];\n  data[indexB] = temp[1];\n};\n","import isArray from './isArray';\n\nexport default function prepend<T>(data: T[]): (T | undefined)[];\nexport default function prepend<T>(data: T[], value: T | T[]): T[];\nexport default function prepend<T>(\n  data: T[],\n  value?: T | T[],\n): (T | undefined)[] {\n  return [...(isArray(value) ? value : [value || undefined]), ...data];\n}\n","import isArray from './isArray';\n\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...(isArray(value) ? value : [value || undefined]),\n    ...data.slice(index),\n  ];\n}\n","import isArray from './isArray';\n\nexport default <T>(value: T | T[]): undefined[] | undefined =>\n  isArray(value) ? Array(value.length).fill(undefined) : undefined;\n","import isArray from './isArray';\nimport isObject from './isObject';\n\nfunction mapValueToBoolean(value: any) {\n  if (isObject(value)) {\n    const object: any = {};\n\n    for (const key in value) {\n      object[key] = true;\n    }\n\n    return [object];\n  }\n\n  return [true];\n}\n\nexport const filterBooleanArray = <T>(value: T): T[] =>\n  isArray(value)\n    ? value.map(mapValueToBoolean).flat()\n    : mapValueToBoolean(value);\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport { isMatchFieldArrayName } from './logic/isNameInFieldArray';\nimport generateId from './logic/generateId';\nimport isObject from './utils/isObject';\nimport deepEqual from './logic/deepEqual';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport get from './utils/get';\nimport set from './utils/set';\nimport isUndefined from './utils/isUndefined';\nimport removeArrayAt from './utils/remove';\nimport unset from './utils/unset';\nimport moveArrayAt from './utils/move';\nimport swapArrayAt from './utils/swap';\nimport prependAt from './utils/prepend';\nimport isArray from './utils/isArray';\nimport insertAt from './utils/insert';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport { filterBooleanArray } from './utils/filterBooleanArray';\nimport unique from './utils/unique';\nimport {\n  Field,\n  FieldValues,\n  UseFieldArrayOptions,\n  Control,\n  ArrayField,\n} from './types/form';\n\nconst appendId = <TValue extends object, TKeyName extends string>(\n  value: TValue,\n  keyName: TKeyName,\n): Partial<ArrayField<TValue, TKeyName>> => ({\n  [keyName]: generateId(),\n  ...(isObject(value) ? value : { value }),\n});\n\nconst mapIds = <TData extends object, TKeyName extends string>(\n  data: TData | TData[],\n  keyName: TKeyName,\n) => (isArray(data) ? data : []).map((value) => appendId(value, keyName));\n\nexport const useFieldArray = <\n  TFieldArrayValues extends FieldValues = FieldValues,\n  TKeyName extends string = 'id',\n  TControl extends Control = Control\n>({\n  control,\n  name,\n  keyName = 'id' as TKeyName,\n}: UseFieldArrayOptions<TKeyName, TControl>) => {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 useFieldArray is missing `control` prop.');\n    }\n\n    if (!name) {\n      console.warn('📋 useFieldArray is missing `name` attribute.');\n    }\n  }\n\n  const focusIndexRef = React.useRef(-1);\n  const {\n    isWatchAllRef,\n    resetFieldArrayFunctionRef,\n    fieldArrayNamesRef,\n    reRender,\n    fieldsRef,\n    defaultValuesRef,\n    removeFieldEventListener,\n    errorsRef,\n    dirtyFieldsRef,\n    isDirtyRef,\n    touchedFieldsRef,\n    readFormStateRef,\n    watchFieldsRef,\n    validFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayDefaultValues,\n    validateResolver,\n    renderWatchedInputs,\n    getValues,\n  } = control || methods.control;\n  let shouldRender;\n\n  const getDefaultValues = () => [\n    ...(get(fieldArrayDefaultValues.current, name) ||\n      get(defaultValuesRef.current, name) ||\n      []),\n  ];\n  const memoizedDefaultValues = React.useRef<Partial<TFieldArrayValues>[]>(\n    getDefaultValues(),\n  );\n  const [fields, setFields] = React.useState<\n    Partial<ArrayField<TFieldArrayValues, TKeyName>>[]\n  >(mapIds(memoizedDefaultValues.current, keyName));\n  const allFields = React.useRef<\n    Partial<ArrayField<TFieldArrayValues, TKeyName>>[]\n  >(fields);\n  const rootParentName = getFieldArrayParentName(name);\n\n  const getCurrentFieldsValues = () =>\n    get(getValues() || {}, name, allFields.current).map(\n      (item: Partial<TFieldArrayValues>, index: number) => ({\n        ...allFields.current[index],\n        ...item,\n      }),\n    );\n\n  allFields.current = fields;\n  fieldArrayNamesRef.current.add(name);\n\n  if (!get(fieldArrayDefaultValues.current, name) && rootParentName) {\n    set(\n      fieldArrayDefaultValues.current,\n      rootParentName,\n      get(defaultValuesRef.current, rootParentName),\n    );\n  }\n\n  const appendValueWithKey = (values: Partial<TFieldArrayValues>[]) =>\n    values.map((value: Partial<TFieldArrayValues>) => appendId(value, keyName));\n\n  const setFieldAndValidState = (\n    fieldsValues: Partial<ArrayField<TFieldArrayValues, TKeyName>>[],\n  ) => {\n    setFields(fieldsValues);\n\n    if (readFormStateRef.current.isValid && validateResolver) {\n      const values = {};\n      set(values, name, fieldsValues);\n      validateResolver(values);\n    }\n  };\n\n  const shouldRenderFieldArray = (shouldRender?: boolean) => {\n    renderWatchedInputs(name);\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty ||\n        readFormStateRef.current.isValid) &&\n      !isWatchAllRef.current\n    ) {\n      shouldRender = true;\n    }\n\n    shouldRender && reRender();\n  };\n\n  const resetFields = (\n    flagOrFields?: (Partial<TFieldArrayValues> | undefined)[],\n  ) => {\n    if (\n      readFormStateRef.current.isDirty ||\n      readFormStateRef.current.dirtyFields\n    ) {\n      isDirtyRef.current =\n        isUndefined(flagOrFields) ||\n        !deepEqual(\n          flagOrFields.map(({ [keyName]: omitted, ...rest } = {}) => rest),\n          get(defaultValuesRef.current, name, []),\n        );\n    }\n\n    for (const key in fieldsRef.current) {\n      if (isMatchFieldArrayName(key, name) && fieldsRef.current[key]) {\n        removeFieldEventListener(fieldsRef.current[key] as Field, true);\n      }\n    }\n  };\n\n  const append = (\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    shouldRender = false;\n    setFieldAndValidState([\n      ...allFields.current,\n      ...(isArray(value)\n        ? appendValueWithKey(value)\n        : [appendId(value, keyName)]),\n    ]);\n\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty\n    ) {\n      set(dirtyFieldsRef.current, name, [\n        ...(get(dirtyFieldsRef.current, name) ||\n          fillEmptyArray(fields.slice(0, 1))),\n        ...filterBooleanArray(value),\n      ]);\n      isDirtyRef.current = true;\n      shouldRender = true;\n    }\n\n    focusIndexRef.current = shouldFocus ? allFields.current.length : -1;\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const prepend = (\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    const emptyArray = fillEmptyArray(value);\n    shouldRender = false;\n\n    setFieldAndValidState(\n      prependAt(\n        getCurrentFieldsValues(),\n        isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)],\n      ),\n    );\n    resetFields();\n\n    if (isArray(get(errorsRef.current, name))) {\n      set(\n        errorsRef.current,\n        name,\n        prependAt(get(errorsRef.current, name), emptyArray),\n      );\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      set(\n        touchedFieldsRef.current,\n        name,\n        prependAt(get(touchedFieldsRef.current, name), emptyArray),\n      );\n      shouldRender = true;\n    }\n\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty\n    ) {\n      set(\n        dirtyFieldsRef.current,\n        name,\n        prependAt(\n          get(dirtyFieldsRef.current, name) || [],\n          filterBooleanArray(value),\n        ),\n      );\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n    focusIndexRef.current = shouldFocus ? 0 : -1;\n  };\n\n  const remove = (index?: number | number[]) => {\n    shouldRender = false;\n\n    const fieldValues = getCurrentFieldsValues();\n    setFieldAndValidState(removeArrayAt(fieldValues, index));\n    resetFields(removeArrayAt(fieldValues, index));\n\n    if (isArray(get(errorsRef.current, name))) {\n      set(\n        errorsRef.current,\n        name,\n        removeArrayAt(get(errorsRef.current, name), index),\n      );\n\n      if (!unique(get(errorsRef.current, name, [])).length) {\n        unset(errorsRef.current, name);\n      }\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      set(\n        touchedFieldsRef.current,\n        name,\n        removeArrayAt(get(touchedFieldsRef.current, name), index),\n      );\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFieldsRef.current, name)\n    ) {\n      set(\n        dirtyFieldsRef.current,\n        name,\n        removeArrayAt(get(dirtyFieldsRef.current, name), index),\n      );\n\n      if (!unique(get(dirtyFieldsRef.current, name, [])).length) {\n        unset(dirtyFieldsRef.current, name);\n      }\n\n      shouldRender = true;\n    }\n\n    if (readFormStateRef.current.isValid && !validateResolver) {\n      let fieldIndex = -1;\n      let isFound = false;\n      const isIndexUndefined = isUndefined(index);\n\n      while (fieldIndex++ < fields.length) {\n        const isLast = fieldIndex === fields.length - 1;\n        const isCurrentIndex =\n          (isArray(index) ? index : [index]).indexOf(fieldIndex) >= 0;\n\n        if (isCurrentIndex || isIndexUndefined) {\n          isFound = true;\n        }\n\n        if (!isFound) {\n          continue;\n        }\n\n        for (const key in fields[fieldIndex]) {\n          const getFieldName = (index = 0) =>\n            `${name}[${fieldIndex - index}].${key}`;\n\n          if (isCurrentIndex || isLast || isIndexUndefined) {\n            validFieldsRef.current.delete(getFieldName());\n            fieldsWithValidationRef.current.delete(getFieldName());\n          } else {\n            if (validFieldsRef.current.has(getFieldName())) {\n              validFieldsRef.current.add(getFieldName(1));\n            }\n            if (fieldsWithValidationRef.current.has(getFieldName())) {\n              fieldsWithValidationRef.current.add(getFieldName(1));\n            }\n          }\n        }\n      }\n    }\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const insert = (\n    index: number,\n    value: Partial<TFieldArrayValues> | Partial<TFieldArrayValues>[],\n    shouldFocus = true,\n  ) => {\n    shouldRender = false;\n    const emptyArray = fillEmptyArray(value);\n    const fieldValues = getCurrentFieldsValues();\n\n    setFieldAndValidState(\n      insertAt(\n        fieldValues,\n        index,\n        isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)],\n      ),\n    );\n    resetFields(insertAt(fieldValues, index));\n\n    if (isArray(get(errorsRef.current, name))) {\n      set(\n        errorsRef.current,\n        name,\n        insertAt(get(errorsRef.current, name), index, emptyArray),\n      );\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      set(\n        touchedFieldsRef.current,\n        name,\n        insertAt(get(touchedFieldsRef.current, name), index, emptyArray),\n      );\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFieldsRef.current, name)\n    ) {\n      set(\n        dirtyFieldsRef.current,\n        name,\n        insertAt(\n          get(dirtyFieldsRef.current, name),\n          index,\n          filterBooleanArray(value),\n        ),\n      );\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n\n    focusIndexRef.current = shouldFocus ? index : -1;\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    shouldRender = false;\n\n    const fieldValues = getCurrentFieldsValues();\n    swapArrayAt(fieldValues, indexA, indexB);\n    resetFields(fieldValues);\n    setFieldAndValidState([...fieldValues]);\n\n    if (isArray(get(errorsRef.current, name))) {\n      swapArrayAt(get(errorsRef.current, name), indexA, indexB);\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      swapArrayAt(get(touchedFieldsRef.current, name), indexA, indexB);\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFieldsRef.current, name)\n    ) {\n      swapArrayAt(get(dirtyFieldsRef.current, name), indexA, indexB);\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const move = (from: number, to: number) => {\n    shouldRender = false;\n    const fieldValues = getCurrentFieldsValues();\n    moveArrayAt(fieldValues, from, to);\n    resetFields(fieldValues);\n    setFieldAndValidState([...fieldValues]);\n\n    if (isArray(get(errorsRef.current, name))) {\n      moveArrayAt(get(errorsRef.current, name), from, to);\n    }\n\n    if (\n      readFormStateRef.current.touched &&\n      get(touchedFieldsRef.current, name)\n    ) {\n      moveArrayAt(get(touchedFieldsRef.current, name), from, to);\n      shouldRender = true;\n    }\n\n    if (\n      (readFormStateRef.current.dirtyFields ||\n        readFormStateRef.current.isDirty) &&\n      get(dirtyFieldsRef.current, name)\n    ) {\n      moveArrayAt(get(dirtyFieldsRef.current, name), from, to);\n      shouldRender = true;\n    }\n\n    shouldRenderFieldArray(shouldRender);\n  };\n\n  const reset = () => {\n    resetFields();\n    memoizedDefaultValues.current = getDefaultValues();\n    setFields(mapIds(memoizedDefaultValues.current, keyName));\n  };\n\n  React.useEffect(() => {\n    const defaultValues = get(fieldArrayDefaultValues.current, name);\n\n    if (defaultValues && fields.length < defaultValues.length) {\n      defaultValues.pop();\n      set(fieldArrayDefaultValues.current, name, defaultValues);\n    }\n\n    if (isWatchAllRef.current) {\n      reRender();\n    } else if (watchFieldsRef) {\n      let shouldRenderUseWatch = true;\n      for (const watchField of watchFieldsRef.current) {\n        if (watchField.startsWith(name)) {\n          reRender();\n          shouldRenderUseWatch = false;\n          break;\n        }\n      }\n\n      shouldRenderUseWatch && renderWatchedInputs(name);\n    }\n\n    if (focusIndexRef.current > -1) {\n      for (const key in fieldsRef.current) {\n        const field = fieldsRef.current[key];\n        if (\n          key.startsWith(`${name}[${focusIndexRef.current}]`) &&\n          field!.ref.focus\n        ) {\n          field!.ref.focus();\n          break;\n        }\n      }\n    }\n\n    focusIndexRef.current = -1;\n  }, [\n    fields,\n    name,\n    fieldArrayDefaultValues,\n    reRender,\n    fieldsRef,\n    watchFieldsRef,\n    isWatchAllRef,\n  ]);\n\n  React.useEffect(() => {\n    const resetFunctions = resetFieldArrayFunctionRef.current;\n    resetFunctions[name] = reset;\n\n    return () => {\n      resetFields();\n      delete resetFunctions[name];\n      fieldArrayNamesRef.current.delete(name);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    swap: React.useCallback(swap, [name]),\n    move: React.useCallback(move, [name]),\n    prepend: React.useCallback(prepend, [name]),\n    append: React.useCallback(append, [name]),\n    remove: React.useCallback(remove, [fields, name]),\n    insert: React.useCallback(insert, [name]),\n    fields,\n  };\n};\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport isUndefined from './utils/isUndefined';\nimport isString from './utils/isString';\nimport generateId from './logic/generateId';\nimport get from './utils/get';\nimport isArray from './utils/isArray';\nimport {\n  UseWatchOptions,\n  FieldValues,\n  UnpackNestedValue,\n  Control,\n} from './types/form';\nimport { DeepPartial } from './types/utils';\n\nexport function useWatch<TWatchFieldValues extends FieldValues>(props: {\n  defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\n  control?: Control;\n}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\nexport function useWatch<TWatchFieldValue extends any>(props: {\n  name: string;\n  control?: Control;\n}): undefined | UnpackNestedValue<TWatchFieldValue>;\nexport function useWatch<TWatchFieldValue extends any>(props: {\n  name: string;\n  defaultValue: UnpackNestedValue<TWatchFieldValue>;\n  control?: Control;\n}): UnpackNestedValue<TWatchFieldValue>;\nexport function useWatch<TWatchFieldValues extends FieldValues>(props: {\n  name: string[];\n  defaultValue?: UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\n  control?: Control;\n}): UnpackNestedValue<DeepPartial<TWatchFieldValues>>;\nexport function useWatch<TWatchFieldValues>({\n  control,\n  name,\n  defaultValue,\n}: UseWatchOptions): TWatchFieldValues {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!control && !methods) {\n      throw new Error('📋 useWatch is missing `control` prop.');\n    }\n\n    if (name === '') {\n      console.warn('📋 useWatch is missing `name` attribute.');\n    }\n  }\n\n  const {\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    watchInternal,\n    defaultValuesRef,\n  } = control || methods.control;\n  const [value, setValue] = React.useState<unknown>(\n    isUndefined(defaultValue)\n      ? isString(name)\n        ? get(defaultValuesRef.current, name)\n        : isArray(name)\n        ? name.reduce(\n            (previous, inputName) => ({\n              ...previous,\n              [inputName]: get(defaultValuesRef.current, inputName),\n            }),\n            {},\n          )\n        : defaultValuesRef.current\n      : defaultValue,\n  );\n  const idRef = React.useRef<string>();\n  const defaultValueRef = React.useRef(defaultValue);\n\n  const updateWatchValue = React.useCallback(\n    () => setValue(watchInternal(name, defaultValueRef.current, idRef.current)),\n    [setValue, watchInternal, defaultValueRef, name, idRef],\n  );\n\n  React.useEffect(() => {\n    const id = (idRef.current = generateId());\n    const watchFieldsHookRender = watchFieldsHookRenderRef.current;\n    const watchFieldsHook = watchFieldsHookRef.current;\n    watchFieldsHook[id] = new Set();\n    watchFieldsHookRender[id] = updateWatchValue;\n    watchInternal(name, defaultValueRef.current, id);\n\n    return () => {\n      delete watchFieldsHook[id];\n      delete watchFieldsHookRender[id];\n    };\n  }, [\n    name,\n    updateWatchValue,\n    watchFieldsHookRenderRef,\n    watchFieldsHookRef,\n    watchInternal,\n    defaultValueRef,\n  ]);\n\n  return (isUndefined(value) ? defaultValue : value) as TWatchFieldValues;\n}\n","import isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\n\nexport default (event: any) =>\n  isPrimitive(event) ||\n  !isObject(event.target) ||\n  (isObject(event.target) && !event.type)\n    ? event\n    : isUndefined(event.target.value)\n    ? event.target.checked\n    : event.target.value;\n","import * as React from 'react';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport set from './utils/set';\nimport getInputValue from './logic/getInputValue';\nimport skipValidation from './logic/skipValidation';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport { useFormContext } from './useFormContext';\nimport { VALUE } from './constants';\nimport { Control } from './types/form';\nimport { ControllerProps } from './types/props';\n\nconst Controller = <\n  TAs extends\n    | React.ReactElement\n    | React.ComponentType<any>\n    | 'input'\n    | 'select'\n    | 'textarea',\n  TControl extends Control = Control\n>({\n  name,\n  rules,\n  as,\n  render,\n  defaultValue,\n  control,\n  onFocus,\n  ...rest\n}: ControllerProps<TAs, TControl>) => {\n  const methods = useFormContext();\n\n  if (process.env.NODE_ENV !== 'production' && !control && !methods) {\n    throw new Error('📋 Controller is missing `control` prop.');\n  }\n\n  const {\n    defaultValuesRef,\n    setValue,\n    register,\n    unregister,\n    trigger,\n    mode,\n    reValidateMode: { isReValidateOnBlur, isReValidateOnChange },\n    isSubmittedRef,\n    touchedFieldsRef,\n    readFormStateRef,\n    reRender,\n    fieldsRef,\n    fieldArrayNamesRef,\n    unmountFieldsStateRef,\n  } = control || methods.control;\n  const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\n  const getInitialValue = () =>\n    !isUndefined(get(unmountFieldsStateRef.current, name)) && isNotFieldArray\n      ? unmountFieldsStateRef.current[name]\n      : isUndefined(defaultValue)\n      ? get(defaultValuesRef.current, name)\n      : defaultValue;\n  const [value, setInputStateValue] = React.useState(getInitialValue());\n  const valueRef = React.useRef(value);\n  const onFocusRef = React.useRef(onFocus);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (isUndefined(value)) {\n      console.warn(\n        '📋 Controller `defaultValue` or useForm `defaultValues` is missing.',\n      );\n    }\n\n    if (as && render) {\n      console.warn('📋 Should use either `as` or `render` prop.');\n    }\n\n    if (!isNotFieldArray && isUndefined(defaultValue)) {\n      console.warn(\n        '📋 Controller is missing `defaultValue` prop when using `useFieldArray`.',\n      );\n    }\n  }\n\n  const shouldValidate = (isBlurEvent?: boolean) =>\n    !skipValidation({\n      isBlurEvent,\n      isReValidateOnBlur,\n      isReValidateOnChange,\n      isSubmitted: isSubmittedRef.current,\n      ...mode,\n    });\n\n  const commonTask = ([event]: any[]) => {\n    const data = getInputValue(event);\n    setInputStateValue(data);\n    valueRef.current = data;\n    return data;\n  };\n\n  const registerField = React.useCallback(() => {\n    if (process.env.NODE_ENV !== 'production' && !name) {\n      return console.warn('📋 Field is missing `name` prop.');\n    }\n\n    if (fieldsRef.current[name]) {\n      fieldsRef.current[name] = {\n        ref: fieldsRef.current[name]!.ref,\n        ...rules,\n      };\n    } else {\n      register(\n        Object.defineProperty({ name, focus: onFocusRef.current }, VALUE, {\n          set(data) {\n            setInputStateValue(data);\n            valueRef.current = data;\n          },\n          get() {\n            return valueRef.current;\n          },\n        }),\n        rules,\n      );\n      if (isNotFieldArray && !get(defaultValuesRef.current, name)) {\n        setInputStateValue(getInitialValue());\n      }\n    }\n  }, [fieldsRef, rules, name, onFocusRef, register]);\n\n  React.useEffect(\n    () => () => {\n      !isNameInFieldArray(fieldArrayNamesRef.current, name) && unregister(name);\n    },\n    [unregister, name, fieldArrayNamesRef],\n  );\n\n  React.useEffect(() => {\n    registerField();\n  }, [registerField]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  React.useEffect(() => {\n    if (!fieldsRef.current[name]) {\n      registerField();\n      if (isNotFieldArray) {\n        setInputStateValue(getInitialValue());\n      }\n    }\n  });\n\n  const onBlur = () => {\n    if (\n      readFormStateRef.current.touched &&\n      !get(touchedFieldsRef.current, name)\n    ) {\n      set(touchedFieldsRef.current, name, true);\n      reRender();\n    }\n\n    if (shouldValidate(true)) {\n      trigger(name);\n    }\n  };\n\n  const onChange = (...event: any[]) =>\n    setValue(name, commonTask(event), {\n      shouldValidate: shouldValidate(),\n      shouldDirty: true,\n    });\n\n  const props = {\n    ...rest,\n    onChange,\n    onBlur,\n    name,\n    value,\n  };\n\n  return as\n    ? React.isValidElement(as)\n      ? React.cloneElement(as, props)\n      : React.createElement(as as string, props)\n    : render\n    ? render({\n        onChange,\n        onBlur,\n        value,\n        name,\n      })\n    : null;\n};\n\nexport { Controller };\n"],"names":["isCheckBox","isValidElement","getFieldsValue","React.useRef","React.useState","React.useCallback","React.useEffect","React.createContext","React.useContext","React.createElement","prepend","prependAt","insert","insertAt","React.isValidElement","React.cloneElement"],"mappings":"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"}